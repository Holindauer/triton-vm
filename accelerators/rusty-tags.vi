!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
A	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^impl<A> Tuple for (A,)$/;"	c
ALPHA	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^pub const ALPHA: u64 = 7;$/;"	C
ALPHA_INV	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^pub const ALPHA_INV: u64 = 10540996611094048183;$/;"	C
ALWAYS_TRUE	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^const ALWAYS_TRUE: u64 = u64::MAX;$/;"	C
AccessError	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/error.rs	/^    AccessError {$/;"	e	enum:Error
ActualSamplingMode	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^impl ActualSamplingMode {$/;"	c
ActualSamplingMode	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^pub(crate) enum ActualSamplingMode {$/;"	g
AlgebraicHasher	/home/einar/triton/twenty-first/twenty-first/src/util_types/algebraic_hasher.rs	/^pub trait AlgebraicHasher: Clone + Send + Sync {$/;"	i
AllWeightsZero	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^    AllWeightsZero,$/;"	e	enum:WeightedError
Alphanumeric	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^impl DistString for Alphanumeric {$/;"	c
Alphanumeric	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^impl Distribution<u8> for Alphanumeric {$/;"	c
Alphanumeric	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^pub struct Alphanumeric;$/;"	s
Append	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^trait Append<T> {$/;"	i
ArchivalMmr	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    impl<H: AlgebraicHasher> ArchivalMmr<H> {$/;"	c	module:mmr_test
ArchivalMmr	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^impl<H: AlgebraicHasher> ArchivalMmr<H> {$/;"	c
ArchivalMmr	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^impl<H> Mmr<H> for ArchivalMmr<H>$/;"	c
ArchivalMmr	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^pub struct ArchivalMmr<H: AlgebraicHasher> {$/;"	s
Array_bool_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^impl Array_bool_1d {$/;"	c
Array_bool_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^impl Drop for Array_bool_1d {$/;"	c
Array_bool_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^pub struct Array_bool_1d {$/;"	s
Array_i64_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^impl Array_i64_1d {$/;"	c
Array_i64_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^impl Drop for Array_i64_1d {$/;"	c
Array_i64_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^pub struct Array_i64_1d {$/;"	s
Array_u64_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^impl Array_u64_1d {$/;"	c
Array_u64_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^impl Drop for Array_u64_1d {$/;"	c
Array_u64_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^pub struct Array_u64_1d {$/;"	s
Array_u64_2d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^impl Array_u64_2d {$/;"	c
Array_u64_2d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^impl Drop for Array_u64_2d {$/;"	c
Array_u64_2d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^pub struct Array_u64_2d {$/;"	s
Array_u64_3d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^impl Array_u64_3d {$/;"	c
Array_u64_3d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^impl Drop for Array_u64_3d {$/;"	c
Array_u64_3d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^pub struct Array_u64_3d {$/;"	s
Array_u8_2d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^impl Array_u8_2d {$/;"	c
Array_u8_2d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^impl Drop for Array_u8_2d {$/;"	c
Array_u8_2d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^pub struct Array_u8_2d {$/;"	s
Array_u8_3d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^impl Array_u8_3d {$/;"	c
Array_u8_3d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^impl Drop for Array_u8_3d {$/;"	c
Array_u8_3d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^pub struct Array_u8_3d {$/;"	s
AsyncBencher	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/bencher.rs	/^impl<'a, 'b, A: AsyncExecutor, M: Measurement> AsyncBencher<'a, 'b, A, M> {$/;"	c
AsyncBencher	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/bencher.rs	/^pub struct AsyncBencher<'a, 'b, A: AsyncExecutor, M: Measurement = WallTime> {$/;"	s
AsyncExecutor	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/async_executor.rs	/^pub trait AsyncExecutor {$/;"	i
AsyncStdExecutor	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/async_executor.rs	/^impl AsyncExecutor for AsyncStdExecutor {$/;"	c
AsyncStdExecutor	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/async_executor.rs	/^pub struct AsyncStdExecutor;$/;"	s
Auto	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    Auto,$/;"	e	enum:SamplingMode
AxisScale	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^impl From<crate::AxisScale> for AxisScale {$/;"	c
AxisScale	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^pub enum AxisScale {$/;"	g
AxisScale	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^pub enum AxisScale {$/;"	g
AxisScale	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/summary.rs	/^impl AxisScale {$/;"	c
B	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^impl<A, B> Tuple for (A, B)$/;"	c
BENCHMARK_HELLO_SIZE	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^const BENCHMARK_HELLO_SIZE: usize = 9 \/\/BENCHMARK_MAGIC_NUMBER.len() \/\/ magic number$/;"	C
BENCHMARK_MAGIC_NUMBER	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^const BENCHMARK_MAGIC_NUMBER: &str = "Criterion";$/;"	C
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl Add for BFieldElement {$/;"	c
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl AddAssign for BFieldElement {$/;"	c
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl BFieldElement {$/;"	c
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl CyclicGroupGenerator for BFieldElement {$/;"	c
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl Div for BFieldElement {$/;"	c
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl Eq for BFieldElement {}$/;"	c
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl FiniteField for BFieldElement {}$/;"	c
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl From<[u8; 8]> for BFieldElement {$/;"	c
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl From<u32> for BFieldElement {$/;"	c
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl From<u64> for BFieldElement {$/;"	c
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl FromVecu8 for BFieldElement {$/;"	c
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl Hash for BFieldElement {$/;"	c
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl Inverse for BFieldElement {$/;"	c
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl ModPowU32 for BFieldElement {$/;"	c
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl ModPowU64 for BFieldElement {$/;"	c
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl Mul for BFieldElement {$/;"	c
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl MulAssign for BFieldElement {$/;"	c
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl Neg for BFieldElement {$/;"	c
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl New for BFieldElement {$/;"	c
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl One for BFieldElement {$/;"	c
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl PartialEq for BFieldElement {$/;"	c
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl PrimitiveRootOfUnity for BFieldElement {$/;"	c
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl Rem for BFieldElement {$/;"	c
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl Sub for BFieldElement {$/;"	c
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl SubAssign for BFieldElement {$/;"	c
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl Sum for BFieldElement {$/;"	c
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl Zero for BFieldElement {$/;"	c
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl fmt::Display for BFieldElement {$/;"	c
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^pub struct BFieldElement(u64);$/;"	s
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl Add<XFieldElement> for BFieldElement {$/;"	c
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl Mul<XFieldElement> for BFieldElement {$/;"	c
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl Sub<XFieldElement> for BFieldElement {$/;"	c
BFieldElement	/home/einar/triton/twenty-first/twenty-first/src/util_types/algebraic_hasher.rs	/^impl Hashable for BFieldElement {$/;"	c
BPoly	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^        type BPoly = Polynomial<BFieldElement>;$/;"	t	function:test_polynomials::fast_lagrange_interpolate_test
BPoly	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^        type BPoly = Polynomial<BFieldElement>;$/;"	t	function:test_polynomials::lagrange_interpolate_test
BUFSIZ	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const BUFSIZ: u32 = 8192;$/;"	C
BYTES	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    pub const BYTES: usize = 8;$/;"	C	implementation:BFieldElement
BYTES	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^    pub const BYTES: usize = DIGEST_LENGTH * BFieldElement::BYTES;$/;"	C	implementation:Digest
BYTES	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^impl From<Digest> for [u8; Digest::BYTES] {$/;"	c
BadAirBoundaryIndentity	/home/einar/triton/twenty-first/twenty-first/src/shared_math/stark/stark_verify_error.rs	/^    BadAirBoundaryIndentity(usize),$/;"	e	enum:StarkVerifyError
BadAirPaths	/home/einar/triton/twenty-first/twenty-first/src/shared_math/stark/stark_verify_error.rs	/^    BadAirPaths,$/;"	e	enum:StarkVerifyError
BadAirTransitionIdentity	/home/einar/triton/twenty-first/twenty-first/src/shared_math/stark/stark_verify_error.rs	/^    BadAirTransitionIdentity(usize),$/;"	e	enum:StarkVerifyError
BadBoundaryConditionAuthenticationPaths	/home/einar/triton/twenty-first/twenty-first/src/shared_math/stark/stark_verify_error.rs	/^    BadBoundaryConditionAuthenticationPaths,$/;"	e	enum:StarkVerifyError
BadMerkleProof	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    BadMerkleProof,$/;"	e	enum:ValidationError
BadMerkleProof	/home/einar/triton/twenty-first/twenty-first/src/shared_math/stark/stark_verify_error.rs	/^    BadMerkleProof(MerkleProofError),$/;"	e	enum:StarkVerifyError
BadMerkleRootForLastCodeword	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    BadMerkleRootForLastCodeword,$/;"	e	enum:ValidationError
BadNextAirPaths	/home/einar/triton/twenty-first/twenty-first/src/shared_math/stark/stark_verify_error.rs	/^    BadNextAirPaths,$/;"	e	enum:StarkVerifyError
BadSizedProof	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    BadSizedProof,$/;"	e	enum:ValidationError
Bandwidth	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/kde/mod.rs	/^impl Bandwidth {$/;"	c
Bandwidth	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/kde/mod.rs	/^pub enum Bandwidth {$/;"	g
Baseline	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^pub enum Baseline {$/;"	g
BatchSize	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^impl BatchSize {$/;"	c
BatchSize	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^pub enum BatchSize {$/;"	g
Batching	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<B, F, I> Iterator for Batching<I, F>$/;"	c
Batching	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I, F> fmt::Debug for Batching<I, F> where I: fmt::Debug {$/;"	c
Batching	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub struct Batching<I, F> {$/;"	s
BeginningBenchmark	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    BeginningBenchmark {$/;"	e	enum:OutgoingMessage
BeginningBenchmarkGroup	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    BeginningBenchmarkGroup {$/;"	e	enum:OutgoingMessage
Bencher	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/bencher.rs	/^impl<'a, M: Measurement> Bencher<'a, M> {$/;"	c
Bencher	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/bencher.rs	/^pub struct Bencher<'a, M: Measurement = WallTime> {$/;"	s
BencherReport	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^impl Report for BencherReport {$/;"	c
BencherReport	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^pub struct BencherReport;$/;"	s
Benchmark	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    Benchmark,$/;"	e	enum:Mode
BenchmarkConfig	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark.rs	/^pub struct BenchmarkConfig {$/;"	s
BenchmarkConfig	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^impl From<&crate::benchmark::BenchmarkConfig> for BenchmarkConfig {$/;"	c
BenchmarkConfig	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^pub struct BenchmarkConfig {$/;"	s
BenchmarkGroup	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^impl<'a, M: Measurement> BenchmarkGroup<'a, M> {$/;"	c
BenchmarkGroup	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^impl<'a, M: Measurement> Drop for BenchmarkGroup<'a, M> {$/;"	c
BenchmarkGroup	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^pub struct BenchmarkGroup<'a, M: Measurement> {$/;"	s
BenchmarkGroup	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^impl<'a> BenchmarkGroup<'a> {$/;"	c
BenchmarkGroup	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^struct BenchmarkGroup<'a> {$/;"	s
BenchmarkId	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    impl Sealed for super::BenchmarkId {}$/;"	c	module:private
BenchmarkId	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^impl BenchmarkId {$/;"	c
BenchmarkId	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^impl IntoBenchmarkId for BenchmarkId {$/;"	c
BenchmarkId	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^pub struct BenchmarkId {$/;"	s
BenchmarkId	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^impl BenchmarkId {$/;"	c
BenchmarkId	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^impl fmt::Debug for BenchmarkId {$/;"	c
BenchmarkId	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^impl fmt::Display for BenchmarkId {$/;"	c
BenchmarkId	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^pub struct BenchmarkId {$/;"	s
BenchmarkValueGroup	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^struct BenchmarkValueGroup<'a> {$/;"	s
Bernoulli	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^impl Bernoulli {$/;"	c
Bernoulli	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^impl Distribution<bool> for Bernoulli {$/;"	c
Bernoulli	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^pub struct Bernoulli {$/;"	s
BernoulliError	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^impl ::std::error::Error for BernoulliError {}$/;"	c
BernoulliError	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^impl fmt::Display for BernoulliError {$/;"	c
BernoulliError	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^pub enum BernoulliError {$/;"	g
BigUint	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^impl<const N: usize> From<U32s<N>> for BigUint {$/;"	c
BoolAsSIMD	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^pub(crate) trait BoolAsSIMD: Sized {$/;"	i
Borrowed	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^impl<'a, Borrowed> SampleBorrow<Borrowed> for &'a Borrowed$/;"	c
Borrowed	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^impl<Borrowed> SampleBorrow<Borrowed> for Borrowed$/;"	c
Both	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/either_or_both.rs	/^    Both(A, B),$/;"	e	enum:EitherOrBoth
BoundaryQuotientError	/home/einar/triton/twenty-first/twenty-first/src/shared_math/stark/stark_verify_error.rs	/^    BoundaryQuotientError(usize),$/;"	e	enum:MerkleProofError
Buffer	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^    type Buffer: Default + AsRef<[Option<Self::Item>]> + AsMut<[Option<Self::Item>]>;$/;"	t	interface:TupleCollect
Builder	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    type Builder = (Vec<A>, Vec<B>);$/;"	t
Builder	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    type Builder = (Vec<A>, Vec<B>, Vec<C>);$/;"	t
Builder	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    type Builder = (Vec<A>, Vec<B>, Vec<C>, Vec<D>);$/;"	t
Builder	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    type Builder = (Vec<A>,);$/;"	t
Builder	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    type Builder: TupledDistributionsBuilder<Item = Self>;$/;"	t	interface:Tuple
ByFn	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^    impl<F> fmt::Debug for ByFn<F> {$/;"	c	module:private
ByFn	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^    impl<K, V, F> KeyMethod<K, V> for ByFn<F>$/;"	c	module:private
ByFn	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^    pub struct ByFn<F>(pub(crate) F);$/;"	s	module:private
ById	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^    impl<V> KeyMethod<V, V> for ById {$/;"	c	module:private
ById	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^    pub struct ById;$/;"	s	module:private
Bytes	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    Bytes(u64),$/;"	e	enum:Throughput
Bytes	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    Bytes,$/;"	e	enum:ValueType
BytesDecimal	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    BytesDecimal(u64),$/;"	e	enum:Throughput
C	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^impl<A, B, C> Tuple for (A, B, C)$/;"	c
C	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^        const C: [[f32; 2]; 2] = [[1.6, 8.0 \/ 45.0], [10.0, 70.0 \/ 9.0]];$/;"	C	function:sample
C	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^        const C: [f32; 2] = [270.0, 330.0 \/ 9.0];$/;"	C	function:sample
CAPACITY	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^pub const CAPACITY: usize = 6;$/;"	C
CHANGE_STATS	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/mod.rs	/^const CHANGE_STATS: [Statistic; 2] = [Statistic::Mean, Statistic::Median];$/;"	C
CHAR_SURROGATE_LEN	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^const CHAR_SURROGATE_LEN: u32 = 0xE000 - CHAR_SURROGATE_START;$/;"	C
CHAR_SURROGATE_START	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^const CHAR_SURROGATE_START: u32 = 0xD800;$/;"	C
COMPARISON_COLORS	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/summary.rs	/^static COMPARISON_COLORS: [Color; NUM_COLORS] = [$/;"	v
COMPARISON_COLORS	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/summary.rs	/^static COMPARISON_COLORS: [RGBColor; NUM_COLORS] = [$/;"	v
ChangeDistributions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^impl ChangeDistributions {$/;"	c
ChangeDistributions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^pub struct ChangeDistributions {$/;"	s
ChangeEstimates	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^impl ChangeEstimates {$/;"	c
ChangeEstimates	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^pub struct ChangeEstimates {$/;"	s
ChangePointEstimates	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^pub struct ChangePointEstimates {$/;"	s
Chunk	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^impl<'a, I> Drop for Chunk<'a, I>$/;"	c
Chunk	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^impl<'a, I> Iterator for Chunk<'a, I>$/;"	c
Chunk	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^pub struct Chunk<'a, I: 'a>$/;"	s
ChunkHintedIterator	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    impl<I: ExactSizeIterator + Iterator + Clone> Iterator for ChunkHintedIterator<I> {$/;"	c	module:test
ChunkHintedIterator	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    struct ChunkHintedIterator<I: ExactSizeIterator + Iterator + Clone> {$/;"	s	module:test
ChunkIndex	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^impl ChunkIndex {$/;"	c
ChunkIndex	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^impl<A> KeyFunction<A> for ChunkIndex {$/;"	c
ChunkIndex	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^struct ChunkIndex {$/;"	s
Chunks	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^impl<'a, I> Iterator for Chunks<'a, I>$/;"	c
Chunks	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^pub struct Chunks<'a, I: 'a>$/;"	s
CircularTupleWindows	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^impl<I, T> Iterator for CircularTupleWindows<I, T>$/;"	c
CircularTupleWindows	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^pub struct CircularTupleWindows<I, T: Clone>$/;"	s
CliReport	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^impl CliReport {$/;"	c
CliReport	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^impl Report for CliReport {$/;"	c
CliReport	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^pub(crate) struct CliReport {$/;"	s
CliVerbosity	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^pub(crate) enum CliVerbosity {$/;"	g
Coalesce	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^pub type Coalesce<I, F> = CoalesceBy<I, F, <I as Iterator>::Item>;$/;"	t
CoalesceBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^impl<I, F, T> Iterator for CoalesceBy<I, F, T>$/;"	c
CoalesceBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^impl<I, F, T> fmt::Debug for CoalesceBy<I, F, T>$/;"	c
CoalesceBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^impl<I: Clone, F: Clone, T: Clone> Clone for CoalesceBy<I, F, T>$/;"	c
CoalesceBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^impl<I: Iterator, F: CoalescePredicate<I::Item, T>, T> FusedIterator for CoalesceBy<I, F, T> {}$/;"	c
CoalesceBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^pub struct CoalesceBy<I, F, T>$/;"	s
CoalescePredicate	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^pub trait CoalescePredicate<Item, T> {$/;"	i
CodewordEvaluation	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^type CodewordEvaluation<T> = (usize, T);$/;"	t
Combination	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    type Combination = Tuple1Combination<I>;$/;"	t	implementation:Item
Combination	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    type Combination: From<I> + Iterator<Item = Self>;$/;"	t	interface:HasCombination
Combinations	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/combinations.rs	/^impl<I: Iterator> Combinations<I> {$/;"	c
Combinations	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/combinations.rs	/^impl<I> Clone for Combinations<I>$/;"	c
Combinations	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/combinations.rs	/^impl<I> FusedIterator for Combinations<I>$/;"	c
Combinations	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/combinations.rs	/^impl<I> Iterator for Combinations<I>$/;"	c
Combinations	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/combinations.rs	/^impl<I> fmt::Debug for Combinations<I>$/;"	c
Combinations	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/combinations.rs	/^pub struct Combinations<I: Iterator> {$/;"	s
CombinationsWithReplacement	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/combinations_with_replacement.rs	/^impl<I> CombinationsWithReplacement<I>$/;"	c
CombinationsWithReplacement	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/combinations_with_replacement.rs	/^impl<I> FusedIterator for CombinationsWithReplacement<I>$/;"	c
CombinationsWithReplacement	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/combinations_with_replacement.rs	/^impl<I> Iterator for CombinationsWithReplacement<I>$/;"	c
CombinationsWithReplacement	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/combinations_with_replacement.rs	/^impl<I> fmt::Debug for CombinationsWithReplacement<I>$/;"	c
CombinationsWithReplacement	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/combinations_with_replacement.rs	/^pub struct CombinationsWithReplacement<I>$/;"	s
CompareLenient	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    CompareLenient,$/;"	e	enum:Baseline
CompareStrict	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    CompareStrict,$/;"	e	enum:Baseline
Comparison	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^struct Comparison {$/;"	s
ComparisonData	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^pub(crate) struct ComparisonData {$/;"	s
ComparisonResult	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^enum ComparisonResult {$/;"	g
ComparisonResult	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^enum ComparisonResult {$/;"	g
Complete	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/permutations.rs	/^    Complete(CompleteState),$/;"	e	enum:PermutationState
CompleteState	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/permutations.rs	/^enum CompleteState {$/;"	g
CompleteState	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/permutations.rs	/^impl CompleteState {$/;"	c
CompleteStateRemaining	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/permutations.rs	/^enum CompleteStateRemaining {$/;"	g
ConfidenceInterval	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^pub struct ConfidenceInterval {$/;"	s
ConfidenceInterval	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^struct ConfidenceInterval {$/;"	s
Connection	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^impl Connection {$/;"	c
Connection	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^pub struct Connection {$/;"	s
ConsTuples	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/cons_tuples_impl.rs	/^impl<I, J> Clone for ConsTuples<I, J>$/;"	c
ConsTuples	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/cons_tuples_impl.rs	/^pub struct ConsTuples<I, J>$/;"	s
Container	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^        type Container = JustValue<V>;$/;"	t	implementation:private::ById
Container	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^        type Container = KeyValue<K, V>;$/;"	t	module:private
Container	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^        type Container: KeyXorValue<K, V>;$/;"	t	interface:private::KeyMethod
Context	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^struct Context {$/;"	s
Continue	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    Continue,$/;"	e	enum:IncomingMessage
Continue	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    Continue(T),$/;"	e	enum:FoldWhile
CopyError	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/error.rs	/^    CopyError {$/;"	e	enum:Error
CpuParallel	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^impl<H: AlgebraicHasher> MerkleTreeMaker<H> for CpuParallel {$/;"	c
CpuParallel	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^pub struct CpuParallel;$/;"	s
Criterion	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^impl Default for Criterion {$/;"	c
Criterion	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^impl<M: Measurement> Criterion<M> {$/;"	c
Criterion	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^impl<M> Criterion<M>$/;"	c
Criterion	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^pub struct Criterion<M: Measurement = WallTime> {$/;"	s
CsvError	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/error.rs	/^    CsvError(CsvError),$/;"	e	enum:Error
CsvReportWriter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/csv_report.rs	/^impl<W: Write> CsvReportWriter<W> {$/;"	c
CsvReportWriter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/csv_report.rs	/^struct CsvReportWriter<W: Write> {$/;"	s
CsvRow	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/csv_report.rs	/^struct CsvRow<'a> {$/;"	s
CyclicGroupGenerator	/home/einar/triton/twenty-first/twenty-first/src/shared_math/traits.rs	/^pub trait CyclicGroupGenerator$/;"	i
D	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^impl<A, B, C, D> Tuple for (A, B, C, D)$/;"	c
D	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^impl<'a, T, D: Distribution<T>> Distribution<T> for &'a D {$/;"	c
DARK_BLUE	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^const DARK_BLUE: Color = Color::Rgb(31, 120, 180);$/;"	C
DARK_BLUE	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/mod.rs	/^const DARK_BLUE: RGBColor = RGBColor(31, 120, 180);$/;"	C
DARK_ORANGE	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^const DARK_ORANGE: Color = Color::Rgb(255, 127, 0);$/;"	C
DARK_ORANGE	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/mod.rs	/^const DARK_ORANGE: RGBColor = RGBColor(255, 127, 0);$/;"	C
DARK_RED	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^const DARK_RED: Color = Color::Rgb(227, 26, 28);$/;"	C
DARK_RED	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/mod.rs	/^const DARK_RED: RGBColor = RGBColor(227, 26, 28);$/;"	C
DEFAULT_FONT	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^static DEFAULT_FONT: &str = "Helvetica";$/;"	v
DEFAULT_FONT	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/mod.rs	/^static DEFAULT_FONT: FontFamily = FontFamily::SansSerif;$/;"	v
DENOM	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^        const DENOM: u32 = 10;$/;"	C	function:test::test_average
DENOM	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^        const DENOM: u32 = 10;$/;"	C	function:test::test_gen_ratio_average
DIGEST_LENGTH	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^pub const DIGEST_LENGTH: usize = 5;$/;"	C
DIM	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    const DIM: usize;$/;"	C	interface:FutharkType
DIM	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^   const DIM: usize = 1;$/;"	C	implementation:futhark_bool_1d
DIM	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^   const DIM: usize = 1;$/;"	C	implementation:futhark_i64_1d
DIM	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^   const DIM: usize = 1;$/;"	C	implementation:futhark_u64_1d
DIM	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^   const DIM: usize = 2;$/;"	C	implementation:futhark_u64_2d
DIM	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^   const DIM: usize = 2;$/;"	C	implementation:futhark_u8_2d
DIM	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^   const DIM: usize = 3;$/;"	C	implementation:futhark_u64_3d
DIM	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^   const DIM: usize = 3;$/;"	C	implementation:futhark_u8_3d
Data	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/mod.rs	/^impl<'a, X, Y> Clone for Data<'a, X, Y> {$/;"	c
Data	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/mod.rs	/^impl<'a, X, Y> Copy for Data<'a, X, Y> {}$/;"	c
Data	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/mod.rs	/^impl<'a, X, Y> Data<'a, X, Y> {$/;"	c
Data	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/mod.rs	/^impl<'a, X, Y> Data<'a, X, Y>$/;"	c
Data	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/mod.rs	/^pub struct Data<'a, X, Y>(&'a [X], &'a [Y]);$/;"	s
DatabaseArray	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_array.rs	/^impl<const N: u128, T: Serialize + DeserializeOwned + Default> DatabaseArray<N, T> {$/;"	c
DatabaseArray	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_array.rs	/^pub struct DatabaseArray<const N: u128, T: Serialize + DeserializeOwned + Default> {$/;"	s
DatabaseVector	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_vector.rs	/^impl<T: Serialize + DeserializeOwned> DatabaseVector<T> {$/;"	c
DatabaseVector	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_vector.rs	/^pub struct DatabaseVector<T: Serialize + DeserializeOwned> {$/;"	s
Dedup	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^pub type Dedup<I> = DedupBy<I, DedupEq>;$/;"	t
DedupBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^pub type DedupBy<I, Pred> = CoalesceBy<I, DedupPred2CoalescePred<Pred>, <I as Iterator>::Item>;$/;"	t
DedupByWithCount	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^pub type DedupByWithCount<I, Pred> =$/;"	t
DedupEq	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^impl<T: PartialEq> DedupPredicate<T> for DedupEq {$/;"	c
DedupEq	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^pub struct DedupEq;$/;"	s
DedupPred2CoalescePred	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^impl<DP, T> CoalescePredicate<T, T> for DedupPred2CoalescePred<DP>$/;"	c
DedupPred2CoalescePred	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^impl<DP> fmt::Debug for DedupPred2CoalescePred<DP> {$/;"	c
DedupPred2CoalescePred	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^pub struct DedupPred2CoalescePred<DP>(DP);$/;"	s
DedupPredWithCount2CoalescePred	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^impl<DP, T> CoalescePredicate<T, (usize, T)> for DedupPredWithCount2CoalescePred<DP>$/;"	c
DedupPredWithCount2CoalescePred	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^pub struct DedupPredWithCount2CoalescePred<DP>(DP);$/;"	s
DedupPredicate	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^pub trait DedupPredicate<T> {$/;"	i
DedupWithCount	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^pub type DedupWithCount<I> = DedupByWithCount<I, DedupEq>;$/;"	t
Degree	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^pub type Degree = i64;$/;"	t
Deserialization	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    Deserialization(ciborium::de::Error<std::io::Error>),$/;"	e	enum:MessageError
Diff	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/diff.rs	/^pub enum Diff<I, J>$/;"	g
Digest	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^impl Default for Digest {$/;"	c
Digest	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^impl Digest {$/;"	c
Digest	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^impl From<[u8; Digest::BYTES]> for Digest {$/;"	c
Digest	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^impl FromStr for Digest {$/;"	c
Digest	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^impl GetSize for Digest {$/;"	c
Digest	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^impl TryFrom<&[BFieldElement]> for Digest {$/;"	c
Digest	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^impl TryFrom<Vec<BFieldElement>> for Digest {$/;"	c
Digest	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^impl fmt::Display for Digest {$/;"	c
Digest	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^pub struct Digest([BFieldElement; DIGEST_LENGTH]);$/;"	s
Digest	/home/einar/triton/twenty-first/twenty-first/src/util_types/algebraic_hasher.rs	/^impl Hashable for Digest {$/;"	c
Discard	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    Discard,$/;"	e	enum:Baseline
DistIter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^impl<D, R, T> Iterator for DistIter<D, R, T>$/;"	c
DistIter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^impl<D, R, T> iter::FusedIterator for DistIter<D, R, T>$/;"	c
DistIter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^impl<D, R, T> iter::TrustedLen for DistIter<D, R, T>$/;"	c
DistIter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^pub struct DistIter<D, R, T> {$/;"	s
DistMap	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^impl<D, F, T, S> Distribution<S> for DistMap<D, F, T, S>$/;"	c
DistMap	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^pub struct DistMap<D, F, T, S> {$/;"	s
DistString	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^pub trait DistString {$/;"	i
Distribution	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/mod.rs	/^impl<A> Deref for Distribution<A> {$/;"	c
Distribution	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/mod.rs	/^impl<A> Distribution<A>$/;"	c
Distribution	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/mod.rs	/^pub struct Distribution<A>(Box<[A]>);$/;"	s
Distribution	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^impl<A, B, C, D> TupledDistributions$/;"	c
Distribution	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^impl<A, B, C> TupledDistributions for (Distribution<A>, Distribution<B>, Distribution<C>)$/;"	c
Distribution	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^impl<A, B> TupledDistributions for (Distribution<A>, Distribution<B>)$/;"	c
Distribution	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^impl<A> TupledDistributions for (Distribution<A>,)$/;"	c
Distribution	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^pub trait Distribution<T> {$/;"	i
Distributions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^impl Distributions {$/;"	c
Distributions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^pub struct Distributions {$/;"	s
Distributions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    type Distributions = ($/;"	t
Distributions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    type Distributions = (Distribution<A>, Distribution<B>);$/;"	t
Distributions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    type Distributions = (Distribution<A>, Distribution<B>, Distribution<C>);$/;"	t
Distributions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    type Distributions = (Distribution<A>,);$/;"	t
Distributions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    type Distributions: TupledDistributions<Item = Self>;$/;"	t	interface:Tuple
Done	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    Done(T),$/;"	e	enum:FoldWhile
Duplicates	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^pub type Duplicates<I> = private::DuplicatesBy<I, <I as Iterator>::Item, private::ById>;$/;"	t
DuplicatesBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^    impl<I, Key, F> DoubleEndedIterator for DuplicatesBy<I, Key, F>$/;"	c	module:private
DuplicatesBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^    impl<I, Key, F> Iterator for DuplicatesBy<I, Key, F>$/;"	c	module:private
DuplicatesBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^    impl<I, V, F> fmt::Debug for DuplicatesBy<I, V, F>$/;"	c	module:private
DuplicatesBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^    impl<I: Iterator, Key: Eq + Hash, F> DuplicatesBy<I, Key, F> {$/;"	c	module:private
DuplicatesBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^    pub struct DuplicatesBy<I: Iterator, Key, F> {$/;"	s	module:private
DuplicatesBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^pub type DuplicatesBy<I, V, F> = private::DuplicatesBy<I, V, private::ByFn<F>>;$/;"	t
Duration	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^impl From<std::time::Duration> for Duration {$/;"	c
Duration	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^struct Duration {$/;"	s
Duration	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^impl SampleUniform for Duration {$/;"	c
DurationFormatter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^impl DurationFormatter {$/;"	c
DurationFormatter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^impl ValueFormatter for DurationFormatter {$/;"	c
DurationFormatter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^pub(crate) struct DurationFormatter;$/;"	s
DyadicRational	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^impl Add for DyadicRational {$/;"	c
DyadicRational	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^impl DyadicRational {$/;"	c
DyadicRational	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^impl Eq for DyadicRational {}$/;"	c
DyadicRational	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^impl From<u32> for DyadicRational {$/;"	c
DyadicRational	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^impl Mul for DyadicRational {$/;"	c
DyadicRational	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^impl One for DyadicRational {$/;"	c
DyadicRational	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^impl Ord for DyadicRational {$/;"	c
DyadicRational	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^impl PartialEq for DyadicRational {$/;"	c
DyadicRational	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^impl PartialOrd for DyadicRational {$/;"	c
DyadicRational	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^impl Sub for DyadicRational {$/;"	c
DyadicRational	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^impl Zero for DyadicRational {$/;"	c
DyadicRational	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^pub struct DyadicRational {$/;"	s
EDMONDS_WEIGHT_CUTOFF_FACTOR	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^const EDMONDS_WEIGHT_CUTOFF_FACTOR: u64 = 2;$/;"	C
EMOJI_PER_BFE	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^pub const EMOJI_PER_BFE: usize = 3;$/;"	C
EOF	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const EOF: i32 = -1;$/;"	C
EPSILON32	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs	/^    const EPSILON32: f32 = ::core::f32::EPSILON;$/;"	C	module:tests
EPSILON64	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs	/^    const EPSILON64: f64 = ::core::f64::EPSILON;$/;"	C	module:tests
EXTENSION_DEGREE	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^pub const EXTENSION_DEGREE: usize = 3;$/;"	C
EitherOrBoth	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/either_or_both.rs	/^impl<A, B> EitherOrBoth<A, B> {$/;"	c
EitherOrBoth	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/either_or_both.rs	/^impl<A, B> Into<Option<Either<A, B>>> for EitherOrBoth<A, B> {$/;"	c
EitherOrBoth	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/either_or_both.rs	/^impl<T> EitherOrBoth<T, T> {$/;"	c
EitherOrBoth	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/either_or_both.rs	/^pub enum EitherOrBoth<A, B> {$/;"	g
Element	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    impl<N> Eq for Element<N> {}$/;"	c	function:sample_efraimidis_spirakis
Element	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    impl<N> Ord for Element<N> {$/;"	c	function:sample_efraimidis_spirakis
Element	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    impl<N> PartialEq for Element<N> {$/;"	c	function:sample_efraimidis_spirakis
Element	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    impl<N> PartialOrd for Element<N> {$/;"	c	function:sample_efraimidis_spirakis
Element	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    struct Element<N> {$/;"	s	function:sample_efraimidis_spirakis
Elements	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    Elements(u64),$/;"	e	enum:Throughput
Elements	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    Elements,$/;"	e	enum:ValueType
Empty	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/permutations.rs	/^    Empty,$/;"	e	enum:PermutationState
EmptyInput	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    EmptyInput,$/;"	e	enum:PrecalculationError
EmptySlice	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs	/^impl core::fmt::Display for EmptySlice {$/;"	c
EmptySlice	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs	/^impl std::error::Error for EmptySlice {}$/;"	c
EmptySlice	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs	/^pub struct EmptySlice;$/;"	s
Err	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^    type Err = String;$/;"	t	implementation:Digest
Error	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/error.rs	/^impl From<CsvError> for Error {$/;"	c
Error	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/error.rs	/^impl StdError for Error {$/;"	c
Error	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/error.rs	/^impl fmt::Display for Error {$/;"	c
Error	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/error.rs	/^pub enum Error {$/;"	g
Error	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^impl Display for Error {$/;"	c
Error	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^impl From<FutharkError> for Error {$/;"	c
Error	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^impl std::error::Error for Error {}$/;"	c
Error	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^pub enum Error {$/;"	g
Error	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    type Error = &'static str;$/;"	t	implementation:U32s
Error	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    type Error = TryFromIntError;$/;"	t	implementation:u32
Error	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^    type Error = String;$/;"	t	implementation:Digest
Error	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    type Error = String;$/;"	t	implementation:XFieldElement
Estimate	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^pub struct Estimate {$/;"	s
Estimates	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^impl Estimates {$/;"	c
Estimates	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^pub struct Estimates {$/;"	s
EvaluationArgument	/home/einar/triton/twenty-first/twenty-first/src/shared_math/stark/stark_verify_error.rs	/^    EvaluationArgument(usize),$/;"	e	enum:StarkVerifyError
ExactlyOneError	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/exactly_one_err.rs	/^impl<I> Debug for ExactlyOneError<I> $/;"	c
ExactlyOneError	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/exactly_one_err.rs	/^impl<I> Display for ExactlyOneError<I> $/;"	c
ExactlyOneError	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/exactly_one_err.rs	/^impl<I> Error for ExactlyOneError<I>  where I: Iterator + Debug, I::Item: Debug, {}$/;"	c
ExactlyOneError	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/exactly_one_err.rs	/^impl<I> ExactSizeIterator for ExactlyOneError<I> where I: ExactSizeIterator {}$/;"	c
ExactlyOneError	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/exactly_one_err.rs	/^impl<I> ExactlyOneError<I>$/;"	c
ExactlyOneError	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/exactly_one_err.rs	/^impl<I> Iterator for ExactlyOneError<I>$/;"	c
ExactlyOneError	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/exactly_one_err.rs	/^pub struct ExactlyOneError<I>$/;"	s
ExternalProfiler	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/profiler.rs	/^impl Profiler for ExternalProfiler {$/;"	c
ExternalProfiler	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/profiler.rs	/^pub struct ExternalProfiler;$/;"	s
F	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^impl<F, Item, T> CoalescePredicate<Item, T> for F$/;"	c
F	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^impl<T, F: FnMut(&T, &T) -> bool> DedupPredicate<T> for F {$/;"	c
F	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<T, F: FnMut(&T, &T)->bool> MergePredicate<T> for F {$/;"	c
F	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^impl<A, K, F: ?Sized> KeyFunction<A> for F$/;"	c
F	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/intersperse.rs	/^impl<Item, F: FnMut()->Item> IntersperseElement<Item> for F {$/;"	c
F	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/kmerge_impl.rs	/^impl<T, F: FnMut(&T, &T)->bool> KMergePredicate<T> for F {$/;"	c
F	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs	/^    type F;$/;"	t	interface:IntoFloat
FILE	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type FILE = _IO_FILE;$/;"	t
FILENAME_MAX	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const FILENAME_MAX: u32 = 4096;$/;"	C
FIRST_TEN_THOUSAND_PRIMES	/home/einar/triton/twenty-first/twenty-first/src/utils.rs	/^pub const FIRST_TEN_THOUSAND_PRIMES: &[u64] = &[$/;"	C
FIRST_THOUSAND_PRIMES	/home/einar/triton/twenty-first/twenty-first/src/utils.rs	/^pub const FIRST_THOUSAND_PRIMES: &[u64] = &[$/;"	C
FOPEN_MAX	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const FOPEN_MAX: u32 = 16;$/;"	C
FUTHARK_OUT_OF_MEMORY	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const FUTHARK_OUT_OF_MEMORY: u32 = 3;$/;"	C
FUTHARK_PROGRAM_ERROR	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const FUTHARK_PROGRAM_ERROR: u32 = 2;$/;"	C
FUTHARK_SUCCESS	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const FUTHARK_SUCCESS: u32 = 0;$/;"	C
FileCsvReport	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/csv_report.rs	/^impl FileCsvReport {$/;"	c
FileCsvReport	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/csv_report.rs	/^impl Report for FileCsvReport {$/;"	c
FileCsvReport	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/csv_report.rs	/^pub struct FileCsvReport;$/;"	s
Fill	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^pub trait Fill {$/;"	i
FilterMapOk	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I, F, T, U, E> FusedIterator for FilterMapOk<I, F>$/;"	c
FilterMapOk	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I, F, T, U, E> Iterator for FilterMapOk<I, F>$/;"	c
FilterMapOk	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I, F> fmt::Debug for FilterMapOk<I, F>$/;"	c
FilterMapOk	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub struct FilterMapOk<I, F> {$/;"	s
FilterOk	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I, F, T, E> FusedIterator for FilterOk<I, F>$/;"	c
FilterOk	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I, F, T, E> Iterator for FilterOk<I, F>$/;"	c
FilterOk	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I, F> fmt::Debug for FilterOk<I, F>$/;"	c
FilterOk	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub struct FilterOk<I, F> {$/;"	s
FinishedBenchmarkGroup	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    FinishedBenchmarkGroup {$/;"	e	enum:OutgoingMessage
FiniteField	/home/einar/triton/twenty-first/twenty-first/src/shared_math/traits.rs	/^pub trait FiniteField:$/;"	i
First	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/with_position.rs	/^    First(T),$/;"	e	enum:Position
FirstMismatch	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/diff.rs	/^    FirstMismatch(usize, PutBack<I>, PutBack<J>),$/;"	e	enum:Diff
Flat	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    Flat,$/;"	e	enum:SamplingMethod
Flat	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    Flat,$/;"	e	enum:ActualSamplingMode
Flat	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    Flat,$/;"	e	enum:SamplingMode
FlattenOk	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/flatten_ok.rs	/^impl<I, T, E> Clone for FlattenOk<I, T, E>$/;"	c
FlattenOk	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/flatten_ok.rs	/^impl<I, T, E> DoubleEndedIterator for FlattenOk<I, T, E>$/;"	c
FlattenOk	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/flatten_ok.rs	/^impl<I, T, E> FusedIterator for FlattenOk<I, T, E>$/;"	c
FlattenOk	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/flatten_ok.rs	/^impl<I, T, E> Iterator for FlattenOk<I, T, E>$/;"	c
FlattenOk	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/flatten_ok.rs	/^impl<I, T, E> fmt::Debug for FlattenOk<I, T, E>$/;"	c
FlattenOk	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/flatten_ok.rs	/^pub struct FlattenOk<I, T, E>$/;"	s
Float	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/float.rs	/^pub trait Float:$/;"	i
Float	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^pub(crate) trait Float: Sized {$/;"	i
FloatAsSIMD	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^pub(crate) trait FloatAsSIMD: Sized {$/;"	i
FloatSIMDUtils	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^pub(crate) trait FloatSIMDUtils {$/;"	i
FoldWhile	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^impl<T> FoldWhile<T> {$/;"	c
FoldWhile	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^pub enum FoldWhile<T> {$/;"	g
Format	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/format.rs	/^impl<'a, I> Format<'a, I>$/;"	c
Format	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/format.rs	/^pub struct Format<'a, I> {$/;"	s
FormatThroughput	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    FormatThroughput {$/;"	e	enum:IncomingMessage
FormatValue	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    FormatValue {$/;"	e	enum:IncomingMessage
FormatWith	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/format.rs	/^impl<'a, I, F> fmt::Display for FormatWith<'a, I, F>$/;"	c
FormatWith	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/format.rs	/^pub struct FormatWith<'a, I, F> {$/;"	s
FormattedValue	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    FormattedValue {$/;"	e	enum:OutgoingMessage
Fri	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^impl<H> Fri<H>$/;"	c
Fri	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^pub struct Fri<H> {$/;"	s
FriDomain	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^impl FriDomain {$/;"	c
FriDomain	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^pub struct FriDomain {$/;"	s
FromCtx	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/traits.rs	/^pub(crate) trait FromCtx<T>: Sized {$/;"	i
FromVecu8	/home/einar/triton/twenty-first/twenty-first/src/shared_math/traits.rs	/^pub trait FromVecu8 {$/;"	i
Function	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/routine.rs	/^impl<M: Measurement, F, T> Function<M, F, T>$/;"	c
Function	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/routine.rs	/^impl<M: Measurement, F, T> Routine<M, T> for Function<M, F, T>$/;"	c
Function	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/routine.rs	/^pub struct Function<M: Measurement, F, T>$/;"	s
FutharkContext	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/context.rs	/^impl FutharkContext {$/;"	c
FutharkContext	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/context.rs	/^pub struct FutharkContext {$/;"	s
FutharkContext	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/context.rs	/^unsafe impl Send for FutharkContext {}$/;"	c
FutharkContext	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/context.rs	/^unsafe impl Sync for FutharkContext {}$/;"	c
FutharkContext	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^impl FutharkContext {$/;"	c
FutharkError	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^    FutharkError(FutharkError),$/;"	e	enum:Error
FutharkError	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^impl Display for FutharkError {$/;"	c
FutharkError	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^impl FutharkError {$/;"	c
FutharkError	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^impl std::error::Error for FutharkError {}$/;"	c
FutharkError	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^pub struct FutharkError {$/;"	s
FutharkType	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^pub(crate) trait FutharkType {$/;"	i
FuturesExecutor	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/async_executor.rs	/^impl AsyncExecutor for FuturesExecutor {$/;"	c
FuturesExecutor	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/async_executor.rs	/^pub struct FuturesExecutor;$/;"	s
GAP_SIZE	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^        const GAP_SIZE: u32 = 0xDFFF - 0xD800 + 1;$/;"	C	method:Standard::sample
GEN_ASCII_STR_CHARSET	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^        const GEN_ASCII_STR_CHARSET: &[u8] = b"ABCDEFGHIJKLMNOPQRSTUVWXYZ\\$/;"	C	method:Alphanumeric::sample
Gaussian	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/kde/kernel.rs	/^impl<A> Kernel<A> for Gaussian$/;"	c
Gaussian	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/kde/kernel.rs	/^pub struct Gaussian;$/;"	s
Gnuplot	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    Gnuplot,$/;"	e	enum:PlottingBackend
Gnuplot	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^impl Plotter for Gnuplot {$/;"	c
Gnuplot	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^pub(crate) struct Gnuplot {$/;"	s
GpuParallel	/home/einar/triton/gpu/ruthark/accelerators/src/kernels/merkle_tree_gpu_kernel.rs	/^impl GpuParallel {$/;"	c
GpuParallel	/home/einar/triton/gpu/ruthark/accelerators/src/kernels/merkle_tree_gpu_kernel.rs	/^impl<H: AlgebraicHasher> MerkleTreeMaker<H> for GpuParallel {$/;"	c
GpuParallel	/home/einar/triton/gpu/ruthark/accelerators/src/kernels/merkle_tree_gpu_kernel.rs	/^pub struct GpuParallel;$/;"	s
Group	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^impl<'a, K, I, F> Drop for Group<'a, K, I, F>$/;"	c
Group	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^impl<'a, K, I, F> Iterator for Group<'a, K, I, F>$/;"	c
Group	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^pub struct Group<'a, K: 'a, I: 'a, F: 'a>$/;"	s
GroupBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^impl<'a, K, I, F> IntoIterator for &'a GroupBy<K, I, F>$/;"	c
GroupBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^impl<K, I, F> GroupBy<K, I, F>$/;"	c
GroupBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^pub struct GroupBy<K, I, F>$/;"	s
GroupInner	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^impl<K, I, F> GroupInner<K, I, F>$/;"	c
GroupInner	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^struct GroupInner<K, I, F>$/;"	s
GroupingMap	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/grouping_map.rs	/^impl<I, K, V> GroupingMap<I>$/;"	c
GroupingMap	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/grouping_map.rs	/^pub struct GroupingMap<I> {$/;"	s
GroupingMapBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/grouping_map.rs	/^pub type GroupingMapBy<I, F> = GroupingMap<MapForGrouping<I, F>>;$/;"	t
Groups	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^impl<'a, K, I, F> Iterator for Groups<'a, K, I, F>$/;"	c
Groups	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^pub struct Groups<'a, K: 'a, I: 'a, F: 'a>$/;"	s
H	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^        type H = blake3::Hasher;$/;"	t	function:fri_tests::get_rounds_count_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type H = RescuePrimeRegular;$/;"	t	function:merkle_tree_test::root_from_arbitrary_number_of_digests_empty_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type H = RescuePrimeRegular;$/;"	t	function:merkle_tree_test::root_from_odd_number_of_digests_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type H = RescuePrimeRegular;$/;"	t	function:merkle_tree_test::verify_all_leaves_individually
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type H = RescuePrimeRegular;$/;"	t	function:merkle_tree_test::verify_some_payload
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type H = blake3::Hasher;$/;"	t	function:merkle_tree_test::merkle_tree_get_authentication_path_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type H = blake3::Hasher;$/;"	t	function:merkle_tree_test::merkle_tree_test_32
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type H = blake3::Hasher;$/;"	t	function:merkle_tree_test::merkle_tree_verify_authentication_structure_degenerate_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type H = blake3::Hasher;$/;"	t	function:merkle_tree_test::merkle_tree_verify_authentication_structure_equivalence_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type H = blake3::Hasher;$/;"	t	function:merkle_tree_test::merkle_tree_verify_authentication_structure_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type H = blake3::Hasher;$/;"	t	function:merkle_tree_test::salted_merkle_tree_get_authentication_path_medium_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type H = blake3::Hasher;$/;"	t	function:merkle_tree_test::salted_merkle_tree_get_authentication_path_small_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type H = blake3::Hasher;$/;"	t	function:merkle_tree_test::salted_merkle_tree_multipath_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type H = blake3::Hasher;$/;"	t	function:merkle_tree_test::salted_merkle_tree_regression_test_0
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type H = blake3::Hasher;$/;"	t	function:merkle_tree_test::salted_merkle_tree_verify_authentication_structure_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type H = blake3::Hasher;$/;"	t	function:merkle_tree_test::verify_authentication_path_from_leaf_hash_with_memoization_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^        type H = RescuePrimeRegular;$/;"	t	function:mmr_test::mutate_leaf_archival_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^        type H = RescuePrimeRegular;$/;"	t	function:mmr_test::one_input_mmr_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^        type H = RescuePrimeRegular;$/;"	t	function:mmr_test::two_input_mmr_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^        type H = RescuePrimeRegular;$/;"	t	function:mmr_test::variable_size_rescue_prime_mmr_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^        type H = blake3::Hasher;$/;"	t	function:mmr_test::accumulator_mmr_mutate_leaf_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^        type H = blake3::Hasher;$/;"	t	function:mmr_test::empty_mmr_behavior_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^        type H = blake3::Hasher;$/;"	t	function:mmr_test::mmr_append_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^        type H = blake3::Hasher;$/;"	t	function:mmr_test::mmr_prove_verify_leaf_mutation_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^        type H = blake3::Hasher;$/;"	t	function:mmr_test::remove_last_leaf_pbt
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^        type H = blake3::Hasher;$/;"	t	function:mmr_test::remove_last_leaf_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^        type H = blake3::Hasher;$/;"	t	function:mmr_test::variable_size_blake3_mmr_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^        type H = blake3::Hasher;$/;"	t	function:mmr_test::verify_against_correct_peak_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^        type H = RescuePrimeRegular;$/;"	t	function:accumulator_mmr_tests::mmra_serialization_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^        type H = blake3::Hasher;$/;"	t	function:accumulator_mmr_tests::batch_mutate_leaf_and_update_mps_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^        type H = blake3::Hasher;$/;"	t	function:accumulator_mmr_tests::conversion_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^        type H = blake3::Hasher;$/;"	t	function:accumulator_mmr_tests::verify_batch_update_pbt
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^        type H = blake3::Hasher;$/;"	t	function:accumulator_mmr_tests::verify_batch_update_single_append_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^        type H = blake3::Hasher;$/;"	t	function:accumulator_mmr_tests::verify_batch_update_single_mutate_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^        type H = blake3::Hasher;$/;"	t	function:accumulator_mmr_tests::verify_batch_update_two_append_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^        type H = blake3::Hasher;$/;"	t	function:accumulator_mmr_tests::verify_batch_update_two_mutate_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^        type H = RescuePrimeRegular;$/;"	t	function:mmr_membership_proof_test::serialization_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^        type H = RescuePrimeRegular;$/;"	t	function:mmr_membership_proof_test::update_membership_proof_from_append_big_rescue_prime
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^        type H = blake3::Hasher;$/;"	t	function:mmr_membership_proof_test::batch_update_from_batch_leaf_mutation_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^        type H = blake3::Hasher;$/;"	t	function:mmr_membership_proof_test::batch_update_from_batch_leaf_mutation_total_replacement_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^        type H = blake3::Hasher;$/;"	t	function:mmr_membership_proof_test::batch_update_from_leaf_mutation_no_change_return_value_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^        type H = blake3::Hasher;$/;"	t	function:mmr_membership_proof_test::equality_and_hash_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^        type H = blake3::Hasher;$/;"	t	function:mmr_membership_proof_test::get_node_indices_simple_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^        type H = blake3::Hasher;$/;"	t	function:mmr_membership_proof_test::get_peak_index_simple_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^        type H = blake3::Hasher;$/;"	t	function:mmr_membership_proof_test::update_batch_membership_proofs_from_batch_leaf_mutations_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^        type H = blake3::Hasher;$/;"	t	function:mmr_membership_proof_test::update_batch_membership_proofs_from_leaf_mutations_new_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^        type H = blake3::Hasher;$/;"	t	function:mmr_membership_proof_test::update_membership_proof_from_append_big_tests
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^        type H = blake3::Hasher;$/;"	t	function:mmr_membership_proof_test::update_membership_proof_from_append_simple
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^        type H = blake3::Hasher;$/;"	t	function:mmr_membership_proof_test::update_membership_proof_from_leaf_mutation_blake3_big_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^        type H = blake3::Hasher;$/;"	t	function:mmr_membership_proof_test::update_membership_proof_from_leaf_mutation_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^        type H = RescuePrimeRegular;$/;"	t	function:mmr_test::calculate_new_peaks_from_leaf_mutation_empty_mmr_test
H	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^        type H = RescuePrimeRegular;$/;"	t	function:proof_stream_typed_tests::prover_verifier_fiat_shamir_test
HIGH_MILD	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^        static HIGH_MILD: Label = HighMild;$/;"	v	function:index
HIGH_SEVERE	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^        static HIGH_SEVERE: Label = HighSevere;$/;"	v	function:index
HasCombination	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub trait HasCombination<I>: Sized {$/;"	i
Hashable	/home/einar/triton/twenty-first/twenty-first/src/util_types/algebraic_hasher.rs	/^pub trait Hashable {$/;"	i
Hasher	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^        type Hasher = RescuePrimeRegular;$/;"	t	function:fri_tests::fri_on_x_field_test
Hasher	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^        type Hasher = blake3::Hasher;$/;"	t	function:fri_tests::fri_x_field_limit_test
Hasher	/home/einar/triton/twenty-first/twenty-first/src/util_types/blake3_wrapper.rs	/^impl AlgebraicHasher for blake3::Hasher {$/;"	c
HeadTail	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/kmerge_impl.rs	/^impl<I> Clone for HeadTail<I>$/;"	c
HeadTail	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/kmerge_impl.rs	/^impl<I> HeadTail<I>$/;"	c
HeadTail	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/kmerge_impl.rs	/^struct HeadTail<I>$/;"	s
HighDegreeBoundaryQuotient	/home/einar/triton/twenty-first/twenty-first/src/shared_math/stark/stark_verify_error.rs	/^    HighDegreeBoundaryQuotient,$/;"	e	enum:StarkVerifyError
HighDegreeExtendedComputationalTrace	/home/einar/triton/twenty-first/twenty-first/src/shared_math/stark/stark_verify_error.rs	/^    HighDegreeExtendedComputationalTrace,$/;"	e	enum:StarkVerifyError
HighDegreeLinearCombination	/home/einar/triton/twenty-first/twenty-first/src/shared_math/stark/stark_verify_error.rs	/^    HighDegreeLinearCombination,$/;"	e	enum:StarkVerifyError
HighDegreeTransitionQuotient	/home/einar/triton/twenty-first/twenty-first/src/shared_math/stark/stark_verify_error.rs	/^    HighDegreeTransitionQuotient,$/;"	e	enum:StarkVerifyError
HighMild	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^    HighMild,$/;"	e	enum:Label
HighSevere	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^    HighSevere,$/;"	e	enum:Label
HomogeneousTuple	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^pub trait HomogeneousTuple$/;"	i
Html	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^impl Html {$/;"	c
Html	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^impl Report for Html {$/;"	c
Html	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^pub struct Html {$/;"	s
I	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^impl<I> IteratorRandom for I where I: Iterator + Sized {}$/;"	c
INC	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs	/^        const INC: u64 = 11634580027462260723;$/;"	C	function:test::rng
INDEX_ZERO	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_vector.rs	/^const INDEX_ZERO: u128 = 0u128;$/;"	C
INT16_MAX	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const INT16_MAX: u32 = 32767;$/;"	C
INT16_MIN	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const INT16_MIN: i32 = -32768;$/;"	C
INT32_MAX	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const INT32_MAX: u32 = 2147483647;$/;"	C
INT32_MIN	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const INT32_MIN: i32 = -2147483648;$/;"	C
INT8_MAX	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const INT8_MAX: u32 = 127;$/;"	C
INT8_MIN	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const INT8_MIN: i32 = -128;$/;"	C
INTPTR_MAX	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const INTPTR_MAX: u64 = 9223372036854775807;$/;"	C
INTPTR_MIN	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const INTPTR_MIN: i64 = -9223372036854775808;$/;"	C
INT_FAST16_MAX	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const INT_FAST16_MAX: u64 = 9223372036854775807;$/;"	C
INT_FAST16_MIN	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const INT_FAST16_MIN: i64 = -9223372036854775808;$/;"	C
INT_FAST32_MAX	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const INT_FAST32_MAX: u64 = 9223372036854775807;$/;"	C
INT_FAST32_MIN	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const INT_FAST32_MIN: i64 = -9223372036854775808;$/;"	C
INT_FAST8_MAX	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const INT_FAST8_MAX: u32 = 127;$/;"	C
INT_FAST8_MIN	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const INT_FAST8_MIN: i32 = -128;$/;"	C
INT_LEAST16_MAX	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const INT_LEAST16_MAX: u32 = 32767;$/;"	C
INT_LEAST16_MIN	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const INT_LEAST16_MIN: i32 = -32768;$/;"	C
INT_LEAST32_MAX	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const INT_LEAST32_MAX: u32 = 2147483647;$/;"	C
INT_LEAST32_MIN	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const INT_LEAST32_MIN: i32 = -2147483648;$/;"	C
INT_LEAST8_MAX	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const INT_LEAST8_MAX: u32 = 127;$/;"	C
INT_LEAST8_MIN	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const INT_LEAST8_MIN: i32 = -128;$/;"	C
Improved	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    Improved,$/;"	e	enum:ComparisonResult
Improved	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    Improved,$/;"	e	enum:ComparisonResult
IncomingMessage	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^pub enum IncomingMessage {$/;"	g
IndexContext	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^struct IndexContext<'a> {$/;"	s
IndexVec	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^impl From<Vec<u32>> for IndexVec {$/;"	c
IndexVec	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^impl From<Vec<usize>> for IndexVec {$/;"	c
IndexVec	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^impl IndexVec {$/;"	c
IndexVec	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^impl IntoIterator for IndexVec {$/;"	c
IndexVec	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^impl PartialEq for IndexVec {$/;"	c
IndexVec	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^pub enum IndexVec {$/;"	g
IndexVecIntoIter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^impl ExactSizeIterator for IndexVecIntoIter {}$/;"	c
IndexVecIntoIter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^impl Iterator for IndexVecIntoIter {$/;"	c
IndexVecIntoIter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^pub enum IndexVecIntoIter {$/;"	g
IndexVecIter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^impl<'a> ExactSizeIterator for IndexVecIter<'a> {}$/;"	c
IndexVecIter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^impl<'a> Iterator for IndexVecIter<'a> {$/;"	c
IndexVecIter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^pub enum IndexVecIter<'a> {$/;"	g
IndividualBenchmark	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^impl IndividualBenchmark {$/;"	c
IndividualBenchmark	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^struct IndividualBenchmark {$/;"	s
InnerConnection	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^impl InnerConnection {$/;"	c
InnerConnection	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^struct InnerConnection {$/;"	s
InputOutputMismatch	/home/einar/triton/twenty-first/twenty-first/src/shared_math/stark/stark_verify_error.rs	/^    InputOutputMismatch,$/;"	e	enum:StarkVerifyError
Interleave	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I, J> FusedIterator for Interleave<I, J>$/;"	c
Interleave	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I, J> Iterator for Interleave<I, J>$/;"	c
Interleave	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub struct Interleave<I, J> {$/;"	s
InterleaveShortest	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I, J> FusedIterator for InterleaveShortest<I, J>$/;"	c
InterleaveShortest	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I, J> Iterator for InterleaveShortest<I, J>$/;"	c
InterleaveShortest	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub struct InterleaveShortest<I, J>$/;"	s
Intermediate	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^    type Intermediate = Instant;$/;"	t	implementation:WallTime
Intermediate	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^    type Intermediate;$/;"	t	interface:Measurement
Intersperse	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/intersperse.rs	/^pub type Intersperse<I> = IntersperseWith<I, IntersperseElementSimple<<I as Iterator>::Item>>;$/;"	t
IntersperseElement	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/intersperse.rs	/^pub trait IntersperseElement<Item> {$/;"	i
IntersperseElementSimple	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/intersperse.rs	/^impl<Item: Clone> IntersperseElement<Item> for IntersperseElementSimple<Item> {$/;"	c
IntersperseElementSimple	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/intersperse.rs	/^pub struct IntersperseElementSimple<Item>(Item);$/;"	s
IntersperseWith	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/intersperse.rs	/^impl<I, ElemF> FusedIterator for IntersperseWith<I, ElemF>$/;"	c
IntersperseWith	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/intersperse.rs	/^impl<I, ElemF> Iterator for IntersperseWith<I, ElemF>$/;"	c
IntersperseWith	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/intersperse.rs	/^pub struct IntersperseWith<I, ElemF>$/;"	s
Interval	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^        type Interval = (u128, u128, u128);$/;"	t	function:mmr_test::get_authentication_path_node_indices_test
IntoBenchmarkId	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^pub trait IntoBenchmarkId: private::Sealed {$/;"	i
IntoChunks	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^impl<'a, I> IntoIterator for &'a IntoChunks<I>$/;"	c
IntoChunks	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^impl<I> IntoChunks<I>$/;"	c
IntoChunks	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^pub struct IntoChunks<I>$/;"	s
IntoCtx	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/traits.rs	/^pub(crate) trait IntoCtx<T>: Sized {$/;"	i
IntoFloat	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs	/^pub trait IntoFloat {$/;"	i
IntoIter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^    type IntoIter = Iter<'a, A>;$/;"	t
IntoIter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    type IntoIter = Chunks<'a, I>;$/;"	t
IntoIter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    type IntoIter = Groups<'a, K, I, F>;$/;"	t
IntoIter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/rciter_impl.rs	/^    type IntoIter = RcIter<I>;$/;"	t
IntoIter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    type IntoIter = IndexVecIntoIter;$/;"	t	implementation:IndexVec
IntoIter	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^        type IntoIter = std::vec::IntoIter<BFieldElement>;$/;"	t	implementation:proof_stream_typed_tests::TestItem
InvalidProbability	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^    InvalidProbability,$/;"	e	enum:BernoulliError
InvalidWeight	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^    InvalidWeight,$/;"	e	enum:WeightedError
Inverse	/home/einar/triton/twenty-first/twenty-first/src/shared_math/traits.rs	/^pub trait Inverse$/;"	i
Io	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    Io(std::io::Error),$/;"	e	enum:MessageError
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/mod.rs	/^    type Item = (&'a X, &'a Y);$/;"	t	implementation:Pairs
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    type Item = (A, B);$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    type Item = (A, B, C);$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    type Item = (A, B, C, D);$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    type Item = (A,);$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    type Item: Tuple<Builder = Self>;$/;"	t	interface:TupledDistributionsBuilder
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    type Item: Tuple<Distributions = Self>;$/;"	t	interface:TupledDistributions
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^    type Item = (A, Label);$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^    type Item = T;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/map.rs	/^    type Item = R::Out;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    type Item = (I::Item, J::Item);$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    type Item = (I::Item,);$/;"	t	implementation:Tuple1Combination
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    type Item = A;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    type Item = B;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    type Item = I::Item;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    type Item = Result<T, E>;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    type Item = Result<U, E>;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    type Item = T;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    type Item = usize;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I: Iterator> HasCombination<I> for (I::Item,) {$/;"	c
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/multi_product.rs	/^    type Item = Vec<I::Item>;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/combinations.rs	/^    type Item = Vec<I::Item>;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/combinations_with_replacement.rs	/^    type Item = Vec<I::Item>;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^        type Item = I::Item;$/;"	t	module:private
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/exactly_one_err.rs	/^    type Item = I::Item;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/flatten_ok.rs	/^    type Item = Result<T::Item, E>;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    type Item = (K, Group<'a, K, I, F>);$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    type Item = Chunk<'a, I>;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    type Item = I::Item;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/grouping_map.rs	/^    type Item = (K, V);$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/intersperse.rs	/^    type Item = I::Item;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/kmerge_impl.rs	/^    type Item = I::Item;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/merge_join.rs	/^    type Item = EitherOrBoth<I::Item, J::Item>;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/multipeek_impl.rs	/^    type Item = I::Item;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/pad_tail.rs	/^    type Item = I::Item;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/peek_nth.rs	/^    type Item = I::Item;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/peeking_take_while.rs	/^    type Item = I::Item;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/permutations.rs	/^    type Item = Vec<I::Item>;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/powerset.rs	/^    type Item = Vec<I::Item>;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/process_results_impl.rs	/^    type Item = T;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/put_back_n_impl.rs	/^    type Item = I::Item;$/;"	t	implementation:PutBackN
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/rciter_impl.rs	/^    type Item = A;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/rciter_impl.rs	/^    type Item = I::Item;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/repeatn.rs	/^    type Item = A;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/sources.rs	/^    type Item = A;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/sources.rs	/^    type Item = St;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tee.rs	/^    type Item = I::Item;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^    type Item = T::Item;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^    type Item = T;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^    type Item;$/;"	t	interface:TupleCollect
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/unique_impl.rs	/^    type Item = I::Item;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/with_position.rs	/^    type Item = Position<I::Item>;$/;"	t	implementation:WithPosition
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/zip_eq_impl.rs	/^    type Item = (I::Item, J::Item);$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/zip_longest.rs	/^    type Item = EitherOrBoth<T::Item, U::Item>;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    type Item = T;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    type Item = <R as BlockRngCore>::Item;$/;"	t
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    type Item = usize;$/;"	t	implementation:IndexVec
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    type Item = usize;$/;"	t	implementation:IndexVecIntoIter
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    type Item = usize;$/;"	t	implementation:IndexVecIter
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        type Item = I::Item;$/;"	t	implementation:test::ChunkHintedIterator
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        type Item = I::Item;$/;"	t	implementation:test::UnhintedIterator
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        type Item = I::Item;$/;"	t	implementation:test::WindowHintedIterator
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    type Item = &'a T;$/;"	t	implementation:SliceChooseIter
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    type Item = T;$/;"	t	implementation:T
Item	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    type Item;$/;"	t	interface:SliceRandom
Item	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^        type Item = BFieldElement;$/;"	t	implementation:proof_stream_typed_tests::TestItem
Iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^impl<'a, A> Iterator for Iter<'a, A>$/;"	c
Iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^pub struct Iter<'a, A>$/;"	s
Iterate	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/sources.rs	/^impl<St, F> Iterator for Iterate<St, F>$/;"	c
Iterate	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/sources.rs	/^impl<St, F> fmt::Debug for Iterate<St, F>$/;"	c
Iterate	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/sources.rs	/^pub struct Iterate<St, F> {$/;"	s
IteratorRandom	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^pub trait IteratorRandom: Iterator + Sized {$/;"	i
Itertools	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^pub trait Itertools : Iterator {$/;"	i
JustValue	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^    impl<V> KeyXorValue<V, V> for JustValue<V> {$/;"	c	module:private
JustValue	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^    pub struct JustValue<V>(V);$/;"	s	module:private
KDE_POINTS	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^static KDE_POINTS: usize = 500;$/;"	v
KDE_POINTS	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/mod.rs	/^static KDE_POINTS: usize = 500;$/;"	v
KMerge	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/kmerge_impl.rs	/^pub type KMerge<I> = KMergeBy<I, KMergeByLt>;$/;"	t
KMergeBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/kmerge_impl.rs	/^impl<I, F> Clone for KMergeBy<I, F>$/;"	c
KMergeBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/kmerge_impl.rs	/^impl<I, F> FusedIterator for KMergeBy<I, F>$/;"	c
KMergeBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/kmerge_impl.rs	/^impl<I, F> Iterator for KMergeBy<I, F>$/;"	c
KMergeBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/kmerge_impl.rs	/^impl<I, F> fmt::Debug for KMergeBy<I, F>$/;"	c
KMergeBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/kmerge_impl.rs	/^pub struct KMergeBy<I, F>$/;"	s
KMergeByLt	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/kmerge_impl.rs	/^impl<T: PartialOrd> KMergePredicate<T> for KMergeByLt {$/;"	c
KMergeByLt	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/kmerge_impl.rs	/^pub struct KMergeByLt;$/;"	s
KMergePredicate	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/kmerge_impl.rs	/^pub trait KMergePredicate<T> {$/;"	i
Kde	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/kde/mod.rs	/^impl<'a, A, K> Kde<'a, A, K>$/;"	c
Kde	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/kde/mod.rs	/^pub struct Kde<'a, A, K>$/;"	s
Kernel	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/kde/kernel.rs	/^pub trait Kernel<A>: Copy + Sync$/;"	i
Key	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    type Key = K;$/;"	t
Key	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    type Key = usize;$/;"	t	implementation:ChunkIndex
Key	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    type Key;$/;"	t	interface:KeyFunction
KeyFunction	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^trait KeyFunction<A> {$/;"	i
KeyMethod	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^    pub trait KeyMethod<K, V> {$/;"	i	module:private
KeyValue	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^    impl<K, V> KeyXorValue<K, V> for KeyValue<K, V> {$/;"	c	module:private
KeyValue	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^    pub struct KeyValue<K, V>(K, V);$/;"	s	module:private
KeyXorValue	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^    pub trait KeyXorValue<K, V> {$/;"	i	module:private
Known	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/permutations.rs	/^    Known(usize),$/;"	e	enum:CompleteStateRemaining
LENGTH_KEY	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_vector.rs	/^const LENGTH_KEY: [u8; 1] = [0];$/;"	C
LINEWIDTH	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^const LINEWIDTH: LineWidth = LineWidth(2.);$/;"	C
LOWER_MASK	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    const LOWER_MASK: u64 = 0xFFFFFFFF;$/;"	C	implementation:BFieldElement
LOW_MILD	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^        static LOW_MILD: Label = LowMild;$/;"	v	function:index
LOW_SEVERE	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^        static LOW_SEVERE: Label = LowSevere;$/;"	v	function:index
L_ctermid	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const L_ctermid: u32 = 9;$/;"	C
L_tmpnam	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const L_tmpnam: u32 = 20;$/;"	C
Label	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^impl Label {$/;"	c
Label	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^pub enum Label {$/;"	g
LabeledSample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^impl<'a, 'b, A> IntoIterator for &'b LabeledSample<'a, A>$/;"	c
LabeledSample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^impl<'a, A> Deref for LabeledSample<'a, A>$/;"	c
LabeledSample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^impl<'a, A> Index<usize> for LabeledSample<'a, A>$/;"	c
LabeledSample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^impl<'a, A> LabeledSample<'a, A>$/;"	c
LabeledSample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^pub struct LabeledSample<'a, A>$/;"	s
Large	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    Large {$/;"	e	enum:UniformDurationMode
LargeInput	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    LargeInput,$/;"	e	enum:BatchSize
Last	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/with_position.rs	/^    Last(T),$/;"	e	enum:Position
LastIterationTooHighDegree	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    LastIterationTooHighDegree,$/;"	e	enum:ValidationError
LazyBuffer	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lazy_buffer.rs	/^impl<I, J> Index<J> for LazyBuffer<I>$/;"	c
LazyBuffer	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lazy_buffer.rs	/^impl<I> LazyBuffer<I>$/;"	c
LazyBuffer	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lazy_buffer.rs	/^pub struct LazyBuffer<I: Iterator> {$/;"	s
Left	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/either_or_both.rs	/^    Left(A),$/;"	e	enum:EitherOrBoth
LengthMismatch	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    LengthMismatch,$/;"	e	enum:PrecalculationError
Linear	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    Linear,$/;"	e	enum:AxisScale
Linear	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    Linear,$/;"	e	enum:SamplingMethod
Linear	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    Linear,$/;"	e	enum:ActualSamplingMode
Linear	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    Linear,$/;"	e	enum:AxisScale
Linear	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    Linear,$/;"	e	enum:SamplingMode
LinearCombinationAuthenticationPath	/home/einar/triton/twenty-first/twenty-first/src/shared_math/stark/stark_verify_error.rs	/^    LinearCombinationAuthenticationPath,$/;"	e	enum:StarkVerifyError
LinearCombinationMismatch	/home/einar/triton/twenty-first/twenty-first/src/shared_math/stark/stark_verify_error.rs	/^    LinearCombinationMismatch(usize), \/\/ integer refers to first index where a mismatch is fou/;"	e	enum:StarkVerifyError
LinearCombinationTupleMismatch	/home/einar/triton/twenty-first/twenty-first/src/shared_math/stark/stark_verify_error.rs	/^    LinearCombinationTupleMismatch(usize), \/\/ integer refers to first index where a mismatch i/;"	e	enum:StarkVerifyError
List	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    List,$/;"	e	enum:Mode
Logarithmic	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    Logarithmic,$/;"	e	enum:AxisScale
Logarithmic	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    Logarithmic,$/;"	e	enum:AxisScale
Longer	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/diff.rs	/^    Longer(usize, PutBack<J>),$/;"	e	enum:Diff
LowMild	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^    LowMild,$/;"	e	enum:Label
LowSevere	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^    LowSevere,$/;"	e	enum:Label
M	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type M = CpuParallel;$/;"	t	function:merkle_tree_test::merkle_tree_get_authentication_path_test
M	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type M = CpuParallel;$/;"	t	function:merkle_tree_test::merkle_tree_test_32
M	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type M = CpuParallel;$/;"	t	function:merkle_tree_test::merkle_tree_verify_authentication_structure_degenerate_test
M	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type M = CpuParallel;$/;"	t	function:merkle_tree_test::merkle_tree_verify_authentication_structure_equivalence_test
M	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type M = CpuParallel;$/;"	t	function:merkle_tree_test::merkle_tree_verify_authentication_structure_test
M	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type M = CpuParallel;$/;"	t	function:merkle_tree_test::root_from_arbitrary_number_of_digests_empty_test
M	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type M = CpuParallel;$/;"	t	function:merkle_tree_test::root_from_odd_number_of_digests_test
M	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type M = CpuParallel;$/;"	t	function:merkle_tree_test::verify_all_leaves_individually
M	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type M = CpuParallel;$/;"	t	function:merkle_tree_test::verify_authentication_path_from_leaf_hash_with_memoization_test
M	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type M = CpuParallel;$/;"	t	function:merkle_tree_test::verify_some_payload
M	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^        type M = CpuParallel;$/;"	t	function:mmr_test::empty_mmr_behavior_test
M	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^        type M = CpuParallel;$/;"	t	function:mmr_test::variable_size_blake3_mmr_test
M	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^        type M = CpuParallel;$/;"	t	function:mmr_test::variable_size_rescue_prime_mmr_test
MAX	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    pub const MAX: u64 = Self::QUOTIENT - 1;$/;"	C	implementation:BFieldElement
MAX_DIRECTORY_NAME_LEN	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^const MAX_DIRECTORY_NAME_LEN: usize = 64;$/;"	C
MAX_TITLE_LEN	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^const MAX_TITLE_LEN: usize = 100;$/;"	C
MCoefficients	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^type MCoefficients<T> = HashMap<Vec<u8>, T>;$/;"	t
MDS	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^pub const MDS: [u64; STATE_SIZE * STATE_SIZE] = [$/;"	C
MDS_INV	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^pub const MDS_INV: [u64; STATE_SIZE * STATE_SIZE] = [$/;"	C
MPolynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^impl<FF: FiniteField> Add for MPolynomial<FF> {$/;"	c
MPolynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^impl<FF: FiniteField> AddAssign for MPolynomial<FF> {$/;"	c
MPolynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^impl<FF: FiniteField> Display for MPolynomial<FF> {$/;"	c
MPolynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^impl<FF: FiniteField> Eq for MPolynomial<FF> {}$/;"	c
MPolynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^impl<FF: FiniteField> Hash for MPolynomial<FF> {$/;"	c
MPolynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^impl<FF: FiniteField> MPolynomial<FF> {$/;"	c
MPolynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^impl<FF: FiniteField> Mul for MPolynomial<FF> {$/;"	c
MPolynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^impl<FF: FiniteField> MulAssign for MPolynomial<FF> {$/;"	c
MPolynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^impl<FF: FiniteField> Neg for MPolynomial<FF> {$/;"	c
MPolynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^impl<FF: FiniteField> PartialEq for MPolynomial<FF> {$/;"	c
MPolynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^impl<FF: FiniteField> Sub for MPolynomial<FF> {$/;"	c
MPolynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^impl<FF: FiniteField> Sum for MPolynomial<FF> {$/;"	c
MPolynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^impl<T: FiniteField> Clone for MPolynomial<T> {$/;"	c
MPolynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^impl<T: FiniteField> Debug for MPolynomial<T> {$/;"	c
MPolynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^pub struct MPolynomial<T: FiniteField> {$/;"	s
MT	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^type MT<H> = MerkleTree<H, Maker>;$/;"	t
MT	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type MT = MerkleTree<H, M>;$/;"	t	function:merkle_tree_test::merkle_tree_get_authentication_path_test
MT	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type MT = MerkleTree<H, M>;$/;"	t	function:merkle_tree_test::merkle_tree_test_32
MT	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type MT = MerkleTree<H, M>;$/;"	t	function:merkle_tree_test::merkle_tree_verify_authentication_structure_degenerate_test
MT	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type MT = MerkleTree<H, M>;$/;"	t	function:merkle_tree_test::merkle_tree_verify_authentication_structure_equivalence_test
MT	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type MT = MerkleTree<H, M>;$/;"	t	function:merkle_tree_test::merkle_tree_verify_authentication_structure_test
MT	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type MT = MerkleTree<H, M>;$/;"	t	function:merkle_tree_test::root_from_arbitrary_number_of_digests_empty_test
MT	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type MT = MerkleTree<H, M>;$/;"	t	function:merkle_tree_test::root_from_odd_number_of_digests_test
MT	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type MT = MerkleTree<H, M>;$/;"	t	function:merkle_tree_test::verify_all_leaves_individually
MT	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type MT = MerkleTree<H, M>;$/;"	t	function:merkle_tree_test::verify_authentication_path_from_leaf_hash_with_memoization_test
MT	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^        type MT = MerkleTree<H, M>;$/;"	t	function:merkle_tree_test::verify_some_payload
MT	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^        type MT = MerkleTree<H, M>;$/;"	t	function:mmr_test::empty_mmr_behavior_test
MT	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^        type MT = MerkleTree<H, M>;$/;"	t	function:mmr_test::variable_size_blake3_mmr_test
MT	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^        type MT = MerkleTree<H, M>;$/;"	t	function:mmr_test::variable_size_rescue_prime_mmr_test
Maker	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^type Maker = CpuParallel;$/;"	t
ManyB	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^        ManyB(Vec<BFieldElement>),$/;"	e	enum:proof_stream_typed_tests::TestItem
ManyX	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^        ManyX(Vec<XFieldElement>),$/;"	e	enum:proof_stream_typed_tests::TestItem
MapForGrouping	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/grouping_map.rs	/^impl<I, F> MapForGrouping<I, F> {$/;"	c
MapForGrouping	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/grouping_map.rs	/^impl<K, V, I, F> Iterator for MapForGrouping<I, F>$/;"	c
MapForGrouping	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/grouping_map.rs	/^pub struct MapForGrouping<I, F>(I, F);$/;"	s
MapInto	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/map.rs	/^pub type MapInto<I, R> = MapSpecialCase<I, MapSpecialCaseFnInto<R>>;$/;"	t
MapOk	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/map.rs	/^pub type MapOk<I, F> = MapSpecialCase<I, MapSpecialCaseFnOk<F>>;$/;"	t
MapResults	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/map.rs	/^pub type MapResults<I, F> = MapOk<I, F>;$/;"	t
MapSpecialCase	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/map.rs	/^impl<I, R> DoubleEndedIterator for MapSpecialCase<I, R>$/;"	c
MapSpecialCase	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/map.rs	/^impl<I, R> ExactSizeIterator for MapSpecialCase<I, R>$/;"	c
MapSpecialCase	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/map.rs	/^impl<I, R> Iterator for MapSpecialCase<I, R>$/;"	c
MapSpecialCase	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/map.rs	/^pub struct MapSpecialCase<I, F> {$/;"	s
MapSpecialCaseFn	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/map.rs	/^pub trait MapSpecialCaseFn<T> {$/;"	i
MapSpecialCaseFnInto	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/map.rs	/^impl<T: Into<U>, U> MapSpecialCaseFn<T> for MapSpecialCaseFnInto<U> {$/;"	c
MapSpecialCaseFnInto	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/map.rs	/^pub struct MapSpecialCaseFnInto<U>(PhantomData<U>);$/;"	s
MapSpecialCaseFnOk	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/map.rs	/^impl<F, T, U, E> MapSpecialCaseFn<Result<T, E>> for MapSpecialCaseFnOk<F>$/;"	c
MapSpecialCaseFnOk	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/map.rs	/^impl<F> std::fmt::Debug for MapSpecialCaseFnOk<F> {$/;"	c
MapSpecialCaseFnOk	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/map.rs	/^pub struct MapSpecialCaseFnOk<F>(F);$/;"	s
Mask	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    type Mask;$/;"	t	interface:FloatSIMDUtils
Mean	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    Mean,$/;"	e	enum:Statistic
Measurement	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^pub trait Measurement {$/;"	i
MeasurementComplete	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    MeasurementComplete {$/;"	e	enum:OutgoingMessage
MeasurementData	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^impl<'a> MeasurementData<'a> {$/;"	c
MeasurementData	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^pub(crate) struct MeasurementData<'a> {$/;"	s
MeasurementStart	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    MeasurementStart {$/;"	e	enum:OutgoingMessage
Median	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    Median,$/;"	e	enum:Statistic
MedianAbsDev	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    MedianAbsDev,$/;"	e	enum:Statistic
Medium	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    Medium {$/;"	e	enum:UniformDurationMode
Merge	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub type Merge<I, J> = MergeBy<I, J, MergeLte>;$/;"	t
MergeBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I, J, F> Clone for MergeBy<I, J, F>$/;"	c
MergeBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I, J, F> FusedIterator for MergeBy<I, J, F>$/;"	c
MergeBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I, J, F> Iterator for MergeBy<I, J, F>$/;"	c
MergeBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I, J, F> fmt::Debug for MergeBy<I, J, F>$/;"	c
MergeBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub struct MergeBy<I, J, F>$/;"	s
MergeJoinBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/merge_join.rs	/^impl<I, J, F> Clone for MergeJoinBy<I, J, F>$/;"	c
MergeJoinBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/merge_join.rs	/^impl<I, J, F> Iterator for MergeJoinBy<I, J, F>$/;"	c
MergeJoinBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/merge_join.rs	/^impl<I, J, F> fmt::Debug for MergeJoinBy<I, J, F>$/;"	c
MergeJoinBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/merge_join.rs	/^pub struct MergeJoinBy<I: Iterator, J: Iterator, F> {$/;"	s
MergeLte	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<T: PartialOrd> MergePredicate<T> for MergeLte {$/;"	c
MergeLte	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub struct MergeLte;$/;"	s
MergePredicate	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub trait MergePredicate<T> {$/;"	i
MerkleProofError	/home/einar/triton/twenty-first/twenty-first/src/shared_math/stark/stark_verify_error.rs	/^pub enum MerkleProofError {$/;"	g
MerkleTree	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^impl<H, M> Clone for MerkleTree<H, M>$/;"	c
MerkleTree	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^impl<H, M> MerkleTree<H, M>$/;"	c
MerkleTree	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^pub struct MerkleTree<H, M>$/;"	s
MerkleTreeMaker	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree_maker.rs	/^pub trait MerkleTreeMaker<H: AlgebraicHasher> {$/;"	i
MessageError	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^impl From<ciborium::de::Error<std::io::Error>> for MessageError {$/;"	c
MessageError	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^impl From<ciborium::ser::Error<std::io::Error>> for MessageError {$/;"	c
MessageError	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^impl From<std::io::Error> for MessageError {$/;"	c
MessageError	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^impl std::error::Error for MessageError {$/;"	c
MessageError	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^impl std::fmt::Display for MessageError {$/;"	c
MessageError	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^pub enum MessageError {$/;"	g
Meta	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^    impl<Key, F> Meta<Key, F>$/;"	c	module:private
Meta	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^    pub struct Meta<Key, F> {$/;"	s	module:private
Metadata	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    struct Metadata {$/;"	s	function:cargo_target_directory
MidIter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/multi_product.rs	/^    MidIter { on_first_iter: bool },$/;"	e	enum:MultiProductIterState
Middle	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/with_position.rs	/^    Middle(T),$/;"	e	enum:Position
MinMax	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/minmax.rs	/^    MinMax(T, T)$/;"	e	enum:MinMaxResult
MinMaxResult	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/minmax.rs	/^impl<T: Clone> MinMaxResult<T> {$/;"	c
MinMaxResult	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/minmax.rs	/^pub enum MinMaxResult<T> {$/;"	g
MissingPreprocessedValues	/home/einar/triton/twenty-first/twenty-first/src/shared_math/stark/stark_verify_error.rs	/^    MissingPreprocessedValues,$/;"	e	enum:StarkVerifyError
Mmr	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^        type Mmr = MmrAccumulator<H>;$/;"	t	function:accumulator_mmr_tests::mmra_serialization_test
Mmr	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_trait.rs	/^pub trait Mmr<H: AlgebraicHasher> {$/;"	i
MmrAccumulator	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^impl<H: AlgebraicHasher> From<&mut ArchivalMmr<H>> for MmrAccumulator<H> {$/;"	c
MmrAccumulator	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^impl<H: AlgebraicHasher> From<ArchivalMmr<H>> for MmrAccumulator<H> {$/;"	c
MmrAccumulator	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^impl<H: AlgebraicHasher> Mmr<H> for MmrAccumulator<H> {$/;"	c
MmrAccumulator	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^impl<H: AlgebraicHasher> MmrAccumulator<H> {$/;"	c
MmrAccumulator	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^pub struct MmrAccumulator<H: AlgebraicHasher> {$/;"	s
MmrMembershipProof	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^impl<H: AlgebraicHasher> Clone for MmrMembershipProof<H> {$/;"	c
MmrMembershipProof	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^impl<H: AlgebraicHasher> Eq for MmrMembershipProof<H> {}$/;"	c
MmrMembershipProof	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^impl<H: AlgebraicHasher> Hashable for MmrMembershipProof<H> {$/;"	c
MmrMembershipProof	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^impl<H: AlgebraicHasher> MmrMembershipProof<H> {$/;"	c
MmrMembershipProof	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^impl<H: AlgebraicHasher> PartialEq for MmrMembershipProof<H> {$/;"	c
MmrMembershipProof	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^pub struct MmrMembershipProof<H: AlgebraicHasher + Sized> {$/;"	s
ModPowU32	/home/einar/triton/twenty-first/twenty-first/src/shared_math/traits.rs	/^pub trait ModPowU32 {$/;"	i
ModPowU64	/home/einar/triton/twenty-first/twenty-first/src/shared_math/traits.rs	/^pub trait ModPowU64 {$/;"	i
Mode	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^impl Mode {$/;"	c
Mode	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^pub(crate) enum Mode {$/;"	g
MultiPeek	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/multipeek_impl.rs	/^impl<I: Iterator> MultiPeek<I> {$/;"	c
MultiPeek	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/multipeek_impl.rs	/^impl<I> ExactSizeIterator for MultiPeek<I>$/;"	c
MultiPeek	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/multipeek_impl.rs	/^impl<I> Iterator for MultiPeek<I>$/;"	c
MultiPeek	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/multipeek_impl.rs	/^impl<I> MultiPeek<I>$/;"	c
MultiPeek	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/multipeek_impl.rs	/^impl<I> PeekingNext for MultiPeek<I>$/;"	c
MultiPeek	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/multipeek_impl.rs	/^pub struct MultiPeek<I>$/;"	s
MultiProduct	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/multi_product.rs	/^impl<I> Iterator for MultiProduct<I>$/;"	c
MultiProduct	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/multi_product.rs	/^impl<I> MultiProduct<I>$/;"	c
MultiProduct	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/multi_product.rs	/^impl<I> std::fmt::Debug for MultiProduct<I>$/;"	c
MultiProduct	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/multi_product.rs	/^pub struct MultiProduct<I>(Vec<MultiProductIter<I>>)$/;"	s
MultiProductIter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/multi_product.rs	/^impl<I> MultiProductIter<I>$/;"	c
MultiProductIter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/multi_product.rs	/^struct MultiProductIter<I>$/;"	s
MultiProductIterState	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/multi_product.rs	/^enum MultiProductIterState {$/;"	g
MultiUnzip	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/unziptuple.rs	/^pub trait MultiUnzip<FromI>: Iterator {$/;"	i
MyF32	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^        impl SampleUniform for MyF32 {$/;"	c	function:tests::test_custom_uniform
MyF32	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^        struct MyF32 {$/;"	s	function:tests::test_custom_uniform
N	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^        const N: u32 = 100_000;$/;"	C	function:test::test_average
N	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^        const N: u32 = 100_000;$/;"	C	function:test::test_gen_ratio_average
N	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^impl<T, const N: usize> Fill for [T; N]$/;"	c
N	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^impl<const N: usize> From<U32s<N>> for [BFieldElement; N] {$/;"	c
NOT_AN_OUTLIER	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^        static NOT_AN_OUTLIER: Label = NotAnOutlier;$/;"	v	function:index
NUM	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^        const NUM: u32 = 3;$/;"	C	function:test::test_average
NUM	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^        const NUM: u32 = 3;$/;"	C	function:test::test_gen_ratio_average
NUM_COLORS	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/summary.rs	/^const NUM_COLORS: usize = 8;$/;"	C
NUM_COLORS	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/summary.rs	/^const NUM_COLORS: usize = 8;$/;"	C
NUM_ROUNDS	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^pub const NUM_ROUNDS: usize = 8;$/;"	C
N_REPS	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^        const N_REPS: u32 = 5000;$/;"	C	function:test::test_weightedindex
N_REPS	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        const N_REPS: u32 = 3000;$/;"	C	function:test::test_weighted
New	/home/einar/triton/twenty-first/twenty-first/src/shared_math/traits.rs	/^pub trait New {$/;"	i
NoElements	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/minmax.rs	/^    NoElements,$/;"	e	enum:MinMaxResult
NoItem	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^    NoItem,$/;"	e	enum:WeightedError
Node	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^impl<T: Sized> Node<T> {$/;"	c
Node	/home/einar/triton/twenty-first/twenty-first/src/util_types/tree_m_ary.rs	/^pub struct Node<T: Sized> {$/;"	s
NonPostiveRoundCount	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    NonPostiveRoundCount,$/;"	e	enum:ValidationError
NonSignificant	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    NonSignificant,$/;"	e	enum:ComparisonResult
NonSignificant	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    NonSignificant,$/;"	e	enum:ComparisonResult
NonZeroBoundaryRemainder	/home/einar/triton/twenty-first/twenty-first/src/shared_math/stark/stark_verify_error.rs	/^    NonZeroBoundaryRemainder,$/;"	e	enum:StarkVerifyError
NonZeroTransitionRemainder	/home/einar/triton/twenty-first/twenty-first/src/shared_math/stark/stark_verify_error.rs	/^    NonZeroTransitionRemainder,$/;"	e	enum:StarkVerifyError
None	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    None,$/;"	e	enum:PlottingBackend
Normal	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    Normal,$/;"	e	enum:CliVerbosity
NotAnOutlier	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^    NotAnOutlier,$/;"	e	enum:Label
NotColinear	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    NotColinear(usize),$/;"	e	enum:ValidationError
NumBatches	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    NumBatches(u64),$/;"	e	enum:BatchSize
NumIterations	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    NumIterations(u64),$/;"	e	enum:BatchSize
One	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/mod.rs	/^    One,$/;"	e	enum:Tails
OneElement	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/minmax.rs	/^    OneElement(T),$/;"	e	enum:MinMaxResult
Ongoing	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/permutations.rs	/^    Ongoing {$/;"	e	enum:CompleteState
OngoingUnknownLen	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/permutations.rs	/^    OngoingUnknownLen {$/;"	e	enum:PermutationState
Only	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/with_position.rs	/^    Only(T),$/;"	e	enum:Position
Open01	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs	/^pub struct Open01;$/;"	s
OpenClosed01	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs	/^pub struct OpenClosed01;$/;"	s
Out	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/map.rs	/^    type Out = Result<U, E>;$/;"	t
Out	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/map.rs	/^    type Out = U;$/;"	t	implementation:MapSpecialCaseFnInto
Out	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/map.rs	/^    type Out;$/;"	t	interface:MapSpecialCaseFn
OutgoingMessage	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^pub enum OutgoingMessage<'a> {$/;"	g
Output	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^    type Output = Label;$/;"	t
Output	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lazy_buffer.rs	/^    type Output = <Vec<I::Item> as Index<J>>::Output;$/;"	t
Output	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    type Output;$/;"	t	interface:WideningMultiply
Output	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^    type Output = Self;$/;"	t	implementation:DyadicRational
Output	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    type Output = Self;$/;"	t	implementation:U32s
Output	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    type Output = U32s<N>;$/;"	t	implementation:U32s
Output	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    type Output = Self;$/;"	t	implementation:BFieldElement
Output	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    type Output = Self;$/;"	t	implementation:MPolynomial
Output	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    type Output = Self;$/;"	t	implementation:Polynomial
Output	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    type Output = Self;$/;"	t	implementation:XFieldElement
Output	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    type Output = XFieldElement;$/;"	t	implementation:BFieldElement
Overflow	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/permutations.rs	/^    Overflow,$/;"	e	enum:CompleteStateRemaining
P	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^        const P: f64 = 0.3;$/;"	C	function:test::test_average
PARALLELLIZATION_THRESHOLD	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^const PARALLELLIZATION_THRESHOLD: usize = 16;$/;"	C
PHI	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro128plusplus.rs	/^        const PHI: u64 = 0x9e3779b97f4a7c15;$/;"	C	method:Xoshiro128PlusPlus::seed_from_u64
PHI	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro256plusplus.rs	/^        const PHI: u64 = 0x9e3779b97f4a7c15;$/;"	C	method:Xoshiro256PlusPlus::seed_from_u64
POINT_SIZE	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^const POINT_SIZE: PointSize = PointSize(0.75);$/;"	C
POINT_SIZE	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/mod.rs	/^static POINT_SIZE: u32 = 3;$/;"	v
PRIMITIVE_ROOTS	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^static PRIMITIVE_ROOTS: phf::Map<u64, u64> = phf_map! {$/;"	v
PROTOCOL_FORMAT	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^const PROTOCOL_FORMAT: u16 = 1;$/;"	C
PROTOCOL_VERSION	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^const PROTOCOL_VERSION: u16 = 1;$/;"	C
PTRDIFF_MAX	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const PTRDIFF_MAX: u64 = 9223372036854775807;$/;"	C
PTRDIFF_MIN	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const PTRDIFF_MIN: i64 = -9223372036854775808;$/;"	C
P_tmpdir	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const P_tmpdir: &[u8; 5usize] = b"\/tmp\\0";$/;"	C
PadUsing	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/pad_tail.rs	/^impl<I, F> DoubleEndedIterator for PadUsing<I, F>$/;"	c
PadUsing	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/pad_tail.rs	/^impl<I, F> ExactSizeIterator for PadUsing<I, F>$/;"	c
PadUsing	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/pad_tail.rs	/^impl<I, F> FusedIterator for PadUsing<I, F>$/;"	c
PadUsing	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/pad_tail.rs	/^impl<I, F> Iterator for PadUsing<I, F>$/;"	c
PadUsing	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/pad_tail.rs	/^impl<I, F> std::fmt::Debug for PadUsing<I, F>$/;"	c
PadUsing	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/pad_tail.rs	/^pub struct PadUsing<I, F> {$/;"	s
Pairs	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/mod.rs	/^impl<'a, X, Y> Iterator for Pairs<'a, X, Y> {$/;"	c
Pairs	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/mod.rs	/^pub struct Pairs<'a, X: 'a, Y: 'a> {$/;"	s
PartialAuthenticationPath	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^pub struct PartialAuthenticationPath<Digest>(pub Vec<Option<Digest>>);$/;"	s
PartialBenchmarkConfig	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark.rs	/^impl PartialBenchmarkConfig {$/;"	c
PartialBenchmarkConfig	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark.rs	/^pub(crate) struct PartialBenchmarkConfig {$/;"	s
PeekNth	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/peek_nth.rs	/^impl<I> ExactSizeIterator for PeekNth<I> where I: ExactSizeIterator {}$/;"	c
PeekNth	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/peek_nth.rs	/^impl<I> Iterator for PeekNth<I>$/;"	c
PeekNth	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/peek_nth.rs	/^impl<I> PeekNth<I>$/;"	c
PeekNth	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/peek_nth.rs	/^impl<I> PeekingNext for PeekNth<I>$/;"	c
PeekNth	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/peek_nth.rs	/^pub struct PeekNth<I>$/;"	s
Peekable	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/peeking_take_while.rs	/^impl<I> PeekingNext for Peekable<I>$/;"	c
PeekingNext	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/peeking_take_while.rs	/^pub trait PeekingNext : Iterator {$/;"	i
PeekingTakeWhile	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/peeking_take_while.rs	/^impl<'a, I, F> Iterator for PeekingTakeWhile<'a, I, F>$/;"	c
PeekingTakeWhile	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/peeking_take_while.rs	/^impl<'a, I: 'a, F> std::fmt::Debug for PeekingTakeWhile<'a, I, F>$/;"	c
PeekingTakeWhile	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/peeking_take_while.rs	/^pub struct PeekingTakeWhile<'a, I: 'a, F>$/;"	s
PerIteration	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    PerIteration,$/;"	e	enum:BatchSize
Percentiles	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/percentiles.rs	/^impl<A> Percentiles<A>$/;"	c
Percentiles	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/percentiles.rs	/^pub struct Percentiles<A>(Box<[A]>)$/;"	s
PermutationState	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/permutations.rs	/^enum PermutationState {$/;"	g
Permutations	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/permutations.rs	/^impl<I> Clone for Permutations<I>$/;"	c
Permutations	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/permutations.rs	/^impl<I> Iterator for Permutations<I>$/;"	c
Permutations	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/permutations.rs	/^impl<I> Permutations<I>$/;"	c
Permutations	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/permutations.rs	/^impl<I> fmt::Debug for Permutations<I>$/;"	c
Permutations	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/permutations.rs	/^pub struct Permutations<I: Iterator> {$/;"	s
Plot	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^impl Plot {$/;"	c
Plot	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^struct Plot {$/;"	s
PlotConfiguration	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^impl From<&crate::PlotConfiguration> for PlotConfiguration {$/;"	c
PlotConfiguration	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^pub struct PlotConfiguration {$/;"	s
PlotConfiguration	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^impl Default for PlotConfiguration {$/;"	c
PlotConfiguration	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^impl PlotConfiguration {$/;"	c
PlotConfiguration	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^pub struct PlotConfiguration {$/;"	s
PlotContext	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/mod.rs	/^impl<'a> PlotContext<'a> {$/;"	c
PlotContext	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/mod.rs	/^pub(crate) struct PlotContext<'a> {$/;"	s
PlotData	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/mod.rs	/^impl<'a> PlotData<'a> {$/;"	c
PlotData	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/mod.rs	/^pub(crate) struct PlotData<'a> {$/;"	s
Plotter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/mod.rs	/^pub(crate) trait Plotter {$/;"	i
Plotters	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    Plotters,$/;"	e	enum:PlottingBackend
PlottersBackend	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/mod.rs	/^impl Plotter for PlottersBackend {$/;"	c
PlottersBackend	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/mod.rs	/^pub struct PlottersBackend;$/;"	s
PlottingBackend	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^impl PlottingBackend {$/;"	c
PlottingBackend	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^pub enum PlottingBackend {$/;"	g
PointEstimates	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^pub struct PointEstimates {$/;"	s
Polynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^impl<FF: FiniteField> Add for Polynomial<FF> {$/;"	c
Polynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^impl<FF: FiniteField> AddAssign for Polynomial<FF> {$/;"	c
Polynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^impl<FF: FiniteField> Debug for Polynomial<FF> {$/;"	c
Polynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^impl<FF: FiniteField> Display for Polynomial<FF> {$/;"	c
Polynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^impl<FF: FiniteField> Div for Polynomial<FF> {$/;"	c
Polynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^impl<FF: FiniteField> Eq for Polynomial<FF> {}$/;"	c
Polynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^impl<FF: FiniteField> Hash for Polynomial<FF> {$/;"	c
Polynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^impl<FF: FiniteField> Mul for Polynomial<FF> {$/;"	c
Polynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^impl<FF: FiniteField> One for Polynomial<FF> {$/;"	c
Polynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^impl<FF: FiniteField> PartialEq for Polynomial<FF> {$/;"	c
Polynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^impl<FF: FiniteField> Polynomial<FF> {$/;"	c
Polynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^impl<FF: FiniteField> Rem for Polynomial<FF> {$/;"	c
Polynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^impl<FF: FiniteField> Sub for Polynomial<FF> {$/;"	c
Polynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^impl<FF: FiniteField> Zero for Polynomial<FF> {$/;"	c
Polynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^impl<FF> Polynomial<FF>$/;"	c
Polynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^pub struct Polynomial<FF: FiniteField> {$/;"	s
Polynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl From<XFieldElement> for Polynomial<BFieldElement> {$/;"	c
PolynomialEvaluationDataNode	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^pub struct PolynomialEvaluationDataNode {$/;"	s
Position	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/with_position.rs	/^impl<T> Position<T> {$/;"	c
Position	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/with_position.rs	/^pub enum Position<T> {$/;"	g
Positions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I, F> DoubleEndedIterator for Positions<I, F>$/;"	c
Positions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I, F> FusedIterator for Positions<I, F>$/;"	c
Positions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I, F> Iterator for Positions<I, F>$/;"	c
Positions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I, F> fmt::Debug for Positions<I, F>$/;"	c
Positions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub struct Positions<I, F> {$/;"	s
Powerset	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/powerset.rs	/^impl<I> Clone for Powerset<I>$/;"	c
Powerset	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/powerset.rs	/^impl<I> FusedIterator for Powerset<I>$/;"	c
Powerset	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/powerset.rs	/^impl<I> Iterator for Powerset<I>$/;"	c
Powerset	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/powerset.rs	/^impl<I> fmt::Debug for Powerset<I>$/;"	c
Powerset	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/powerset.rs	/^pub struct Powerset<I: Iterator> {$/;"	s
PrecalculationError	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^impl Error for PrecalculationError {}$/;"	c
PrecalculationError	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^impl fmt::Display for PrecalculationError {$/;"	c
PrecalculationError	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^pub enum PrecalculationError {$/;"	g
PrimitiveRootOfUnity	/home/einar/triton/twenty-first/twenty-first/src/shared_math/traits.rs	/^pub trait PrimitiveRootOfUnity$/;"	i
ProcessResults	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/process_results_impl.rs	/^impl<'a, I, T, E> Iterator for ProcessResults<'a, I, E>$/;"	c
ProcessResults	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/process_results_impl.rs	/^pub struct ProcessResults<'a, I, E: 'a> {$/;"	s
Product	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I, J> FusedIterator for Product<I, J>$/;"	c
Product	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I, J> Iterator for Product<I, J>$/;"	c
Product	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub struct Product<I, J>$/;"	s
Profile	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    Profile(Duration),$/;"	e	enum:Mode
Profiler	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/profiler.rs	/^pub trait Profiler {$/;"	i
ProgramEvaluationArgument	/home/einar/triton/twenty-first/twenty-first/src/shared_math/stark/stark_verify_error.rs	/^    ProgramEvaluationArgument,$/;"	e	enum:StarkVerifyError
ProofStream	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream.rs	/^impl From<Vec<u8>> for ProofStream {$/;"	c
ProofStream	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream.rs	/^impl ProofStream {$/;"	c
ProofStream	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream.rs	/^pub struct ProofStream {$/;"	s
ProofStream	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^impl<Item, H: AlgebraicHasher> Default for ProofStream<Item, H> {$/;"	c
ProofStream	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^impl<Item, H> ProofStream<Item, H>$/;"	c
ProofStream	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^pub struct ProofStream<Item, H: AlgebraicHasher> {$/;"	s
ProofStreamError	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream.rs	/^impl Error for ProofStreamError {}$/;"	c
ProofStreamError	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream.rs	/^impl fmt::Display for ProofStreamError {$/;"	c
ProofStreamError	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream.rs	/^pub enum ProofStreamError {$/;"	g
ProofStreamError	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^impl Display for ProofStreamError {$/;"	c
ProofStreamError	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^impl Error for ProofStreamError {}$/;"	c
ProofStreamError	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^impl ProofStreamError {$/;"	c
ProofStreamError	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^pub struct ProofStreamError {$/;"	s
PutBack	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I> Iterator for PutBack<I>$/;"	c
PutBack	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I> PutBack<I>$/;"	c
PutBack	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub struct PutBack<I>$/;"	s
PutBack	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/peeking_take_while.rs	/^impl<I> PeekingNext for PutBack<I>$/;"	c
PutBackN	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/peeking_take_while.rs	/^impl<I> PeekingNext for PutBackN<I>$/;"	c
PutBackN	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/put_back_n_impl.rs	/^impl<I: Iterator> Iterator for PutBackN<I> {$/;"	c
PutBackN	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/put_back_n_impl.rs	/^impl<I: Iterator> PutBackN<I> {$/;"	c
PutBackN	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/put_back_n_impl.rs	/^pub struct PutBackN<I: Iterator> {$/;"	s
QUOTIENT	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    pub const QUOTIENT: u64 = 0xffff_ffff_0000_0001u64;$/;"	C	implementation:BFieldElement
Quiet	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    Quiet,$/;"	e	enum:CliVerbosity
R	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^impl<R: RngCore + ?Sized> Rng for R {}$/;"	c
RANGE	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^        const RANGE: u32 = 26 + 26 + 10;$/;"	C	method:Alphanumeric::sample
RATE	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^pub const RATE: usize = 10;$/;"	C
REGISTER	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^        static REGISTER: Once = Once::new();$/;"	v	function:fork::register_fork_handler
REPORT_STATS	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/mod.rs	/^const REPORT_STATS: [Statistic; 7] = [$/;"	C
RESEEDING_RNG_FORK_COUNTER	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    static RESEEDING_RNG_FORK_COUNTER: AtomicUsize = AtomicUsize::new(0);$/;"	v	module:fork
ROUND_CONSTANTS	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^pub const ROUND_CONSTANTS: [u64; NUM_ROUNDS * STATE_SIZE * 2] = [$/;"	C
RUNNER_HELLO_SIZE	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^const RUNNER_HELLO_SIZE: usize = 15 \/\/RUNNER_MAGIC_NUMBER.len() \/\/ magic number$/;"	C
RUNNER_MAGIC_NUMBER	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^const RUNNER_MAGIC_NUMBER: &str = "cargo-criterion";$/;"	C
RandomizerError	/home/einar/triton/twenty-first/twenty-first/src/shared_math/stark/stark_verify_error.rs	/^    RandomizerError,$/;"	e	enum:MerkleProofError
Range	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^impl<T: SampleUniform + PartialOrd> SampleRange<T> for Range<T> {$/;"	c
RangeInclusive	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^impl<T: SampleUniform + PartialOrd> SampleRange<T> for RangeInclusive<T> {$/;"	c
RawBenchmarkId	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^impl From<&InternalBenchmarkId> for RawBenchmarkId {$/;"	c
RawBenchmarkId	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^pub struct RawBenchmarkId {$/;"	s
RcIter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/rciter_impl.rs	/^impl<'a, I> IntoIterator for &'a RcIter<I>$/;"	c
RcIter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/rciter_impl.rs	/^impl<A, I> FusedIterator for RcIter<I>$/;"	c
RcIter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/rciter_impl.rs	/^impl<A, I> Iterator for RcIter<I>$/;"	c
RcIter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/rciter_impl.rs	/^impl<I> Clone for RcIter<I> {$/;"	c
RcIter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/rciter_impl.rs	/^impl<I> DoubleEndedIterator for RcIter<I>$/;"	c
RcIter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/rciter_impl.rs	/^pub struct RcIter<I> {$/;"	s
ReadError	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^impl fmt::Display for ReadError {$/;"	c
ReadError	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^impl std::error::Error for ReadError {$/;"	c
ReadError	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^pub struct ReadError(std::io::Error);$/;"	s
ReadRng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^impl<R: Read> ReadRng<R> {$/;"	c
ReadRng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^impl<R: Read> RngCore for ReadRng<R> {$/;"	c
ReadRng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^pub struct ReadRng<R> {$/;"	s
Regressed	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    Regressed,$/;"	e	enum:ComparisonResult
Regressed	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    Regressed,$/;"	e	enum:ComparisonResult
RepeatCall	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/sources.rs	/^impl<A, F> Iterator for RepeatCall<F>$/;"	c
RepeatCall	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/sources.rs	/^impl<F> fmt::Debug for RepeatCall<F>$/;"	c
RepeatCall	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/sources.rs	/^pub struct RepeatCall<F> {$/;"	s
RepeatN	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/repeatn.rs	/^impl<A> DoubleEndedIterator for RepeatN<A>$/;"	c
RepeatN	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/repeatn.rs	/^impl<A> ExactSizeIterator for RepeatN<A>$/;"	c
RepeatN	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/repeatn.rs	/^impl<A> FusedIterator for RepeatN<A>$/;"	c
RepeatN	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/repeatn.rs	/^impl<A> Iterator for RepeatN<A>$/;"	c
RepeatN	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/repeatn.rs	/^pub struct RepeatN<A> {$/;"	s
Report	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^pub(crate) trait Report {$/;"	i
ReportContext	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^impl ReportContext {$/;"	c
ReportContext	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^pub struct ReportContext {$/;"	s
ReportLink	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^impl<'a> ReportLink<'a> {$/;"	c
ReportLink	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^struct ReportLink<'a> {$/;"	s
Reports	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^impl Report for Reports {$/;"	c
Reports	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^pub(crate) struct Reports {$/;"	s
Resamples	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/resamples.rs	/^impl<'a, X, Y> Resamples<'a, X, Y>$/;"	c
Resamples	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/resamples.rs	/^pub struct Resamples<'a, X, Y>$/;"	s
Resamples	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/resamples.rs	/^impl<'a, A> Resamples<'a, A>$/;"	c
Resamples	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/resamples.rs	/^pub struct Resamples<'a, A>$/;"	s
RescuePrimeRegular	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^impl AlgebraicHasher for RescuePrimeRegular {$/;"	c
RescuePrimeRegular	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^impl RescuePrimeRegular {$/;"	c
RescuePrimeRegular	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^pub struct RescuePrimeRegular {}$/;"	s
RescuePrimeRegularState	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^impl RescuePrimeRegularState {$/;"	c
RescuePrimeRegularState	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^pub struct RescuePrimeRegularState {$/;"	s
ReseedingCore	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^impl<R, Rsdr> BlockRngCore for ReseedingCore<R, Rsdr>$/;"	c
ReseedingCore	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^impl<R, Rsdr> Clone for ReseedingCore<R, Rsdr>$/;"	c
ReseedingCore	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^impl<R, Rsdr> CryptoRng for ReseedingCore<R, Rsdr>$/;"	c
ReseedingCore	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^impl<R, Rsdr> ReseedingCore<R, Rsdr>$/;"	c
ReseedingCore	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^struct ReseedingCore<R, Rsdr> {$/;"	s
ReseedingRng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^impl<R, Rsdr: RngCore> RngCore for ReseedingRng<R, Rsdr>$/;"	c
ReseedingRng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^impl<R, Rsdr> Clone for ReseedingRng<R, Rsdr>$/;"	c
ReseedingRng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^impl<R, Rsdr> CryptoRng for ReseedingRng<R, Rsdr>$/;"	c
ReseedingRng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^impl<R, Rsdr> ReseedingRng<R, Rsdr>$/;"	c
ReseedingRng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^pub struct ReseedingRng<R, Rsdr>(BlockRng<ReseedingCore<R, Rsdr>>)$/;"	s
Result	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/error.rs	/^pub type Result<T> = ::std::result::Result<T, Error>;$/;"	t
Result	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^type Result<T> = StdResult<T, Error>;$/;"	t
Results	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    type Results = <R as BlockRngCore>::Results;$/;"	t
Right	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/either_or_both.rs	/^    Right(B),$/;"	e	enum:EitherOrBoth
Rng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/rand_util.rs	/^pub type Rng = Rand64;$/;"	t
Rng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^pub trait Rng: RngCore {$/;"	i
Rng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/small.rs	/^type Rng = super::xoshiro128plusplus::Xoshiro128PlusPlus;$/;"	t
Rng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/small.rs	/^type Rng = super::xoshiro256plusplus::Xoshiro256PlusPlus;$/;"	t
Routine	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/routine.rs	/^pub(crate) trait Routine<M: Measurement, T: ?Sized> {$/;"	i
Runtime	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/async_executor.rs	/^impl AsyncExecutor for &tokio::runtime::Runtime {$/;"	c
Runtime	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/async_executor.rs	/^impl AsyncExecutor for tokio::runtime::Runtime {$/;"	c
RustType	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    type RustType: Default;$/;"	t	interface:FutharkType
RustType	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^   type RustType = bool;$/;"	t	implementation:futhark_bool_1d
RustType	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^   type RustType = i64;$/;"	t	implementation:futhark_i64_1d
RustType	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^   type RustType = u64;$/;"	t	implementation:futhark_u64_1d
RustType	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^   type RustType = u64;$/;"	t	implementation:futhark_u64_2d
RustType	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^   type RustType = u64;$/;"	t	implementation:futhark_u64_3d
RustType	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^   type RustType = u8;$/;"	t	implementation:futhark_u8_2d
RustType	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^   type RustType = u8;$/;"	t	implementation:futhark_u8_3d
S	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    impl<S: Into<String>> Sealed for S {}$/;"	c	module:private
S	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^impl<S: Into<String>> IntoBenchmarkId for S {$/;"	c
SCALE	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^const SCALE: f64 = 2.0 * (1u64 << 63) as f64;$/;"	C
SEEK_CUR	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const SEEK_CUR: u32 = 1;$/;"	C
SEEK_END	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const SEEK_END: u32 = 2;$/;"	C
SEEK_SET	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const SEEK_SET: u32 = 0;$/;"	C
SIG_ATOMIC_MAX	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const SIG_ATOMIC_MAX: u32 = 2147483647;$/;"	C
SIG_ATOMIC_MIN	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const SIG_ATOMIC_MIN: i32 = -2147483648;$/;"	C
SIZE	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^static SIZE: Size = Size(1280, 720);$/;"	v
SIZE	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/mod.rs	/^static SIZE: (u32, u32) = (960, 540);$/;"	v
SIZE_MAX	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const SIZE_MAX: i32 = -1;$/;"	C
STATE_SIZE	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^pub const STATE_SIZE: usize = 16;$/;"	C
SaltedAuthenticationStructure	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^pub type SaltedAuthenticationStructure<Digest> = Vec<(PartialAuthenticationPath<Digest>, Digest)/;"	t
SaltedMaker	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^type SaltedMaker = CpuParallel;$/;"	t
SaltedMerkleTree	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^impl<H: AlgebraicHasher> SaltedMerkleTree<H>$/;"	c
SaltedMerkleTree	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^pub struct SaltedMerkleTree<H>$/;"	s
Sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/sample.rs	/^impl<A> Sample<A>$/;"	c
Sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/sample.rs	/^impl<A> ops::Deref for Sample<A> {$/;"	c
Sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/sample.rs	/^pub struct Sample<A>([A]);$/;"	s
SampleBorrow	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^pub trait SampleBorrow<Borrowed> {$/;"	i
SampleRange	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^pub trait SampleRange<T> {$/;"	i
SampleUniform	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^pub trait SampleUniform: Sized {$/;"	i
Sampler	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^            type Sampler = UniformMyF32;$/;"	t	implementation:tests::test_custom_uniform::MyF32
Sampler	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    type Sampler = UniformChar;$/;"	t	implementation:char
Sampler	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    type Sampler = UniformDuration;$/;"	t	implementation:Duration
Sampler	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    type Sampler: UniformSampler<X = Self>;$/;"	t	interface:SampleUniform
SamplingMethod	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^impl From<crate::ActualSamplingMode> for SamplingMethod {$/;"	c
SamplingMethod	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^pub enum SamplingMethod {$/;"	g
SamplingMode	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^impl SamplingMode {$/;"	c
SamplingMode	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^pub enum SamplingMode {$/;"	g
Save	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    Save,$/;"	e	enum:Baseline
SavedSample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^pub(crate) struct SavedSample {$/;"	s
ScaleForMachines	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    ScaleForMachines {$/;"	e	enum:IncomingMessage
ScaleThroughputs	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    ScaleThroughputs {$/;"	e	enum:IncomingMessage
ScaleValues	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    ScaleValues {$/;"	e	enum:IncomingMessage
ScaledValues	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    ScaledValues {$/;"	e	enum:OutgoingMessage
Sealed	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    pub trait Sealed {}$/;"	i	module:private
Seed	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/small.rs	/^    type Seed = <Rng as SeedableRng>::Seed;$/;"	t	implementation:SmallRng
Seed	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs	/^    type Seed = <Rng as SeedableRng>::Seed;$/;"	t	implementation:StdRng
Seed	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro128plusplus.rs	/^    type Seed = [u8; 16];$/;"	t	implementation:Xoshiro128PlusPlus
Seed	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro256plusplus.rs	/^    type Seed = [u8; 32];$/;"	t	implementation:Xoshiro256PlusPlus
SerdeError	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/error.rs	/^    SerdeError {$/;"	e	enum:Error
Serialization	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    Serialization(ciborium::ser::Error<std::io::Error>),$/;"	e	enum:MessageError
Shorter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/diff.rs	/^    Shorter(usize, PutBack<I>),$/;"	e	enum:Diff
Silverman	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/kde/mod.rs	/^    Silverman,$/;"	e	enum:Bandwidth
SizeHint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/size_hint.rs	/^pub type SizeHint = (usize, Option<usize>);$/;"	t
SizeMismatch	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^    SizeMismatch(usize, usize),$/;"	e	enum:Error
SkippingBenchmark	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    SkippingBenchmark {$/;"	e	enum:OutgoingMessage
Slice	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs	/^impl<'a, T> Distribution<&'a T> for Slice<'a, T> {$/;"	c
Slice	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs	/^impl<'a, T> Slice<'a, T> {$/;"	c
Slice	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs	/^pub struct Slice<'a, T> {$/;"	s
SliceChooseIter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^impl<'a, S: Index<usize, Output = T> + ?Sized + 'a, T: 'a> ExactSizeIterator$/;"	c
SliceChooseIter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^impl<'a, S: Index<usize, Output = T> + ?Sized + 'a, T: 'a> Iterator for SliceChooseIter<'a, S, T/;"	c
SliceChooseIter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^pub struct SliceChooseIter<'a, S: ?Sized + 'a, T: 'a> {$/;"	s
SliceRandom	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^pub trait SliceRandom {$/;"	i
Slope	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    Slope,$/;"	e	enum:Statistic
Slope	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/regression.rs	/^impl<A> Slope<A>$/;"	c
Slope	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/regression.rs	/^pub struct Slope<A>(pub A)$/;"	s
Small	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    Small {$/;"	e	enum:UniformDurationMode
SmallInput	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    SmallInput,$/;"	e	enum:BatchSize
SmallRng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/small.rs	/^impl RngCore for SmallRng {$/;"	c
SmallRng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/small.rs	/^impl SeedableRng for SmallRng {$/;"	c
SmallRng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/small.rs	/^pub struct SmallRng(Rng);$/;"	s
SmolExecutor	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/async_executor.rs	/^impl AsyncExecutor for SmolExecutor {$/;"	c
SmolExecutor	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/async_executor.rs	/^pub struct SmolExecutor;$/;"	s
Standard	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^impl Distribution<u128> for Standard {$/;"	c
Standard	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^impl Distribution<u16> for Standard {$/;"	c
Standard	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^impl Distribution<u32> for Standard {$/;"	c
Standard	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^impl Distribution<u64> for Standard {$/;"	c
Standard	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^impl Distribution<u8> for Standard {$/;"	c
Standard	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^impl Distribution<usize> for Standard {$/;"	c
Standard	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs	/^pub struct Standard;$/;"	s
Standard	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^impl DistString for Standard {$/;"	c
Standard	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^impl Distribution<()> for Standard {$/;"	c
Standard	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^impl Distribution<bool> for Standard {$/;"	c
Standard	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^impl Distribution<char> for Standard {$/;"	c
Standard	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^impl<T, const N: usize> Distribution<[T; N]> for Standard$/;"	c
Standard	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^impl<T> Distribution<Option<T>> for Standard$/;"	c
Standard	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^impl<T> Distribution<Wrapping<T>> for Standard$/;"	c
Standard	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl Distribution<BFieldElement> for Standard {$/;"	c
Standard	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^impl Distribution<Digest> for Standard {$/;"	c
Standard	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl Distribution<XFieldElement> for Standard {$/;"	c
StarkVerifyError	/home/einar/triton/twenty-first/twenty-first/src/shared_math/stark/stark_verify_error.rs	/^impl Error for StarkVerifyError {}$/;"	c
StarkVerifyError	/home/einar/triton/twenty-first/twenty-first/src/shared_math/stark/stark_verify_error.rs	/^impl fmt::Display for StarkVerifyError {$/;"	c
StarkVerifyError	/home/einar/triton/twenty-first/twenty-first/src/shared_math/stark/stark_verify_error.rs	/^pub enum StarkVerifyError {$/;"	g
Start	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/permutations.rs	/^    Start {$/;"	e	enum:CompleteState
StartOfIter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/multi_product.rs	/^    StartOfIter,$/;"	e	enum:MultiProductIterState
StartUnknownLen	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/permutations.rs	/^    StartUnknownLen {$/;"	e	enum:PermutationState
State	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^        type State<T> = Result<T, Option<T>>;$/;"	t	method:Itertools::tree_fold1
Statistic	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^impl fmt::Display for Statistic {$/;"	c
Statistic	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^pub enum Statistic {$/;"	g
StdDev	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    StdDev,$/;"	e	enum:Statistic
StdRng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs	/^impl CryptoRng for StdRng {}$/;"	c
StdRng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs	/^impl RngCore for StdRng {$/;"	c
StdRng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs	/^impl SeedableRng for StdRng {$/;"	c
StdRng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs	/^pub struct StdRng(Rng);$/;"	s
Step	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I> ExactSizeIterator for Step<I>$/;"	c
Step	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I> Iterator for Step<I>$/;"	c
Step	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub struct Step<I> {$/;"	s
StepRng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs	/^impl RngCore for StepRng {$/;"	c
StepRng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs	/^impl StepRng {$/;"	c
StepRng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs	/^pub struct StepRng {$/;"	s
SummaryContext	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^struct SummaryContext {$/;"	s
T	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^impl<T: ?Sized> Itertools for T where T: Iterator { }$/;"	c
T	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^impl<T: TupleCollect> HomogeneousTuple for T {}$/;"	c
T	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^impl<T> SliceRandom for [T] {$/;"	c
T	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/traits.rs	/^impl<T, U> IntoCtx<U> for T$/;"	c
THREAD_RNG_RESEED_THRESHOLD	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/thread.rs	/^const THREAD_RNG_RESEED_THRESHOLD: u64 = 1024 * 64;$/;"	C
THUMBNAIL_SIZE	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^const THUMBNAIL_SIZE: Option<Size> = Some(Size(450, 300));$/;"	C
TMP_MAX	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const TMP_MAX: u32 = 238328;$/;"	C
Tails	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/mod.rs	/^pub enum Tails {$/;"	g
TakeWhileRef	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<'a, I, F> Iterator for TakeWhileRef<'a, I, F>$/;"	c
TakeWhileRef	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<'a, I, F> fmt::Debug for TakeWhileRef<'a, I, F>$/;"	c
TakeWhileRef	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub struct TakeWhileRef<'a, I: 'a, F> {$/;"	s
Target	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/mod.rs	/^    type Target = Sample<A>;$/;"	t	implementation:Distribution
Target	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^    type Target = Sample<A>;$/;"	t
Target	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/sample.rs	/^    type Target = [A];$/;"	t	implementation:Sample
Tee	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tee.rs	/^impl<I> ExactSizeIterator for Tee<I>$/;"	c
Tee	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tee.rs	/^impl<I> Iterator for Tee<I>$/;"	c
Tee	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tee.rs	/^pub struct Tee<I>$/;"	s
TeeBuffer	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tee.rs	/^struct TeeBuffer<A, I> {$/;"	s
Test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    Test,$/;"	e	enum:Mode
TestCase	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^        type TestCase = (Interval, Option<Vec<u128>>);$/;"	t	function:mmr_test::get_authentication_path_node_indices_test
TestCase	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^        type TestCase = (u128, (Vec<u128>, Vec<u128>));$/;"	t	function:mmr_test::get_peak_heights_and_peak_node_indices_test
TestItem	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^    enum TestItem {$/;"	g	module:proof_stream_typed_tests
TestItem	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^    impl Default for TestItem {$/;"	c	module:proof_stream_typed_tests
TestItem	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^    impl IntoIterator for TestItem {$/;"	c	module:proof_stream_typed_tests
TestItem	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^    impl TestItem {$/;"	c	module:proof_stream_typed_tests
ThreadRng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/thread.rs	/^impl CryptoRng for ThreadRng {}$/;"	c
ThreadRng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/thread.rs	/^impl Default for ThreadRng {$/;"	c
ThreadRng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/thread.rs	/^impl RngCore for ThreadRng {$/;"	c
ThreadRng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/thread.rs	/^pub struct ThreadRng {$/;"	s
Throughput	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^pub enum Throughput {$/;"	g
TimingReport	/home/einar/triton/twenty-first/twenty-first/src/timing_reporter.rs	/^impl Display for TimingReport {$/;"	c
TimingReport	/home/einar/triton/twenty-first/twenty-first/src/timing_reporter.rs	/^pub struct TimingReport {$/;"	s
TimingReporter	/home/einar/triton/twenty-first/twenty-first/src/timing_reporter.rs	/^impl TimingReporter {$/;"	c
TimingReporter	/home/einar/triton/twenty-first/twenty-first/src/timing_reporter.rs	/^pub struct TimingReporter {$/;"	s
TooMany	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^    TooMany,$/;"	e	enum:WeightedError
TranscriptLengthExceeded	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream.rs	/^    TranscriptLengthExceeded,$/;"	e	enum:ProofStreamError
TransitionZerofierError	/home/einar/triton/twenty-first/twenty-first/src/shared_math/stark/stark_verify_error.rs	/^    TransitionZerofierError,$/;"	e	enum:MerkleProofError
Tuple	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^pub trait Tuple: Sized {$/;"	i
Tuple1Combination	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I: Iterator> Iterator for Tuple1Combination<I> {$/;"	c
Tuple1Combination	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I> From<I> for Tuple1Combination<I> {$/;"	c
Tuple1Combination	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub struct Tuple1Combination<I> {$/;"	s
TupleBuffer	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^impl<T> ExactSizeIterator for TupleBuffer<T>$/;"	c
TupleBuffer	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^impl<T> Iterator for TupleBuffer<T>$/;"	c
TupleBuffer	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^impl<T> TupleBuffer<T>$/;"	c
TupleBuffer	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^pub struct TupleBuffer<T>$/;"	s
TupleCollect	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^pub trait TupleCollect: Sized {$/;"	i
TupleCombinations	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I, T> FusedIterator for TupleCombinations<I, T>$/;"	c
TupleCombinations	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I, T> Iterator for TupleCombinations<I, T>$/;"	c
TupleCombinations	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub struct TupleCombinations<I, T>$/;"	s
TupleWindows	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^impl<I, T> FusedIterator for TupleWindows<I, T>$/;"	c
TupleWindows	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^impl<I, T> Iterator for TupleWindows<I, T>$/;"	c
TupleWindows	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^pub struct TupleWindows<I, T>$/;"	s
TupledDistributions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^pub trait TupledDistributions: Sized {$/;"	i
TupledDistributionsBuilder	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^pub trait TupledDistributionsBuilder: Sized {$/;"	i
Tuples	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^impl<I, T> Iterator for Tuples<I, T>$/;"	c
Tuples	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^impl<I, T> Tuples<I, T>$/;"	c
Tuples	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^pub struct Tuples<I, T>$/;"	s
Two	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/mod.rs	/^    Two,$/;"	e	enum:Tails
Typical	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    Typical,$/;"	e	enum:Statistic
U32	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    U32(Vec<u32>),$/;"	e	enum:IndexVec
U32	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    U32(slice::Iter<'a, u32>),$/;"	e	enum:IndexVecIter
U32	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    U32(vec::IntoIter<u32>),$/;"	e	enum:IndexVecIntoIter
U32s	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^impl<const N: usize> Add for U32s<N> {$/;"	c
U32s	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^impl<const N: usize> AsRef<[u32; N]> for U32s<N> {$/;"	c
U32s	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^impl<const N: usize> Display for U32s<N> {$/;"	c
U32s	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^impl<const N: usize> Div for U32s<N> {$/;"	c
U32s	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^impl<const N: usize> Eq for U32s<N> {}$/;"	c
U32s	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^impl<const N: usize> From<BigUint> for U32s<N> {$/;"	c
U32s	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^impl<const N: usize> From<u32> for U32s<N> {$/;"	c
U32s	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^impl<const N: usize> Hashable for U32s<N> {$/;"	c
U32s	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^impl<const N: usize> Mul for U32s<N> {$/;"	c
U32s	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^impl<const N: usize> One for U32s<N> {$/;"	c
U32s	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^impl<const N: usize> Ord for U32s<N> {$/;"	c
U32s	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^impl<const N: usize> PartialOrd for U32s<N> {$/;"	c
U32s	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^impl<const N: usize> Rem for U32s<N> {$/;"	c
U32s	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^impl<const N: usize> Sub for U32s<N> {$/;"	c
U32s	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^impl<const N: usize> Sum for U32s<N> {$/;"	c
U32s	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^impl<const N: usize> TryFrom<u64> for U32s<N> {$/;"	c
U32s	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^impl<const N: usize> U32s<N> {$/;"	c
U32s	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^impl<const N: usize> Zero for U32s<N> {$/;"	c
U32s	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^pub struct U32s<const N: usize> {$/;"	s
UINT16_MAX	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const UINT16_MAX: u32 = 65535;$/;"	C
UINT32_MAX	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const UINT32_MAX: u32 = 4294967295;$/;"	C
UINT8_MAX	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const UINT8_MAX: u32 = 255;$/;"	C
UINTPTR_MAX	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const UINTPTR_MAX: i32 = -1;$/;"	C
UINT_FAST16_MAX	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const UINT_FAST16_MAX: i32 = -1;$/;"	C
UINT_FAST32_MAX	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const UINT_FAST32_MAX: i32 = -1;$/;"	C
UINT_FAST8_MAX	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const UINT_FAST8_MAX: u32 = 255;$/;"	C
UINT_LEAST16_MAX	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const UINT_LEAST16_MAX: u32 = 65535;$/;"	C
UINT_LEAST32_MAX	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const UINT_LEAST32_MAX: u32 = 4294967295;$/;"	C
UINT_LEAST8_MAX	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const UINT_LEAST8_MAX: u32 = 255;$/;"	C
UInt	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    type UInt;$/;"	t	interface:FloatSIMDUtils
UInt	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^trait UInt: Copy + PartialOrd + Ord + PartialEq + Eq + SampleUniform$/;"	i
USize	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    USize(Vec<usize>),$/;"	e	enum:IndexVec
USize	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    USize(slice::Iter<'a, usize>),$/;"	e	enum:IndexVecIter
USize	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    USize(vec::IntoIter<usize>),$/;"	e	enum:IndexVecIntoIter
Unfold	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/sources.rs	/^impl<A, St, F> Iterator for Unfold<St, F>$/;"	c
Unfold	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/sources.rs	/^impl<St, F> fmt::Debug for Unfold<St, F>$/;"	c
Unfold	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/sources.rs	/^pub struct Unfold<St, F> {$/;"	s
UnhintedIterator	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    impl<I: Iterator + Clone> Iterator for UnhintedIterator<I> {$/;"	c	module:test
UnhintedIterator	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    struct UnhintedIterator<I: Iterator + Clone> {$/;"	s	module:test
Uniform	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^impl<X: SampleUniform> Distribution<X> for Uniform<X> {$/;"	c
Uniform	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^impl<X: SampleUniform> From<Range<X>> for Uniform<X> {$/;"	c
Uniform	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^impl<X: SampleUniform> From<RangeInclusive<X>> for Uniform<X> {$/;"	c
Uniform	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^impl<X: SampleUniform> Uniform<X> {$/;"	c
Uniform	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^pub struct Uniform<X: SampleUniform>(X::Sampler);$/;"	s
UniformChar	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^impl UniformSampler for UniformChar {$/;"	c
UniformChar	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^pub struct UniformChar {$/;"	s
UniformDuration	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^impl UniformSampler for UniformDuration {$/;"	c
UniformDuration	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^pub struct UniformDuration {$/;"	s
UniformDurationMode	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^enum UniformDurationMode {$/;"	g
UniformFloat	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^pub struct UniformFloat<X> {$/;"	s
UniformInt	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^pub struct UniformInt<X> {$/;"	s
UniformMyF32	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^        impl UniformSampler for UniformMyF32 {$/;"	c	function:tests::test_custom_uniform
UniformMyF32	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^        struct UniformMyF32(UniformFloat<f32>);$/;"	s	function:tests::test_custom_uniform
UniformSampler	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^pub trait UniformSampler: Sized {$/;"	i
Unique	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/unique_impl.rs	/^impl<I> DoubleEndedIterator for Unique<I>$/;"	c
Unique	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/unique_impl.rs	/^impl<I> FusedIterator for Unique<I>$/;"	c
Unique	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/unique_impl.rs	/^impl<I> Iterator for Unique<I>$/;"	c
Unique	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/unique_impl.rs	/^impl<I> fmt::Debug for Unique<I>$/;"	c
Unique	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/unique_impl.rs	/^pub struct Unique<I: Iterator> {$/;"	s
UniqueBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/unique_impl.rs	/^impl<I, V, F> DoubleEndedIterator for UniqueBy<I, V, F>$/;"	c
UniqueBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/unique_impl.rs	/^impl<I, V, F> FusedIterator for UniqueBy<I, V, F>$/;"	c
UniqueBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/unique_impl.rs	/^impl<I, V, F> Iterator for UniqueBy<I, V, F>$/;"	c
UniqueBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/unique_impl.rs	/^impl<I, V, F> fmt::Debug for UniqueBy<I, V, F>$/;"	c
UniqueBy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/unique_impl.rs	/^pub struct UniqueBy<I: Iterator, V, F> {$/;"	s
Update	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I, F> DoubleEndedIterator for Update<I, F>$/;"	c
Update	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I, F> ExactSizeIterator for Update<I, F>$/;"	c
Update	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I, F> FusedIterator for Update<I, F>$/;"	c
Update	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I, F> Iterator for Update<I, F>$/;"	c
Update	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I, F> fmt::Debug for Update<I, F>$/;"	c
Update	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub struct Update<I, F> {$/;"	s
ValidationError	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^impl Error for ValidationError {}$/;"	c
ValidationError	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^impl fmt::Display for ValidationError {$/;"	c
ValidationError	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^pub enum ValidationError {$/;"	g
Value	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^    type Value = Duration;$/;"	t	implementation:WallTime
Value	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^    type Value;$/;"	t	interface:Measurement
Value	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    Value,$/;"	e	enum:ValueType
ValueFormatter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^pub trait ValueFormatter {$/;"	i
ValueType	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^pub enum ValueType {$/;"	g
Vec	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^impl<T> Append<T> for Vec<T> {$/;"	c
Vec	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^impl<A, B, C, D> TupledDistributionsBuilder for (Vec<A>, Vec<B>, Vec<C>, Vec<D>)$/;"	c
Vec	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^impl<A, B, C> TupledDistributionsBuilder for (Vec<A>, Vec<B>, Vec<C>)$/;"	c
Vec	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^impl<A, B> TupledDistributionsBuilder for (Vec<A>, Vec<B>)$/;"	c
Vec	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^impl<A> TupledDistributionsBuilder for (Vec<A>,)$/;"	c
Vec	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^impl From<Digest> for Vec<BFieldElement> {$/;"	c
VecIntoIter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/free.rs	/^type VecIntoIter<T> = alloc::vec::IntoIter<T>;$/;"	t
VecIntoIter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^type VecIntoIter<T> = alloc::vec::IntoIter<T>;$/;"	t
Verbose	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    Verbose,$/;"	e	enum:CliVerbosity
WINT_MAX	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const WINT_MAX: u32 = 4294967295;$/;"	C
WINT_MIN	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const WINT_MIN: u32 = 0;$/;"	C
WallTime	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^impl Measurement for WallTime {$/;"	c
WallTime	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^pub struct WallTime;$/;"	s
Warmup	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    Warmup {$/;"	e	enum:OutgoingMessage
Weight	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted.rs	/^    pub trait Weight {}$/;"	i	module:alias_method
WeightedError	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^impl fmt::Display for WeightedError {$/;"	c
WeightedError	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^impl std::error::Error for WeightedError {}$/;"	c
WeightedError	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^pub enum WeightedError {$/;"	g
WeightedIndex	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted.rs	/^    impl<W: Weight> WeightedIndex<W> {$/;"	c	module:alias_method
WeightedIndex	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted.rs	/^    pub struct WeightedIndex<W: Weight> {$/;"	s	module:alias_method
WeightedIndex	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^impl<X: SampleUniform + PartialOrd> WeightedIndex<X> {$/;"	c
WeightedIndex	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^impl<X> Distribution<usize> for WeightedIndex<X>$/;"	c
WeightedIndex	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^pub struct WeightedIndex<X: SampleUniform + PartialOrd> {$/;"	s
WhileSome	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^impl<I, A> Iterator for WhileSome<I>$/;"	c
WhileSome	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub struct WhileSome<I> {$/;"	s
WideningMultiply	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^pub(crate) trait WideningMultiply<RHS = Self> {$/;"	i
WindowHintedIterator	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    impl<I: ExactSizeIterator + Iterator + Clone> Iterator for WindowHintedIterator<I> {$/;"	c	module:test
WindowHintedIterator	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    struct WindowHintedIterator<I: ExactSizeIterator + Iterator + Clone> {$/;"	s	module:test
WithPosition	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/with_position.rs	/^impl<I: Iterator> FusedIterator for WithPosition<I> $/;"	c
WithPosition	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/with_position.rs	/^impl<I: Iterator> Iterator for WithPosition<I> {$/;"	c
WithPosition	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/with_position.rs	/^impl<I> Clone for WithPosition<I>$/;"	c
WithPosition	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/with_position.rs	/^impl<I> ExactSizeIterator for WithPosition<I>$/;"	c
WithPosition	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/with_position.rs	/^pub struct WithPosition<I>$/;"	s
X	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^            type X = MyF32;$/;"	t	implementation:tests::test_custom_uniform::UniformMyF32
X	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    type X = Duration;$/;"	t	implementation:UniformDuration
X	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    type X = char;$/;"	t	implementation:UniformChar
X	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    type X;$/;"	t	interface:UniformSampler
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl Add<BFieldElement> for XFieldElement {$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl Add<XFieldElement> for XFieldElement {$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl AddAssign<BFieldElement> for XFieldElement {$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl AddAssign<XFieldElement> for XFieldElement {$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl CyclicGroupGenerator for XFieldElement {$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl Display for XFieldElement {$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl Div for XFieldElement {$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl FiniteField for XFieldElement {}$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl From<BFieldElement> for XFieldElement {$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl From<Polynomial<BFieldElement>> for XFieldElement {$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl From<u32> for XFieldElement {$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl FromVecu8 for XFieldElement {$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl Inverse for XFieldElement {$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl ModPowU32 for XFieldElement {$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl ModPowU64 for XFieldElement {$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl Mul<BFieldElement> for XFieldElement {$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl Mul<XFieldElement> for XFieldElement {$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl MulAssign<BFieldElement> for XFieldElement {$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl MulAssign<XFieldElement> for XFieldElement {$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl Neg for XFieldElement {$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl New for XFieldElement {$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl One for XFieldElement {$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl PrimitiveRootOfUnity for XFieldElement {$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl Sub<BFieldElement> for XFieldElement {$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl Sub<XFieldElement> for XFieldElement {$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl SubAssign<BFieldElement> for XFieldElement {$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl SubAssign<XFieldElement> for XFieldElement {$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl Sum for XFieldElement {$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl TryFrom<&[BFieldElement]> for XFieldElement {$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl TryFrom<Vec<BFieldElement>> for XFieldElement {$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl XFieldElement {$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^impl Zero for XFieldElement {$/;"	c
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^pub struct XFieldElement {$/;"	s
XFieldElement	/home/einar/triton/twenty-first/twenty-first/src/util_types/algebraic_hasher.rs	/^impl Hashable for XFieldElement {$/;"	c
Xoshiro128PlusPlus	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro128plusplus.rs	/^impl RngCore for Xoshiro128PlusPlus {$/;"	c
Xoshiro128PlusPlus	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro128plusplus.rs	/^impl SeedableRng for Xoshiro128PlusPlus {$/;"	c
Xoshiro128PlusPlus	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro128plusplus.rs	/^pub struct Xoshiro128PlusPlus {$/;"	s
Xoshiro256PlusPlus	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro256plusplus.rs	/^impl RngCore for Xoshiro256PlusPlus {$/;"	c
Xoshiro256PlusPlus	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro256plusplus.rs	/^impl SeedableRng for Xoshiro256PlusPlus {$/;"	c
Xoshiro256PlusPlus	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro256plusplus.rs	/^pub struct Xoshiro256PlusPlus {$/;"	s
ZeroDegreeInput	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    ZeroDegreeInput,$/;"	e	enum:PrecalculationError
Zip	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/ziptuple.rs	/^pub struct Zip<T> {$/;"	s
ZipEq	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/zip_eq_impl.rs	/^impl<I, J> ExactSizeIterator for ZipEq<I, J>$/;"	c
ZipEq	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/zip_eq_impl.rs	/^impl<I, J> Iterator for ZipEq<I, J>$/;"	c
ZipEq	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/zip_eq_impl.rs	/^pub struct ZipEq<I, J> {$/;"	s
ZipLongest	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/zip_longest.rs	/^impl<T, U> DoubleEndedIterator for ZipLongest<T, U>$/;"	c
ZipLongest	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/zip_longest.rs	/^impl<T, U> ExactSizeIterator for ZipLongest<T, U>$/;"	c
ZipLongest	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/zip_longest.rs	/^impl<T, U> FusedIterator for ZipLongest<T, U>$/;"	c
ZipLongest	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/zip_longest.rs	/^impl<T, U> Iterator for ZipLongest<T, U>$/;"	c
ZipLongest	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/zip_longest.rs	/^pub struct ZipLongest<T, U> {$/;"	s
_ATFILE_SOURCE	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const _ATFILE_SOURCE: u32 = 1;$/;"	C
_BITS_STDINT_INTN_H	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const _BITS_STDINT_INTN_H: u32 = 1;$/;"	C
_BITS_STDINT_UINTN_H	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const _BITS_STDINT_UINTN_H: u32 = 1;$/;"	C
_BITS_STDIO_LIM_H	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const _BITS_STDIO_LIM_H: u32 = 1;$/;"	C
_BITS_TIME64_H	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const _BITS_TIME64_H: u32 = 1;$/;"	C
_BITS_TYPESIZES_H	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const _BITS_TYPESIZES_H: u32 = 1;$/;"	C
_BITS_TYPES_H	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const _BITS_TYPES_H: u32 = 1;$/;"	C
_BITS_WCHAR_H	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const _BITS_WCHAR_H: u32 = 1;$/;"	C
_DEFAULT_SOURCE	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const _DEFAULT_SOURCE: u32 = 1;$/;"	C
_FEATURES_H	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const _FEATURES_H: u32 = 1;$/;"	C
_Float32	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type _Float32 = f32;$/;"	t
_Float32x	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type _Float32x = f64;$/;"	t
_Float64	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type _Float64 = f64;$/;"	t
_Float64x	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type _Float64x = u128;$/;"	t
_G_fpos64_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub struct _G_fpos64_t {$/;"	s
_G_fpos_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub struct _G_fpos_t {$/;"	s
_IOFBF	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const _IOFBF: u32 = 0;$/;"	C
_IOLBF	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const _IOLBF: u32 = 1;$/;"	C
_IONBF	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const _IONBF: u32 = 2;$/;"	C
_IO_EOF_SEEN	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const _IO_EOF_SEEN: u32 = 16;$/;"	C
_IO_ERR_SEEN	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const _IO_ERR_SEEN: u32 = 32;$/;"	C
_IO_FILE	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub struct _IO_FILE {$/;"	s
_IO_USER_LOCK	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const _IO_USER_LOCK: u32 = 32768;$/;"	C
_IO_backup_base	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub _IO_backup_base: *mut ::std::os::raw::c_char,$/;"	m	struct:_IO_FILE
_IO_buf_base	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub _IO_buf_base: *mut ::std::os::raw::c_char,$/;"	m	struct:_IO_FILE
_IO_buf_end	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub _IO_buf_end: *mut ::std::os::raw::c_char,$/;"	m	struct:_IO_FILE
_IO_codecvt	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub struct _IO_codecvt {$/;"	s
_IO_lock_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type _IO_lock_t = ::std::os::raw::c_void;$/;"	t
_IO_marker	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub struct _IO_marker {$/;"	s
_IO_read_base	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub _IO_read_base: *mut ::std::os::raw::c_char,$/;"	m	struct:_IO_FILE
_IO_read_end	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub _IO_read_end: *mut ::std::os::raw::c_char,$/;"	m	struct:_IO_FILE
_IO_read_ptr	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub _IO_read_ptr: *mut ::std::os::raw::c_char,$/;"	m	struct:_IO_FILE
_IO_save_base	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub _IO_save_base: *mut ::std::os::raw::c_char,$/;"	m	struct:_IO_FILE
_IO_save_end	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub _IO_save_end: *mut ::std::os::raw::c_char,$/;"	m	struct:_IO_FILE
_IO_wide_data	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub struct _IO_wide_data {$/;"	s
_IO_write_base	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub _IO_write_base: *mut ::std::os::raw::c_char,$/;"	m	struct:_IO_FILE
_IO_write_end	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub _IO_write_end: *mut ::std::os::raw::c_char,$/;"	m	struct:_IO_FILE
_IO_write_ptr	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub _IO_write_ptr: *mut ::std::os::raw::c_char,$/;"	m	struct:_IO_FILE
_POSIX_C_SOURCE	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const _POSIX_C_SOURCE: u32 = 200809;$/;"	C
_POSIX_SOURCE	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const _POSIX_SOURCE: u32 = 1;$/;"	C
_STDC_PREDEF_H	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const _STDC_PREDEF_H: u32 = 1;$/;"	C
_STDINT_H	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const _STDINT_H: u32 = 1;$/;"	C
_STDIO_H	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const _STDIO_H: u32 = 1;$/;"	C
_SYS_CDEFS_H	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const _SYS_CDEFS_H: u32 = 1;$/;"	C
__FD_SETSIZE	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __FD_SETSIZE: u32 = 1024;$/;"	C
__FILE	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __FILE = _IO_FILE;$/;"	t
__FILE_defined	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __FILE_defined: u32 = 1;$/;"	C
__GLIBC_MINOR__	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __GLIBC_MINOR__: u32 = 36;$/;"	C
__GLIBC_USE_DEPRECATED_GETS	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __GLIBC_USE_DEPRECATED_GETS: u32 = 0;$/;"	C
__GLIBC_USE_DEPRECATED_SCANF	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __GLIBC_USE_DEPRECATED_SCANF: u32 = 0;$/;"	C
__GLIBC_USE_IEC_60559_BFP_EXT	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __GLIBC_USE_IEC_60559_BFP_EXT: u32 = 0;$/;"	C
__GLIBC_USE_IEC_60559_BFP_EXT_C2X	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __GLIBC_USE_IEC_60559_BFP_EXT_C2X: u32 = 0;$/;"	C
__GLIBC_USE_IEC_60559_EXT	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __GLIBC_USE_IEC_60559_EXT: u32 = 0;$/;"	C
__GLIBC_USE_IEC_60559_FUNCS_EXT	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __GLIBC_USE_IEC_60559_FUNCS_EXT: u32 = 0;$/;"	C
__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X: u32 = 0;$/;"	C
__GLIBC_USE_IEC_60559_TYPES_EXT	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __GLIBC_USE_IEC_60559_TYPES_EXT: u32 = 0;$/;"	C
__GLIBC_USE_ISOC2X	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __GLIBC_USE_ISOC2X: u32 = 0;$/;"	C
__GLIBC_USE_LIB_EXT2	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __GLIBC_USE_LIB_EXT2: u32 = 0;$/;"	C
__GLIBC__	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __GLIBC__: u32 = 2;$/;"	C
__GNUC_VA_LIST	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __GNUC_VA_LIST: u32 = 1;$/;"	C
__GNU_LIBRARY__	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __GNU_LIBRARY__: u32 = 6;$/;"	C
__HAVE_DISTINCT_FLOAT128	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __HAVE_DISTINCT_FLOAT128: u32 = 0;$/;"	C
__HAVE_DISTINCT_FLOAT128X	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __HAVE_DISTINCT_FLOAT128X: u32 = 0;$/;"	C
__HAVE_DISTINCT_FLOAT16	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __HAVE_DISTINCT_FLOAT16: u32 = 0;$/;"	C
__HAVE_DISTINCT_FLOAT32	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __HAVE_DISTINCT_FLOAT32: u32 = 0;$/;"	C
__HAVE_DISTINCT_FLOAT32X	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __HAVE_DISTINCT_FLOAT32X: u32 = 0;$/;"	C
__HAVE_DISTINCT_FLOAT64	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __HAVE_DISTINCT_FLOAT64: u32 = 0;$/;"	C
__HAVE_DISTINCT_FLOAT64X	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __HAVE_DISTINCT_FLOAT64X: u32 = 0;$/;"	C
__HAVE_FLOAT128	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __HAVE_FLOAT128: u32 = 0;$/;"	C
__HAVE_FLOAT128X	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __HAVE_FLOAT128X: u32 = 0;$/;"	C
__HAVE_FLOAT16	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __HAVE_FLOAT16: u32 = 0;$/;"	C
__HAVE_FLOAT32	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __HAVE_FLOAT32: u32 = 1;$/;"	C
__HAVE_FLOAT32X	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __HAVE_FLOAT32X: u32 = 1;$/;"	C
__HAVE_FLOAT64	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __HAVE_FLOAT64: u32 = 1;$/;"	C
__HAVE_FLOAT64X	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __HAVE_FLOAT64X: u32 = 1;$/;"	C
__HAVE_FLOAT64X_LONG_DOUBLE	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __HAVE_FLOAT64X_LONG_DOUBLE: u32 = 1;$/;"	C
__HAVE_FLOATN_NOT_TYPEDEF	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __HAVE_FLOATN_NOT_TYPEDEF: u32 = 0;$/;"	C
__HAVE_GENERIC_SELECTION	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __HAVE_GENERIC_SELECTION: u32 = 1;$/;"	C
__INO_T_MATCHES_INO64_T	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __INO_T_MATCHES_INO64_T: u32 = 1;$/;"	C
__KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64: u32 = 1;$/;"	C
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI: u32 = 0;$/;"	C
__NonExhaustive	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    __NonExhaustive,$/;"	e	enum:BatchSize
__OFF_T_MATCHES_OFF64_T	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __OFF_T_MATCHES_OFF64_T: u32 = 1;$/;"	C
__Other	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    __Other,$/;"	e	enum:IncomingMessage
__RLIM_T_MATCHES_RLIM64_T	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __RLIM_T_MATCHES_RLIM64_T: u32 = 1;$/;"	C
__STATFS_MATCHES_STATFS64	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __STATFS_MATCHES_STATFS64: u32 = 1;$/;"	C
__STDC_IEC_559_COMPLEX__	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __STDC_IEC_559_COMPLEX__: u32 = 1;$/;"	C
__STDC_IEC_559__	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __STDC_IEC_559__: u32 = 1;$/;"	C
__STDC_IEC_60559_BFP__	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __STDC_IEC_60559_BFP__: u32 = 201404;$/;"	C
__STDC_IEC_60559_COMPLEX__	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __STDC_IEC_60559_COMPLEX__: u32 = 201404;$/;"	C
__STDC_ISO_10646__	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __STDC_ISO_10646__: u32 = 201706;$/;"	C
__SYSCALL_WORDSIZE	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __SYSCALL_WORDSIZE: u32 = 64;$/;"	C
__TIMESIZE	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __TIMESIZE: u32 = 64;$/;"	C
__USE_ATFILE	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __USE_ATFILE: u32 = 1;$/;"	C
__USE_FORTIFY_LEVEL	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __USE_FORTIFY_LEVEL: u32 = 0;$/;"	C
__USE_ISOC11	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __USE_ISOC11: u32 = 1;$/;"	C
__USE_ISOC95	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __USE_ISOC95: u32 = 1;$/;"	C
__USE_ISOC99	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __USE_ISOC99: u32 = 1;$/;"	C
__USE_MISC	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __USE_MISC: u32 = 1;$/;"	C
__USE_POSIX	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __USE_POSIX: u32 = 1;$/;"	C
__USE_POSIX199309	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __USE_POSIX199309: u32 = 1;$/;"	C
__USE_POSIX199506	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __USE_POSIX199506: u32 = 1;$/;"	C
__USE_POSIX2	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __USE_POSIX2: u32 = 1;$/;"	C
__USE_POSIX_IMPLICITLY	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __USE_POSIX_IMPLICITLY: u32 = 1;$/;"	C
__USE_XOPEN2K	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __USE_XOPEN2K: u32 = 1;$/;"	C
__USE_XOPEN2K8	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __USE_XOPEN2K8: u32 = 1;$/;"	C
__WORDSIZE	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __WORDSIZE: u32 = 64;$/;"	C
__WORDSIZE_TIME64_COMPAT32	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __WORDSIZE_TIME64_COMPAT32: u32 = 1;$/;"	C
____FILE_defined	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const ____FILE_defined: u32 = 1;$/;"	C
_____fpos64_t_defined	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const _____fpos64_t_defined: u32 = 1;$/;"	C
_____fpos_t_defined	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const _____fpos_t_defined: u32 = 1;$/;"	C
____mbstate_t_defined	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const ____mbstate_t_defined: u32 = 1;$/;"	C
__bindgen_padding_0	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub __bindgen_padding_0: u64,$/;"	m	struct:max_align_t
__blkcnt64_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __blkcnt64_t = ::std::os::raw::c_long;$/;"	t
__blkcnt_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __blkcnt_t = ::std::os::raw::c_long;$/;"	t
__blksize_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __blksize_t = ::std::os::raw::c_long;$/;"	t
__bool_true_false_are_defined	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __bool_true_false_are_defined: u32 = 1;$/;"	C
__builtin_va_list	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __builtin_va_list = [__va_list_tag; 1usize];$/;"	t
__caddr_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __caddr_t = *mut ::std::os::raw::c_char;$/;"	t
__clang_max_align_nonce1	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub __clang_max_align_nonce1: ::std::os::raw::c_longlong,$/;"	m	struct:max_align_t
__clang_max_align_nonce2	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub __clang_max_align_nonce2: u128,$/;"	m	struct:max_align_t
__clock_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __clock_t = ::std::os::raw::c_long;$/;"	t
__clockid_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __clockid_t = ::std::os::raw::c_int;$/;"	t
__count	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub __count: ::std::os::raw::c_int,$/;"	m	struct:__mbstate_t
__daddr_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __daddr_t = ::std::os::raw::c_int;$/;"	t
__dev_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __dev_t = ::std::os::raw::c_ulong;$/;"	t
__fpos64_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __fpos64_t = _G_fpos64_t;$/;"	t
__fpos_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __fpos_t = _G_fpos_t;$/;"	t
__fsblkcnt64_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __fsblkcnt64_t = ::std::os::raw::c_ulong;$/;"	t
__fsblkcnt_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __fsblkcnt_t = ::std::os::raw::c_ulong;$/;"	t
__fsfilcnt64_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __fsfilcnt64_t = ::std::os::raw::c_ulong;$/;"	t
__fsfilcnt_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __fsfilcnt_t = ::std::os::raw::c_ulong;$/;"	t
__fsid_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub struct __fsid_t {$/;"	s
__fsword_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __fsword_t = ::std::os::raw::c_long;$/;"	t
__getdelim	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn __getdelim($/;"	f
__gid_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __gid_t = ::std::os::raw::c_uint;$/;"	t
__glibc_c99_flexarr_available	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __glibc_c99_flexarr_available: u32 = 1;$/;"	C
__gnuc_va_list	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __gnuc_va_list = __builtin_va_list;$/;"	t
__id_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __id_t = ::std::os::raw::c_uint;$/;"	t
__ino64_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __ino64_t = ::std::os::raw::c_ulong;$/;"	t
__ino_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __ino_t = ::std::os::raw::c_ulong;$/;"	t
__int16_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __int16_t = ::std::os::raw::c_short;$/;"	t
__int32_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __int32_t = ::std::os::raw::c_int;$/;"	t
__int64_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __int64_t = ::std::os::raw::c_long;$/;"	t
__int8_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __int8_t = ::std::os::raw::c_schar;$/;"	t
__int_least16_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __int_least16_t = __int16_t;$/;"	t
__int_least32_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __int_least32_t = __int32_t;$/;"	t
__int_least64_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __int_least64_t = __int64_t;$/;"	t
__int_least8_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __int_least8_t = __int8_t;$/;"	t
__intmax_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __intmax_t = ::std::os::raw::c_long;$/;"	t
__intptr_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __intptr_t = ::std::os::raw::c_long;$/;"	t
__key_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __key_t = ::std::os::raw::c_int;$/;"	t
__loff_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __loff_t = __off64_t;$/;"	t
__mbstate_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub struct __mbstate_t {$/;"	s
__mode_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __mode_t = ::std::os::raw::c_uint;$/;"	t
__nlink_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __nlink_t = ::std::os::raw::c_ulong;$/;"	t
__off64_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __off64_t = ::std::os::raw::c_long;$/;"	t
__off_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __off_t = ::std::os::raw::c_long;$/;"	t
__overflow	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn __overflow(arg1: *mut FILE, arg2: ::std::os::raw::c_int) -> ::std::os::raw::c_int;$/;"	f
__pad5	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub __pad5: size_t,$/;"	m	struct:_IO_FILE
__pid_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __pid_t = ::std::os::raw::c_int;$/;"	t
__pos	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub __pos: __off64_t,$/;"	m	struct:_G_fpos64_t
__pos	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub __pos: __off_t,$/;"	m	struct:_G_fpos_t
__quad_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __quad_t = ::std::os::raw::c_long;$/;"	t
__rlim64_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __rlim64_t = ::std::os::raw::c_ulong;$/;"	t
__rlim_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __rlim_t = ::std::os::raw::c_ulong;$/;"	t
__sig_atomic_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __sig_atomic_t = ::std::os::raw::c_int;$/;"	t
__socklen_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __socklen_t = ::std::os::raw::c_uint;$/;"	t
__ssize_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __ssize_t = ::std::os::raw::c_long;$/;"	t
__state	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub __state: __mbstate_t,$/;"	m	struct:_G_fpos64_t
__state	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub __state: __mbstate_t,$/;"	m	struct:_G_fpos_t
__struct_FILE_defined	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const __struct_FILE_defined: u32 = 1;$/;"	C
__suseconds64_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __suseconds64_t = ::std::os::raw::c_long;$/;"	t
__suseconds_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __suseconds_t = ::std::os::raw::c_long;$/;"	t
__syscall_slong_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __syscall_slong_t = ::std::os::raw::c_long;$/;"	t
__syscall_ulong_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __syscall_ulong_t = ::std::os::raw::c_ulong;$/;"	t
__time_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __time_t = ::std::os::raw::c_long;$/;"	t
__timer_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __timer_t = *mut ::std::os::raw::c_void;$/;"	t
__u_char	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __u_char = ::std::os::raw::c_uchar;$/;"	t
__u_int	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __u_int = ::std::os::raw::c_uint;$/;"	t
__u_long	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __u_long = ::std::os::raw::c_ulong;$/;"	t
__u_quad_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __u_quad_t = ::std::os::raw::c_ulong;$/;"	t
__u_short	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __u_short = ::std::os::raw::c_ushort;$/;"	t
__uflow	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn __uflow(arg1: *mut FILE) -> ::std::os::raw::c_int;$/;"	f
__uid_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __uid_t = ::std::os::raw::c_uint;$/;"	t
__uint16_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __uint16_t = ::std::os::raw::c_ushort;$/;"	t
__uint32_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __uint32_t = ::std::os::raw::c_uint;$/;"	t
__uint64_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __uint64_t = ::std::os::raw::c_ulong;$/;"	t
__uint8_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __uint8_t = ::std::os::raw::c_uchar;$/;"	t
__uint_least16_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __uint_least16_t = __uint16_t;$/;"	t
__uint_least32_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __uint_least32_t = __uint32_t;$/;"	t
__uint_least64_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __uint_least64_t = __uint64_t;$/;"	t
__uint_least8_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __uint_least8_t = __uint8_t;$/;"	t
__uintmax_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __uintmax_t = ::std::os::raw::c_ulong;$/;"	t
__useconds_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type __useconds_t = ::std::os::raw::c_uint;$/;"	t
__va_list_tag	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub struct __va_list_tag {$/;"	s
__val	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub __val: [::std::os::raw::c_int; 2usize],$/;"	m	struct:__fsid_t
__value	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub __value: __mbstate_t__bindgen_ty_1,$/;"	m	struct:__mbstate_t
_chain	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub _chain: *mut _IO_FILE,$/;"	m	struct:_IO_FILE
_codecvt	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub _codecvt: *mut _IO_codecvt,$/;"	m	struct:_IO_FILE
_cur_column	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub _cur_column: ::std::os::raw::c_ushort,$/;"	m	struct:_IO_FILE
_fileno	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub _fileno: ::std::os::raw::c_int,$/;"	m	struct:_IO_FILE
_flags	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub _flags: ::std::os::raw::c_int,$/;"	m	struct:_IO_FILE
_flags2	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub _flags2: ::std::os::raw::c_int,$/;"	m	struct:_IO_FILE
_freeres_buf	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub _freeres_buf: *mut ::std::os::raw::c_void,$/;"	m	struct:_IO_FILE
_freeres_list	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub _freeres_list: *mut _IO_FILE,$/;"	m	struct:_IO_FILE
_hasher	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    _hasher: PhantomData<H>,$/;"	m	struct:Fri
_hasher	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    pub _hasher: PhantomData<H>,$/;"	m	struct:MerkleTree
_hasher	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    _hasher: PhantomData<H>,$/;"	m	struct:ArchivalMmr
_hasher	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^    _hasher: PhantomData<H>,$/;"	m	struct:MmrAccumulator
_hasher	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^    pub _hasher: PhantomData<H>,$/;"	m	struct:MmrMembershipProof
_hasher	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^    _hasher: PhantomData<H>,$/;"	m	struct:ProofStream
_kernel_histogram	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^unsafe fn _kernel_histogram(ctx: *mut bindings::futhark_context, in0: *const bindings::futhark_u/;"	f
_kernel_histogram_with_is	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^unsafe fn _kernel_histogram_with_is(ctx: *mut bindings::futhark_context, in0: *const bindings::f/;"	f
_kernel_merkle_root_2d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^unsafe fn _kernel_merkle_root_2d(ctx: *mut bindings::futhark_context, in0: *const bindings::futh/;"	f
_kernel_merkle_root_inplace	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^unsafe fn _kernel_merkle_root_inplace(ctx: *mut bindings::futhark_context, in0: *const bindings:/;"	f
_kernel_padded	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^unsafe fn _kernel_padded(ctx: *mut bindings::futhark_context, in0: *const bindings::futhark_u64_/;"	f
_kernel_rescue_prime_hash	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^unsafe fn _kernel_rescue_prime_hash(ctx: *mut bindings::futhark_context, in0: *const bindings::f/;"	f
_kernel_rescue_prime_hash_10	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^unsafe fn _kernel_rescue_prime_hash_10(ctx: *mut bindings::futhark_context, in0: *const bindings/;"	f
_kernel_rescue_prime_hash_varlen	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^unsafe fn _kernel_rescue_prime_hash_varlen(ctx: *mut bindings::futhark_context, in0: *const bind/;"	f
_kernel_segmented_reduce	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^unsafe fn _kernel_segmented_reduce(ctx: *mut bindings::futhark_context, in0: *const bindings::fu/;"	f
_kernel_segmented_reduce_with_flags	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^unsafe fn _kernel_segmented_reduce_with_flags(ctx: *mut bindings::futhark_context, in0: *const b/;"	f
_lock	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub _lock: *mut _IO_lock_t,$/;"	m	struct:_IO_FILE
_maker	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    pub _maker: PhantomData<M>,$/;"	m	struct:MerkleTree
_markers	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub _markers: *mut _IO_marker,$/;"	m	struct:_IO_FILE
_mi	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    _mi: PhantomData<I>,$/;"	m	struct:TupleCombinations
_mode	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub _mode: ::std::os::raw::c_int,$/;"	m	struct:_IO_FILE
_new	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^    pub(crate) fn _new(err: *mut ::std::os::raw::c_char) -> Self {$/;"	P	implementation:FutharkError
_offset	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub _offset: __off64_t,$/;"	m	struct:_IO_FILE
_old_offset	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub _old_offset: __off_t,$/;"	m	struct:_IO_FILE
_phamtom2	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/routine.rs	/^    _phamtom2: PhantomData<M>,$/;"	m	struct:Function
_phantom	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/routine.rs	/^    _phantom: PhantomData<T>,$/;"	m	struct:Function
_phantom	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted.rs	/^        _phantom: PhantomData<W>,$/;"	m	struct:alias_method::WeightedIndex
_phantom	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    _phantom: ::core::marker::PhantomData<T>,$/;"	m	struct:SliceChooseIter
_shortbuf	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub _shortbuf: [::std::os::raw::c_char; 1usize],$/;"	m	struct:_IO_FILE
_type	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_array.rs	/^    _type: PhantomData<T>,$/;"	m	struct:DatabaseArray
_type	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_vector.rs	/^    _type: PhantomData<T>,$/;"	m	struct:DatabaseVector
_unused	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    _unused: [u8; 0],$/;"	m	struct:_IO_codecvt
_unused	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    _unused: [u8; 0],$/;"	m	struct:_IO_marker
_unused	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    _unused: [u8; 0],$/;"	m	struct:_IO_wide_data
_unused	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    _unused: [u8; 0],$/;"	m	struct:futhark_bool_1d
_unused	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    _unused: [u8; 0],$/;"	m	struct:futhark_context
_unused	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    _unused: [u8; 0],$/;"	m	struct:futhark_context_config
_unused	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    _unused: [u8; 0],$/;"	m	struct:futhark_i64_1d
_unused	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    _unused: [u8; 0],$/;"	m	struct:futhark_u64_1d
_unused	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    _unused: [u8; 0],$/;"	m	struct:futhark_u64_2d
_unused	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    _unused: [u8; 0],$/;"	m	struct:futhark_u64_3d
_unused	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    _unused: [u8; 0],$/;"	m	struct:futhark_u8_2d
_unused	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    _unused: [u8; 0],$/;"	m	struct:futhark_u8_3d
_unused2	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub _unused2: [::std::os::raw::c_char; 20usize],$/;"	m	struct:_IO_FILE
_vtable_offset	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub _vtable_offset: ::std::os::raw::c_schar,$/;"	m	struct:_IO_FILE
_wide_data	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub _wide_data: *mut _IO_wide_data,$/;"	m	struct:_IO_FILE
a	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    a: Fuse<I>,$/;"	m	struct:Interleave
a	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    a: I,$/;"	m	struct:Product
a	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    a: Peekable<I>,$/;"	m	struct:MergeBy
a	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/zip_eq_impl.rs	/^    a: I,$/;"	m	struct:ZipEq
a	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/zip_longest.rs	/^    a: Fuse<T>,$/;"	m	struct:ZipLongest
a	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs	/^    a: u64,$/;"	m	struct:StepRng
a_cur	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    a_cur: Option<I::Item>,$/;"	m	struct:Product
abs_distribution	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/distributions.rs	/^fn abs_distribution($/;"	f
abs_distribution	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/distributions.rs	/^fn abs_distribution($/;"	f
abs_distributions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/distributions.rs	/^pub(crate) fn abs_distributions($/;"	f
abs_distributions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^    fn abs_distributions(&mut self, ctx: PlotContext<'_>, data: PlotData<'_>) {$/;"	P	implementation:Gnuplot
abs_distributions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/mod.rs	/^    fn abs_distributions(&mut self, ctx: PlotContext<'_>, data: PlotData<'_>);$/;"	P	interface:Plotter
abs_distributions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/distributions.rs	/^pub(crate) fn abs_distributions($/;"	f
abs_distributions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/mod.rs	/^    fn abs_distributions(&mut self, ctx: PlotContext<'_>, data: PlotData<'_>) {$/;"	P	implementation:PlottersBackend
abs_exponents	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    abs_exponents: Vec<u8>,$/;"	m	struct:PolynomialEvaluationDataNode
absolute_estimates	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub absolute_estimates: Estimates,$/;"	m	struct:MeasurementData
accumulator_mmr_mutate_leaf_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    fn accumulator_mmr_mutate_leaf_test() {$/;"	f	module:mmr_test
accumulator_mmr_tests	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^mod accumulator_mmr_tests {$/;"	n
adapter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs	/^#[cfg(feature = "std")] pub mod adapter;$/;"	n
adaptors	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod adaptors;$/;"	n
add	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^    fn add(&self, v1: &Self::Value, v2: &Self::Value) -> Self::Value {$/;"	P	implementation:WallTime
add	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^    fn add(&self, v1: &Self::Value, v2: &Self::Value) -> Self::Value;$/;"	P	interface:Measurement
add	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/size_hint.rs	/^pub fn add(a: SizeHint, b: SizeHint) -> SizeHint {$/;"	f
add	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^    fn add(self, rhs: Self) -> Self::Output {$/;"	P	implementation:DyadicRational
add	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn add(self, other: U32s<N>) -> U32s<N> {$/;"	P	implementation:U32s
add	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn add(self, other: Self) -> Self {$/;"	P	implementation:BFieldElement
add	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn add(self, other: Self) -> Self {$/;"	P	implementation:MPolynomial
add	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn add(self, other: Self) -> Self {$/;"	P	implementation:Polynomial
add	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn add(self, other: BFieldElement) -> Self {$/;"	P	implementation:XFieldElement
add	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn add(self, other: Self) -> Self {$/;"	P	implementation:XFieldElement
add	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn add(self, other: XFieldElement) -> XFieldElement {$/;"	P	implementation:BFieldElement
add_assign	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn add_assign(&mut self, rhs: Self) {$/;"	P	implementation:BFieldElement
add_assign	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn add_assign(&mut self, rhs: Self) {$/;"	P	implementation:MPolynomial
add_assign	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn add_assign(&mut self, rhs: Self) {$/;"	P	implementation:Polynomial
add_assign	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn add_assign(&mut self, rhs: BFieldElement) {$/;"	P	implementation:XFieldElement
add_assign	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn add_assign(&mut self, rhs: Self) {$/;"	P	implementation:XFieldElement
add_assign_simple_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn add_assign_simple_test() {$/;"	f	module:test_mpolynomials
add_assign_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn add_assign_test() {$/;"	f	module:test_polynomials
add_scalar	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/size_hint.rs	/^pub fn add_scalar(sh: SizeHint, x: usize) -> SizeHint {$/;"	f
add_sub_pbt	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^    fn add_sub_pbt() {$/;"	f	module:dyadic_rationals_tests
add_sub_wrap_around_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn add_sub_wrap_around_test() {$/;"	f	module:b_prime_field_element_test
additional_len	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/exactly_one_err.rs	/^    fn additional_len(&self) -> usize {$/;"	f
additional_plots	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    additional_plots: Vec<Plot>,$/;"	m	struct:Comparison
additional_plots	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    additional_plots: Vec<Plot>,$/;"	m	struct:Context
additive_inverse_test	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^    fn additive_inverse_test() {$/;"	f	module:dyadic_rationals_tests
advance	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/permutations.rs	/^    fn advance(&mut self) {$/;"	P	implementation:CompleteState
advance	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/permutations.rs	/^    fn advance(&mut self) {$/;"	f
aggregate	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/grouping_map.rs	/^    pub fn aggregate<FO, R>(self, mut operation: FO) -> HashMap<K, R>$/;"	f
algebraic_hasher	/home/einar/triton/twenty-first/twenty-first/src/util_types.rs	/^pub mod algebraic_hasher;$/;"	n
algebraic_hasher_tests	/home/einar/triton/twenty-first/twenty-first/src/util_types/algebraic_hasher.rs	/^mod algebraic_hasher_tests {$/;"	n
alias_method	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted.rs	/^pub mod alias_method {$/;"	n
all	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    fn all<G>(&mut self, mut f: G) -> bool$/;"	f
all	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/free.rs	/^pub fn all<I, F>(iterable: I, f: F) -> bool$/;"	f
all	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn all(self) -> bool {$/;"	P	implementation:bool
all	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn all(self) -> bool;$/;"	P	interface:BoolAsSIMD
all_directories	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    all_directories: HashSet<String>,$/;"	m	struct:Criterion
all_equal	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn all_equal(&mut self) -> bool$/;"	P	interface:Itertools
all_finite	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn all_finite(self) -> bool;$/;"	P	interface:FloatSIMDUtils
all_ids	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    all_ids: Vec<InternalBenchmarkId>,$/;"	m	struct:BenchmarkGroup
all_le	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn all_le(self, other: Self) -> bool;$/;"	P	interface:FloatSIMDUtils
all_lt	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn all_lt(self, other: Self) -> bool;$/;"	P	interface:FloatSIMDUtils
all_titles	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    all_titles: HashSet<String>,$/;"	m	struct:Criterion
all_unique	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn all_unique(&mut self) -> bool$/;"	P	interface:Itertools
amount	/home/einar/triton/twenty-first/twenty-first/src/lib.rs	/^pub mod amount;$/;"	n
analysis	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^mod analysis;$/;"	n
analysis	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn analysis(&self, _id: &BenchmarkId, _context: &ReportContext) {}$/;"	P	interface:Report
analysis	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn analysis(&self, id: &BenchmarkId, _: &ReportContext) {$/;"	P	implementation:CliReport
any	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/free.rs	/^pub fn any<I, F>(iterable: I, f: F) -> bool$/;"	f
any	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn any(self) -> bool {$/;"	P	implementation:bool
any	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn any(self) -> bool;$/;"	P	interface:BoolAsSIMD
any_matched	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    any_matched: bool,$/;"	m	struct:BenchmarkGroup
append	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    fn append(&mut self, new_leaf: Digest) -> MmrMembershipProof<H> {$/;"	f
append	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^    fn append(&mut self, new_leaf: Digest) -> MmrMembershipProof<H> {$/;"	P	implementation:MmrAccumulator
append	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_trait.rs	/^    fn append(&mut self, new_leaf: Digest) -> MmrMembershipProof<H>;$/;"	P	interface:Mmr
append_	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^    fn append_(mut self, item: T) -> Vec<T> {$/;"	P	implementation:Vec
append_	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^    fn append_(self, item: T) -> Self;$/;"	P	interface:Append
append_raw	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    pub fn append_raw(&mut self, new_leaf: Digest) {$/;"	P	implementation:ArchivalMmr
append_string	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    fn append_string<R: Rng + ?Sized>(&self, rng: &mut R, string: &mut String, len: usize);$/;"	P	interface:DistString
append_string	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^    fn append_string<R: Rng + ?Sized>(&self, rng: &mut R, s: &mut String, len: usize) {$/;"	P	implementation:Standard
append_string	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^    fn append_string<R: Rng + ?Sized>(&self, rng: &mut R, string: &mut String, len: usize) {$/;"	P	implementation:Alphanumeric
archival_mmr	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr.rs	/^pub mod archival_mmr;$/;"	n
are_colinear	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn are_colinear(points: &[(FF, FF)]) -> bool {$/;"	P	implementation:Polynomial
are_colinear_3	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn are_colinear_3(p0: (FF, FF), p1: (FF, FF), p2: (FF, FF)) -> bool {$/;"	P	implementation:Polynomial
array_impl	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^macro_rules! array_impl {$/;"	M
arrays	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^mod arrays;$/;"	n
as_bs	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^        pub fn as_bs(&self) -> Option<Vec<BFieldElement>> {$/;"	P	implementation:proof_stream_typed_tests::TestItem
as_directory_name	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub fn as_directory_name(&self) -> &str {$/;"	P	implementation:BenchmarkId
as_mut	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/either_or_both.rs	/^    pub fn as_mut(&mut self) -> EitherOrBoth<&mut A, &mut B> {$/;"	P	implementation:EitherOrBoth
as_number	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub fn as_number(&self) -> Option<f64> {$/;"	P	implementation:BenchmarkId
as_raw	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn as_raw(&self) -> *const futhark_bool_1d {$/;"	P	implementation:Array_bool_1d
as_raw	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn as_raw(&self) -> *const futhark_i64_1d {$/;"	P	implementation:Array_i64_1d
as_raw	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn as_raw(&self) -> *const futhark_u64_1d {$/;"	P	implementation:Array_u64_1d
as_raw	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn as_raw(&self) -> *const futhark_u64_2d {$/;"	P	implementation:Array_u64_2d
as_raw	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn as_raw(&self) -> *const futhark_u64_3d {$/;"	P	implementation:Array_u64_3d
as_raw	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn as_raw(&self) -> *const futhark_u8_2d {$/;"	P	implementation:Array_u8_2d
as_raw	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn as_raw(&self) -> *const futhark_u8_3d {$/;"	P	implementation:Array_u8_3d
as_raw_mut	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn as_raw_mut(&self) -> *mut futhark_bool_1d {$/;"	P	implementation:Array_bool_1d
as_raw_mut	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn as_raw_mut(&self) -> *mut futhark_i64_1d {$/;"	P	implementation:Array_i64_1d
as_raw_mut	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn as_raw_mut(&self) -> *mut futhark_u64_1d {$/;"	P	implementation:Array_u64_1d
as_raw_mut	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn as_raw_mut(&self) -> *mut futhark_u64_2d {$/;"	P	implementation:Array_u64_2d
as_raw_mut	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn as_raw_mut(&self) -> *mut futhark_u64_3d {$/;"	P	implementation:Array_u64_3d
as_raw_mut	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn as_raw_mut(&self) -> *mut futhark_u8_2d {$/;"	P	implementation:Array_u8_2d
as_raw_mut	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn as_raw_mut(&self) -> *mut futhark_u8_3d {$/;"	P	implementation:Array_u8_3d
as_ref	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/either_or_both.rs	/^    pub fn as_ref(&self) -> EitherOrBoth<&A, &B> {$/;"	P	implementation:EitherOrBoth
as_ref	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn as_ref(&self) -> &[u32; N] {$/;"	P	implementation:U32s
as_title	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub fn as_title(&self) -> &str {$/;"	P	implementation:BenchmarkId
as_usize	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn as_usize(self) -> usize {$/;"	P	implementation:u32
as_usize	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn as_usize(self) -> usize {$/;"	P	implementation:usize
as_usize	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn as_usize(self) -> usize;$/;"	P	interface:UInt
as_xs	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^        pub fn as_xs(&self) -> Option<Vec<XFieldElement>> {$/;"	P	implementation:proof_stream_typed_tests::TestItem
assert_equal	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^pub fn assert_equal<I, J>(a: I, b: J)$/;"	f
assert_iterated	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/bencher.rs	/^    pub(crate) fn assert_iterated(&mut self) {$/;"	P	implementation:Bencher
async_executor	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^pub mod async_executor;$/;"	n
at	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/percentiles.rs	/^    pub fn at(&self, p: A) -> A {$/;"	f
at_most_one	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn at_most_one(mut self) -> Result<Option<Self::Item>, ExactlyOneError<Self>>$/;"	P	interface:Itertools
at_unchecked	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/percentiles.rs	/^    unsafe fn at_unchecked(&self, p: A) -> A {$/;"	f
attempt_verify_empty	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_vector.rs	/^    fn attempt_verify_empty(&mut self) -> bool {$/;"	P	implementation:DatabaseVector
authentication_path	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^    pub authentication_path: Vec<Digest>,$/;"	m	struct:MmrMembershipProof
avg_times	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub avg_times: LabeledSample<'a, f64>,$/;"	m	struct:MeasurementData
b	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/bencher.rs	/^    b: &'b mut Bencher<'a, M>,$/;"	m	struct:AsyncBencher
b	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    b: Fuse<J>,$/;"	m	struct:Interleave
b	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    b: J,$/;"	m	struct:Product
b	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    b: Peekable<J>,$/;"	m	struct:MergeBy
b	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/zip_eq_impl.rs	/^    b: J,$/;"	m	struct:ZipEq
b	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/zip_longest.rs	/^    b: Fuse<U>,$/;"	m	struct:ZipLongest
b_domain_value	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    pub fn b_domain_value(&self, index: u32) -> BFieldElement {$/;"	P	implementation:FriDomain
b_domain_values	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    pub fn b_domain_values(&self) -> Vec<BFieldElement> {$/;"	P	implementation:FriDomain
b_evaluate	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    pub fn b_evaluate(&self, polynomial: &Polynomial<BFieldElement>) -> Vec<BFieldElement> {$/;"	P	implementation:FriDomain
b_field_element	/home/einar/triton/twenty-first/twenty-first/src/shared_math.rs	/^pub mod b_field_element;$/;"	n
b_field_ntt_with_length_32	/home/einar/triton/twenty-first/twenty-first/src/shared_math/ntt.rs	/^    fn b_field_ntt_with_length_32() {$/;"	f	module:fast_ntt_attempt_tests
b_field_xgcd_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn b_field_xgcd_test() {$/;"	f	module:b_prime_field_element_test
b_interpolate	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    pub fn b_interpolate(&self, values: &[BFieldElement]) -> Polynomial<BFieldElement> {$/;"	P	implementation:FriDomain
b_orig	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    b_orig: J,$/;"	m	struct:Product
b_prime_field_element_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^mod b_prime_field_element_test {$/;"	n
backlog	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tee.rs	/^    backlog: VecDeque<A>,$/;"	m	struct:TeeBuffer
bag_peaks	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    fn bag_peaks(&mut self) -> Digest {$/;"	f
bag_peaks	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^    fn bag_peaks(&mut self) -> Digest {$/;"	P	implementation:MmrAccumulator
bag_peaks	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_trait.rs	/^    fn bag_peaks(&mut self) -> Digest;$/;"	P	interface:Mmr
bag_peaks	/home/einar/triton/twenty-first/twenty-first/src/util_types/shared.rs	/^pub fn bag_peaks<H>(peaks: &[Digest]) -> Digest$/;"	f
bag_peaks_blake3_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    fn bag_peaks_blake3_test() {$/;"	f	module:mmr_test
bag_peaks_gen	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    fn bag_peaks_gen<H: AlgebraicHasher>() {$/;"	f	module:mmr_test
bandwidth	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/kde/mod.rs	/^    bandwidth: A,$/;"	m	struct:Kde
bandwidth	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/kde/mod.rs	/^    pub fn bandwidth(&self) -> A {$/;"	f
base_avg_times	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub base_avg_times: Vec<f64>,$/;"	m	struct:ComparisonData
base_dir_exists	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/analysis/mod.rs	/^fn base_dir_exists(id: &BenchmarkId, baseline: &str, output_directory: &Path) -> bool {$/;"	f
base_estimates	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub base_estimates: Estimates,$/;"	m	struct:ComparisonData
base_iter_counts	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub base_iter_counts: Vec<f64>,$/;"	m	struct:ComparisonData
base_sample_times	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub base_sample_times: Vec<f64>,$/;"	m	struct:ComparisonData
baseline	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    baseline: Baseline,$/;"	m	struct:Criterion
baseline_directory	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    baseline_directory: String,$/;"	m	struct:Criterion
batch_inversion	/home/einar/triton/twenty-first/twenty-first/src/shared_math/traits.rs	/^    fn batch_inversion(input: Vec<Self>) -> Vec<Self> {$/;"	P	interface:FiniteField
batch_inversion_pbt	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn batch_inversion_pbt() {$/;"	f	module:b_prime_field_element_test
batch_mod_pow	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^    fn batch_mod_pow($/;"	P	implementation:RescuePrimeRegular
batch_mod_pow_alpha	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^    fn batch_mod_pow_alpha(array: [BFieldElement; STATE_SIZE]) -> [BFieldElement; STATE_SIZE] {$/;"	P	implementation:RescuePrimeRegular
batch_mod_pow_alpha_inv	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^    fn batch_mod_pow_alpha_inv(array: [BFieldElement; STATE_SIZE]) -> [BFieldElement; STATE_SIZE/;"	P	implementation:RescuePrimeRegular
batch_mul_into	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^    fn batch_mul_into($/;"	P	implementation:RescuePrimeRegular
batch_mutate_leaf_and_update_mps	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    fn batch_mutate_leaf_and_update_mps($/;"	f
batch_mutate_leaf_and_update_mps	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^    fn batch_mutate_leaf_and_update_mps($/;"	P	implementation:MmrAccumulator
batch_mutate_leaf_and_update_mps	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_trait.rs	/^    fn batch_mutate_leaf_and_update_mps($/;"	P	interface:Mmr
batch_mutate_leaf_and_update_mps_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^    fn batch_mutate_leaf_and_update_mps_test() {$/;"	f	module:accumulator_mmr_tests
batch_set	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_array.rs	/^    pub fn batch_set(&mut self, indices_and_vals: &[(u128, T)]) {$/;"	P	implementation:DatabaseArray
batch_set	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_vector.rs	/^    pub fn batch_set(&mut self, indices_and_vals: &[(u128, T)]) {$/;"	P	implementation:DatabaseVector
batch_set_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_vector.rs	/^    fn batch_set_test() {$/;"	f	module:database_vector_tests
batch_square	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^    fn batch_square(array: &mut [BFieldElement; STATE_SIZE]) {$/;"	P	implementation:RescuePrimeRegular
batch_square_n	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^    fn batch_square_n<const N: usize>(array: &mut [BFieldElement; STATE_SIZE]) {$/;"	P	implementation:RescuePrimeRegular
batch_update_from_append	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^    pub fn batch_update_from_append($/;"	P	implementation:MmrMembershipProof
batch_update_from_batch_leaf_mutation	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^    pub fn batch_update_from_batch_leaf_mutation($/;"	P	implementation:MmrMembershipProof
batch_update_from_batch_leaf_mutation_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^    fn batch_update_from_batch_leaf_mutation_test() {$/;"	f	module:mmr_membership_proof_test
batch_update_from_batch_leaf_mutation_total_replacement_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^    fn batch_update_from_batch_leaf_mutation_total_replacement_test() {$/;"	f	module:mmr_membership_proof_test
batch_update_from_leaf_mutation	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^    pub fn batch_update_from_leaf_mutation($/;"	P	implementation:MmrMembershipProof
batch_update_from_leaf_mutation_no_change_return_value_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^    fn batch_update_from_leaf_mutation_no_change_return_value_test() {$/;"	f	module:mmr_membership_proof_test
batching	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub fn batching<I, F>(iter: I, f: F) -> Batching<I, F> {$/;"	f
batching	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn batching<B, F>(self, f: F) -> Batching<Self, F>$/;"	P	interface:Itertools
bench	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/routine.rs	/^    fn bench(&mut self, m: &M, iters: &[u64], parameter: &T) -> Vec<f64> {$/;"	f
bench	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/routine.rs	/^    fn bench(&mut self, m: &M, iters: &[u64], parameter: &T) -> Vec<f64>;$/;"	P	interface:Routine
bench_function	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    pub fn bench_function<ID: IntoBenchmarkId, F>(&mut self, id: ID, mut f: F) -> &mut Self$/;"	P	implementation:BenchmarkGroup
bench_function	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    pub fn bench_function<F>(&mut self, id: &str, f: F) -> &mut Criterion<M>$/;"	f
bench_with_input	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    pub fn bench_with_input<ID: IntoBenchmarkId, F, I>($/;"	P	implementation:BenchmarkGroup
bench_with_input	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    pub fn bench_with_input<F, I>(&mut self, id: BenchmarkId, input: &I, f: F) -> &mut Criterion/;"	f
bencher	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^mod bencher;$/;"	n
bencher	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub(crate) bencher: BencherReport,$/;"	m	struct:Reports
bencher_enabled	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub(crate) bencher_enabled: bool,$/;"	m	struct:Reports
benchmark	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^mod benchmark;$/;"	n
benchmark_group	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    pub fn benchmark_group<S: Into<String>>(&mut self, group_name: S) -> BenchmarkGroup<'_, M> {$/;"	P	implementation:Criterion
benchmark_group	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^mod benchmark_group;$/;"	n
benchmark_start	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn benchmark_start(&self, _id: &BenchmarkId, _context: &ReportContext) {}$/;"	P	interface:Report
benchmark_start	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn benchmark_start(&self, id: &BenchmarkId, _: &ReportContext) {$/;"	P	implementation:CliReport
benchmarks	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    benchmarks: Vec<IndividualBenchmark>,$/;"	m	struct:SummaryContext
benchmarks	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    benchmarks: Vec<ReportLink<'a>>,$/;"	m	struct:BenchmarkValueGroup
bernoulli	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs	/^mod bernoulli;$/;"	n
bernoulli_distributions_can_be_compared	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^    fn bernoulli_distributions_can_be_compared() {$/;"	f	module:test
bfield_basic_test_of_chu_ntt	/home/einar/triton/twenty-first/twenty-first/src/shared_math/ntt.rs	/^    fn bfield_basic_test_of_chu_ntt() {$/;"	f	module:fast_ntt_attempt_tests
bfield_elem	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    macro_rules! bfield_elem {$/;"	M	module:b_prime_field_element_test
bfield_max_value_test_of_chu_ntt	/home/einar/triton/twenty-first/twenty-first/src/shared_math/ntt.rs	/^    fn bfield_max_value_test_of_chu_ntt() {$/;"	f	module:fast_ntt_attempt_tests
biguinteger_conversion_pbt	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn biguinteger_conversion_pbt() {$/;"	f	module:u32s_tests
biguinteger_conversion_test	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn biguinteger_conversion_test() {$/;"	f	module:u32s_tests
binary_tree_properties	/home/einar/triton/twenty-first/twenty-first/src/shared_math/other.rs	/^    fn binary_tree_properties() {$/;"	f	module:test_other
bindgen_test_layout__G_fpos64_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^fn bindgen_test_layout__G_fpos64_t() {$/;"	f
bindgen_test_layout__G_fpos_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^fn bindgen_test_layout__G_fpos_t() {$/;"	f
bindgen_test_layout__IO_FILE	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^fn bindgen_test_layout__IO_FILE() {$/;"	f
bindgen_test_layout___fsid_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^fn bindgen_test_layout___fsid_t() {$/;"	f
bindgen_test_layout___mbstate_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^fn bindgen_test_layout___mbstate_t() {$/;"	f
bindgen_test_layout___mbstate_t__bindgen_ty_1	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^fn bindgen_test_layout___mbstate_t__bindgen_ty_1() {$/;"	f
bindgen_test_layout___va_list_tag	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^fn bindgen_test_layout___va_list_tag() {$/;"	f
bindgen_test_layout_max_align_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^fn bindgen_test_layout_max_align_t() {$/;"	f
bindings	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^pub mod bindings;$/;"	n
bit_representation	/home/einar/triton/twenty-first/twenty-first/src/shared_math/other.rs	/^pub fn bit_representation(x: u128) -> Vec<u8> {$/;"	f
bit_representation_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/other.rs	/^    fn bit_representation_test() {$/;"	f	module:test_other
bitreverse	/home/einar/triton/twenty-first/twenty-first/src/shared_math/ntt.rs	/^fn bitreverse(mut n: u32, l: u32) -> u32 {$/;"	f
bivariate	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/mod.rs	/^pub mod bivariate;$/;"	n
black_box	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^pub fn black_box<T>(dummy: T) -> T {$/;"	f
blake3_wrapper	/home/einar/triton/twenty-first/twenty-first/src/util_types.rs	/^pub mod blake3_wrapper;$/;"	n
block_on	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/async_executor.rs	/^    fn block_on<T>(&self, future: impl Future<Output = T>) -> T {$/;"	P	implementation:AsyncStdExecutor
block_on	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/async_executor.rs	/^    fn block_on<T>(&self, future: impl Future<Output = T>) -> T {$/;"	P	implementation:FuturesExecutor
block_on	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/async_executor.rs	/^    fn block_on<T>(&self, future: impl Future<Output = T>) -> T {$/;"	P	implementation:Runtime
block_on	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/async_executor.rs	/^    fn block_on<T>(&self, future: impl Future<Output = T>) -> T {$/;"	P	implementation:SmolExecutor
block_on	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/async_executor.rs	/^    fn block_on<T>(&self, future: impl Future<Output = T>) -> T;$/;"	P	interface:AsyncExecutor
bold	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn bold(&self, s: String) -> String {$/;"	P	implementation:CliReport
bool	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^impl BoolAsSIMD for bool {$/;"	c
bootstrap	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/mod.rs	/^    pub fn bootstrap<T, S>(&self, nresamples: usize, statistic: S) -> T::Distributions$/;"	f
bootstrap	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/mod.rs	/^mod bootstrap;$/;"	n
bootstrap	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/mixed.rs	/^pub fn bootstrap<A, T, S>($/;"	f
bootstrap	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/mod.rs	/^mod bootstrap;$/;"	n
bootstrap	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/mod.rs	/^pub fn bootstrap<A, B, T, S>($/;"	f
bootstrap	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/sample.rs	/^    pub fn bootstrap<T, S>(&self, nresamples: usize, statistic: S) -> T::Distributions$/;"	f
borrow	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn borrow(&self) -> &Borrowed {$/;"	f
borrow	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn borrow(&self) -> &Borrowed;$/;"	P	interface:SampleBorrow
both	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/either_or_both.rs	/^    pub fn both(self) -> Option<(A, B)> {$/;"	P	implementation:EitherOrBoth
bottom_group	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    bottom_group: usize,$/;"	m	struct:GroupInner
boxed	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^    pub fn boxed(message: &str) -> Box<dyn Error> {$/;"	P	implementation:ProofStreamError
buf	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/multipeek_impl.rs	/^    buf: VecDeque<I::Item>,$/;"	m	struct:MultiPeek
buf	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/peek_nth.rs	/^    buf: VecDeque<I::Item>,$/;"	m	struct:PeekNth
buf	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^    buf: T::Buffer,$/;"	m	struct:TupleBuffer
buf	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^    buf: T::Buffer,$/;"	m	struct:Tuples
buffer	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    buffer: Vec<vec::IntoIter<I::Item>>,$/;"	m	struct:GroupInner
buffer	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lazy_buffer.rs	/^    buffer: Vec<I::Item>,$/;"	m	struct:LazyBuffer
build_change_estimates	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^pub fn build_change_estimates($/;"	f
build_estimates	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^pub fn build_estimates($/;"	f
byte_array_conversion_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn byte_array_conversion_test() {$/;"	f	module:b_prime_field_element_test
bytes_per_second	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^    fn bytes_per_second(&self, bytes: f64, typical: f64, values: &mut [f64]) -> &'static str {$/;"	P	implementation:DurationFormatter
bytes_per_second_decimal	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^    fn bytes_per_second_decimal($/;"	P	implementation:DurationFormatter
bytes_until_reseed	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    bytes_until_reseed: i64,$/;"	m	struct:ReseedingCore
calculate_new_peaks_from_append	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^pub fn calculate_new_peaks_from_append<H: AlgebraicHasher>($/;"	f
calculate_new_peaks_from_leaf_mutation	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^pub fn calculate_new_peaks_from_leaf_mutation<H: AlgebraicHasher>($/;"	f
calculate_new_peaks_from_leaf_mutation_empty_mmr_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^    fn calculate_new_peaks_from_leaf_mutation_empty_mmr_test() {$/;"	f	module:mmr_test
call	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/map.rs	/^    fn call(&mut self, t: Result<T, E>) -> Self::Out {$/;"	f
call	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/map.rs	/^    fn call(&mut self, t: T) -> Self::Out {$/;"	P	implementation:MapSpecialCaseFnInto
call	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/map.rs	/^    fn call(&mut self, t: T) -> Self::Out;$/;"	P	interface:MapSpecialCaseFn
call_mut	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    fn call_mut(&mut self, _arg: A) -> Self::Key {$/;"	P	implementation:ChunkIndex
call_mut	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    fn call_mut(&mut self, arg: A) -> Self::Key {$/;"	f
call_mut	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    fn call_mut(&mut self, arg: A) -> Self::Key;$/;"	P	interface:KeyFunction
canonical_representation	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^    fn canonical_representation(&self) -> Self {$/;"	P	implementation:DyadicRational
canonical_representation	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn canonical_representation(&self) -> u64 {$/;"	P	implementation:BFieldElement
canonize	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^    fn canonize(&mut self) {$/;"	P	implementation:DyadicRational
canonize_pbt	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^    fn canonize_pbt() {$/;"	f	module:dyadic_rationals_tests
canonize_simple_test	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^    fn canonize_simple_test() {$/;"	f	module:dyadic_rationals_tests
cargo_target_directory	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^fn cargo_target_directory() -> Option<PathBuf> {$/;"	f
cartesian_product	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub fn cartesian_product<I, J>(mut i: I, j: J) -> Product<I, J>$/;"	f
cartesian_product	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn cartesian_product<J>(self, other: J) -> Product<Self, J::IntoIter>$/;"	P	interface:Itertools
cast_from_int	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn cast_from_int(i: Self::UInt) -> Self;$/;"	P	interface:FloatSIMDUtils
cause	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/error.rs	/^    fn cause(&self) -> Option<&dyn StdError> {$/;"	P	implementation:Error
chain	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/free.rs	/^pub fn chain<I, J>(i: I, j: J) -> iter::Chain<<I as IntoIterator>::IntoIter, <J as IntoIterator>/;"	f
chain	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^macro_rules! chain {$/;"	M
change	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/format.rs	/^pub fn change(pct: f64, signed: bool) -> String {$/;"	f
change	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    change: ConfidenceInterval,$/;"	m	struct:Comparison
char	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^impl SampleUniform for char {$/;"	c
char_to_comp_u32	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^fn char_to_comp_u32(c: char) -> u32 {$/;"	f
children	/home/einar/triton/twenty-first/twenty-first/src/util_types/tree_m_ary.rs	/^    pub children: Vec<Rc<RefCell<Node<T>>>>,$/;"	m	struct:Node
choose	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        fn choose<I: Iterator<Item = u32>>(iter: I) -> Option<u32> {$/;"	f	function:test::value_stability_choose
choose	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        fn choose<I: Iterator<Item = u32>>(iter: I) -> Option<u32> {$/;"	f	function:test::value_stability_choose_stable
choose	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn choose<R>(&self, rng: &mut R) -> Option<&Self::Item>$/;"	P	implementation:T
choose	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn choose<R>(&self, rng: &mut R) -> Option<&Self::Item>$/;"	P	interface:SliceRandom
choose	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn choose<R>(mut self, rng: &mut R) -> Option<Self::Item>$/;"	P	interface:IteratorRandom
choose_multiple	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn choose_multiple<R>(&self, rng: &mut R, amount: usize) -> SliceChooseIter<Self, Self::Item/;"	P	implementation:T
choose_multiple	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn choose_multiple<R>(&self, rng: &mut R, amount: usize) -> SliceChooseIter<Self, Self::Item/;"	P	interface:SliceRandom
choose_multiple	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn choose_multiple<R>(mut self, rng: &mut R, amount: usize) -> Vec<Self::Item>$/;"	P	interface:IteratorRandom
choose_multiple_fill	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn choose_multiple_fill<R>(mut self, rng: &mut R, buf: &mut [Self::Item]) -> usize$/;"	P	interface:IteratorRandom
choose_multiple_weighted	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn choose_multiple_weighted<R, F, X>($/;"	P	implementation:T
choose_multiple_weighted	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn choose_multiple_weighted<R, F, X>($/;"	P	interface:SliceRandom
choose_mut	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn choose_mut<R>(&mut self, rng: &mut R) -> Option<&mut Self::Item>$/;"	P	implementation:T
choose_mut	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn choose_mut<R>(&mut self, rng: &mut R) -> Option<&mut Self::Item>$/;"	P	interface:SliceRandom
choose_sampling_mode	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    pub(crate) fn choose_sampling_mode($/;"	P	implementation:SamplingMode
choose_stable	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn choose_stable<R>(mut self, rng: &mut R) -> Option<Self::Item>$/;"	P	interface:IteratorRandom
choose_weighted	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn choose_weighted<R, F, B, X>($/;"	P	implementation:T
choose_weighted	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn choose_weighted<R, F, B, X>($/;"	P	interface:SliceRandom
choose_weighted_mut	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn choose_weighted_mut<R, F, B, X>($/;"	P	implementation:T
choose_weighted_mut	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn choose_weighted_mut<R, F, B, X>($/;"	P	interface:SliceRandom
chu_ntt_b_field_prop_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/ntt.rs	/^    fn chu_ntt_b_field_prop_test() {$/;"	f	module:fast_ntt_attempt_tests
chu_ntt_x_field_prop_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/ntt.rs	/^    fn chu_ntt_x_field_prop_test() {$/;"	f	module:fast_ntt_attempt_tests
chunk_remaining	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        chunk_remaining: usize,$/;"	m	struct:test::ChunkHintedIterator
chunk_size	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        chunk_size: usize,$/;"	m	struct:test::ChunkHintedIterator
chunks	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn chunks(self, size: usize) -> IntoChunks<Self>$/;"	P	interface:Itertools
circular_tuple_windows	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn circular_tuple_windows<T>(self) -> CircularTupleWindows<Self, T>$/;"	P	interface:Itertools
circular_tuple_windows	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^pub fn circular_tuple_windows<I, T>(iter: I) -> CircularTupleWindows<I, T>$/;"	f
classify	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^pub fn classify<A>(sample: &Sample<A>) -> LabeledSample<'_, A>$/;"	f
clearerr	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn clearerr(__stream: *mut FILE);$/;"	f
clearerr_unlocked	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn clearerr_unlocked(__stream: *mut FILE);$/;"	f
cli	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub(crate) cli: CliReport,$/;"	m	struct:Reports
cli_enabled	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub(crate) cli_enabled: bool,$/;"	m	struct:Reports
clone	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/mod.rs	/^    fn clone(&self) -> Data<'a, X, Y> {$/;"	P	implementation:Data
clone	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    fn clone(&self) -> ReseedingCore<R, Rsdr> {$/;"	f
clone	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    fn clone(&self) -> ReseedingRng<R, Rsdr> {$/;"	f
clone	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:MPolynomial
clone	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:MmrMembershipProof
clone_fields	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/impl_macros.rs	/^macro_rules! clone_fields {$/;"	M
cloned	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/free.rs	/^pub fn cloned<'a, I, T: 'a>(iterable: I) -> iter::Cloned<I::IntoIter>$/;"	f
cmp	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/sample.rs	/^        fn cmp<T>(a: &T, b: &T) -> Ordering$/;"	f	function:percentiles
cmp	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    cmp: F,$/;"	m	struct:MergeBy
cmp	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^        fn cmp(&self, other: &Self) -> core::cmp::Ordering {$/;"	P	implementation:sample_efraimidis_spirakis::Element
cmp	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^    fn cmp(&self, other: &Self) -> std::cmp::Ordering {$/;"	P	implementation:DyadicRational
cmp	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn cmp(&self, other: &Self) -> std::cmp::Ordering {$/;"	P	implementation:U32s
cmp_fn	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/merge_join.rs	/^    cmp_fn: F$/;"	m	struct:MergeJoinBy
coalesce	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^pub fn coalesce<I, F>(mut iter: I, f: F) -> Coalesce<I, F>$/;"	f
coalesce	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^mod coalesce;$/;"	n
coalesce	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn coalesce<F>(self, f: F) -> Coalesce<Self, F>$/;"	P	interface:Itertools
coalesce_pair	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^    fn coalesce_pair($/;"	f
coalesce_pair	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^    fn coalesce_pair(&mut self, t: T, item: Item) -> Result<T, (T, T)> {$/;"	f
coalesce_pair	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^    fn coalesce_pair(&mut self, t: T, item: Item) -> Result<T, (T, T)>;$/;"	P	interface:CoalescePredicate
coalesce_pair	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^    fn coalesce_pair(&mut self, t: T, item: T) -> Result<T, (T, T)> {$/;"	f
coefficients	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    pub coefficients: HashMap<Vec<u8>, T>,$/;"	m	struct:MPolynomial
coefficients	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub coefficients: Vec<FF>,$/;"	m	struct:Polynomial
coefficients	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    pub coefficients: [BFieldElement; EXTENSION_DEGREE],$/;"	m	struct:XFieldElement
colinearity_checks_count	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    pub colinearity_checks_count: usize, \/\/ number of colinearity checks in each round$/;"	m	struct:Fri
collect	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/map.rs	/^    fn collect<C>(self) -> C$/;"	f
collect	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    fn collect<C>(self) -> C$/;"	f
collect	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/grouping_map.rs	/^    pub fn collect<C>(self) -> HashMap<K, C>$/;"	f
collect_from_iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^    fn collect_from_iter<I>(iter: I, buf: &mut Self::Buffer) -> Option<Self>$/;"	P	interface:TupleCollect
collect_from_iter_no_buf	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^    fn collect_from_iter_no_buf<I>(iter: I) -> Option<Self>$/;"	P	interface:TupleCollect
collect_tuple	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn collect_tuple<T>(mut self) -> Option<T>$/;"	P	interface:Itertools
collect_vec	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn collect_vec(self) -> Vec<Self::Item>$/;"	P	interface:Itertools
colorize	/home/einar/triton/twenty-first/twenty-first/src/timing_reporter.rs	/^fn colorize(duration: Duration, average: Duration, width: usize) -> ColoredString {$/;"	f
combinations	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/combinations.rs	/^pub fn combinations<I>(iter: I, k: usize) -> Combinations<I>$/;"	f
combinations	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn combinations(self, k: usize) -> Combinations<Self>$/;"	P	interface:Itertools
combinations	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod combinations;$/;"	n
combinations_with_replacement	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/combinations_with_replacement.rs	/^pub fn combinations_with_replacement<I>(iter: I, k: usize) -> CombinationsWithReplacement<I>$/;"	f
combinations_with_replacement	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn combinations_with_replacement(self, k: usize) -> CombinationsWithReplacement<Self>$/;"	P	interface:Itertools
combinations_with_replacement	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod combinations_with_replacement;$/;"	n
combs	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/powerset.rs	/^    combs: Combinations<I>,$/;"	m	struct:Powerset
commit	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    fn commit($/;"	f
common	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/analysis/compare.rs	/^pub(crate) fn common<M: Measurement>($/;"	f
common	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/analysis/mod.rs	/^pub(crate) fn common<M: Measurement, T: ?Sized>($/;"	f
compare	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/analysis/mod.rs	/^mod compare;$/;"	n
compare_simple_test	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn compare_simple_test() {$/;"	f	module:u32s_tests
compare_simple_test_more	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn compare_simple_test_more() {$/;"	f	module:u32s_tests
compare_to_threshold	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^fn compare_to_threshold(estimate: &Estimate, noise: f64) -> ComparisonResult {$/;"	f
compare_to_threshold	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^fn compare_to_threshold(estimate: &Estimate, noise: f64) -> ComparisonResult {$/;"	f
comparison	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    comparison: Option<Comparison>,$/;"	m	struct:Context
comparison	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    fn comparison(&self, measurements: &MeasurementData<'_>) -> Option<Comparison> {$/;"	P	implementation:Html
comparison	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/mod.rs	/^    pub fn comparison(mut self, comp: &'a ComparisonData) -> PlotData<'a> {$/;"	P	implementation:PlotData
comparison	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/mod.rs	/^    pub(crate) comparison: Option<&'a ComparisonData>,$/;"	m	struct:PlotData
comparison	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub comparison: Option<ComparisonData>,$/;"	m	struct:MeasurementData
complete	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    fn complete($/;"	f
complete	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    fn complete(self) -> (Distribution<A>, Distribution<B>) {$/;"	f
complete	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    fn complete(self) -> (Distribution<A>, Distribution<B>, Distribution<C>) {$/;"	f
complete	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    fn complete(self) -> (Distribution<A>,) {$/;"	f
complete	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    fn complete(self) -> <Self::Item as Tuple>::Distributions;$/;"	P	interface:TupledDistributionsBuilder
concat	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/concat_impl.rs	/^pub fn concat<I>(iterable: I) -> I::Item$/;"	f
concat	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn concat(self) -> Self::Item$/;"	P	interface:Itertools
concat_impl	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod concat_impl;$/;"	n
confidence	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    confidence: String,$/;"	m	struct:Context
confidence_interval	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub confidence_interval: ConfidenceInterval,$/;"	m	struct:Estimate
confidence_interval	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/mod.rs	/^    pub fn confidence_interval(&self, confidence_level: A) -> (A, A)$/;"	f
confidence_level	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark.rs	/^    pub confidence_level: f64,$/;"	m	struct:BenchmarkConfig
confidence_level	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark.rs	/^    pub(crate) confidence_level: Option<f64>,$/;"	m	struct:PartialBenchmarkConfig
confidence_level	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    pub fn confidence_level(&mut self, cl: f64) -> &mut Self {$/;"	P	implementation:BenchmarkGroup
confidence_level	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    confidence_level: f64,$/;"	m	struct:BenchmarkConfig
confidence_level	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub confidence_level: f64,$/;"	m	struct:ConfidenceInterval
confidence_level	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    pub fn confidence_level(mut self, cl: f64) -> Criterion<M> {$/;"	P	implementation:Criterion
config	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    config: BenchmarkConfig,$/;"	m	struct:Criterion
config	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/context.rs	/^    pub config: *mut bindings::futhark_context_config,$/;"	m	struct:FutharkContext
configure_from_args	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    pub fn configure_from_args(mut self) -> Criterion<M> {$/;"	P	implementation:Criterion
connection	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    connection: Option<MutexGuard<'static, Connection>>,$/;"	m	struct:Criterion
connection	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^mod connection;$/;"	n
cons_tuples	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/cons_tuples_impl.rs	/^pub fn cons_tuples<I, J>(iterable: I) -> ConsTuples<I::IntoIter, J>$/;"	f
cons_tuples_impl	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod cons_tuples_impl;$/;"	n
constant_zero_eq_constant_zero	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn constant_zero_eq_constant_zero() {$/;"	f	module:test_polynomials
contains	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn contains<Q>(&mut self, query: &Q) -> bool$/;"	P	interface:Itertools
context	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/mod.rs	/^    pub(crate) context: &'a ReportContext,$/;"	m	struct:PlotContext
context	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/context.rs	/^    pub context: *mut bindings::futhark_context,$/;"	m	struct:FutharkContext
context	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^mod context;$/;"	n
conversion_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^    fn conversion_test() {$/;"	f	module:accumulator_mmr_tests
convert_size	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/mod.rs	/^fn convert_size(size: Option<(usize, usize)>) -> Option<(u32, u32)> {$/;"	f
convert_to_bfields_test	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn convert_to_bfields_test() {$/;"	f	module:u32s_tests
copy_new_dir_to_base	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/analysis/mod.rs	/^fn copy_new_dir_to_base(id: &str, baseline: &str, output_directory: &Path) {$/;"	f
corrupt_digest	/home/einar/triton/twenty-first/twenty-first/src/test_shared.rs	/^pub fn corrupt_digest(digest: &Digest) -> Digest {$/;"	f
count	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^    pub fn count(&self) -> (usize, usize, usize, usize, usize) {$/;"	f
count	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    count: usize,$/;"	m	struct:Positions
count	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    fn count(self) -> usize {$/;"	f
count	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/multi_product.rs	/^    fn count(self) -> usize {$/;"	f
count	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/merge_join.rs	/^    fn count(mut self) -> usize {$/;"	f
count	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/permutations.rs	/^    fn count(self) -> usize {$/;"	f
count	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/unique_impl.rs	/^    fn count(self) -> usize {$/;"	f
count_hashes	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    fn count_hashes<Digest: Clone>(proof: &SaltedAuthenticationStructure<Digest>) -> usize {$/;"	f	module:merkle_tree_test
count_ident	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^macro_rules! count_ident{$/;"	M
count_leaves	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    fn count_leaves(&mut self) -> u128 {$/;"	f
count_leaves	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^    fn count_leaves(&mut self) -> u128 {$/;"	P	implementation:MmrAccumulator
count_leaves	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_trait.rs	/^    fn count_leaves(&mut self) -> u128;$/;"	P	interface:Mmr
count_new_keys	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/unique_impl.rs	/^fn count_new_keys<I, K>(mut used: HashMap<K, ()>, iterable: I) -> usize$/;"	f
count_nodes	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^        fn count_nodes(&mut self) -> u128 {$/;"	P	implementation:mmr_test::ArchivalMmr
counts	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn counts(self) -> HashMap<Self::Item, usize>$/;"	P	interface:Itertools
counts_by	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn counts_by<K, F>(self, f: F) -> HashMap<K, usize>$/;"	P	interface:Itertools
cp	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/fs.rs	/^pub fn cp(from: &Path, to: &Path) -> Result<()> {$/;"	f
crash	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn crash() {$/;"	f	module:u32s_tests
create_plotter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    fn create_plotter(&self) -> Option<Box<dyn Plotter>> {$/;"	P	implementation:PlottingBackend
create_polynomial_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn create_polynomial_test() {$/;"	f	module:b_prime_field_element_test
criterion	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    criterion: &'a mut Criterion<M>,$/;"	m	struct:BenchmarkGroup
criterion_group	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/macros.rs	/^macro_rules! criterion_group {$/;"	M
criterion_main	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/macros.rs	/^macro_rules! criterion_main {$/;"	M
csv_enabled	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub(crate) csv_enabled: bool,$/;"	m	struct:Reports
csv_report	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^mod csv_report;$/;"	n
ctermid	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn ctermid(__s: *mut ::std::os::raw::c_char) -> *mut ::std::os::raw::c_char;$/;"	f
ctx	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    ctx: *mut bindings::futhark_context,$/;"	m	struct:Array_bool_1d
ctx	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    ctx: *mut bindings::futhark_context,$/;"	m	struct:Array_i64_1d
ctx	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    ctx: *mut bindings::futhark_context,$/;"	m	struct:Array_u64_1d
ctx	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    ctx: *mut bindings::futhark_context,$/;"	m	struct:Array_u64_2d
ctx	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    ctx: *mut bindings::futhark_context,$/;"	m	struct:Array_u64_3d
ctx	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    ctx: *mut bindings::futhark_context,$/;"	m	struct:Array_u8_2d
ctx	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    ctx: *mut bindings::futhark_context,$/;"	m	struct:Array_u8_3d
cumulative_weights	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^    cumulative_weights: Vec<X>,$/;"	m	struct:WeightedIndex
cur	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/multi_product.rs	/^    cur: Option<I::Item>,$/;"	m	struct:MultiProductIter
cur	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^    cur: usize,$/;"	m	struct:TupleBuffer
curr_iterator	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/multi_product.rs	/^    fn curr_iterator(&self) -> Vec<I::Item> {$/;"	f
current	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/combinations_with_replacement.rs	/^    fn current(&self) -> Vec<I::Item> {$/;"	f
current_elt	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    current_elt: Option<I::Item>,$/;"	m	struct:GroupInner
current_key	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    current_key: Option<K>,$/;"	m	struct:GroupInner
data	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub data: Data<'a, f64, f64>,$/;"	m	struct:MeasurementData
data	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/mod.rs	/^    data: Data<'a, X, Y>,$/;"	m	struct:Pairs
data	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/resamples.rs	/^    data: (&'a [X], &'a [Y]),$/;"	m	struct:Resamples
data	/home/einar/triton/twenty-first/twenty-first/src/util_types/tree_m_ary.rs	/^    pub data: T,$/;"	m	struct:Node
data_index	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^    pub data_index: u128,$/;"	m	struct:MmrMembershipProof
data_index_node_index_pbt	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^    fn data_index_node_index_pbt() {$/;"	f	module:mmr_test
data_index_to_node_index	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^pub fn data_index_to_node_index(data_index: u128) -> u128 {$/;"	f
data_index_to_node_index_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^    fn data_index_to_node_index_test() {$/;"	f	module:mmr_test
database_array	/home/einar/triton/twenty-first/twenty-first/src/util_types.rs	/^pub mod database_array;$/;"	n
database_array_tests	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_array.rs	/^mod database_array_tests {$/;"	n
database_vector	/home/einar/triton/twenty-first/twenty-first/src/util_types.rs	/^pub mod database_vector;$/;"	n
database_vector_tests	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_vector.rs	/^mod database_vector_tests {$/;"	n
db	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_array.rs	/^    db: DB,$/;"	m	struct:DatabaseArray
db	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_vector.rs	/^    db: DB,$/;"	m	struct:DatabaseVector
debug	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs	/^macro_rules! debug { ($($x:tt)*) => ($/;"	M
debug_context	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^fn debug_context<S: Serialize>(path: &Path, context: &S) {$/;"	f
debug_enabled	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^fn debug_enabled() -> bool {$/;"	f
debug_fmt_fields	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/impl_macros.rs	/^macro_rules! debug_fmt_fields {$/;"	M
debug_script	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^fn debug_script(path: &Path, figure: &Figure) {$/;"	f
decode_hex	/home/einar/triton/twenty-first/twenty-first/src/utils.rs	/^pub fn decode_hex(s: &str) -> Result<Vec<u8>, ParseIntError> {$/;"	f
decrease_masked	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn decrease_masked(self, mask: Self::Mask) -> Self;$/;"	P	interface:FloatSIMDUtils
decrement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    pub fn decrement(&mut self) {$/;"	P	implementation:BFieldElement
decrement	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    pub fn decrement(&mut self, index: usize) {$/;"	P	implementation:XFieldElement
dedup	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^pub fn dedup<I>(iter: I) -> Dedup<I>$/;"	f
dedup	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn dedup(self) -> Dedup<Self>$/;"	P	interface:Itertools
dedup_by	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^pub fn dedup_by<I, Pred>(mut iter: I, dedup_pred: Pred) -> DedupBy<I, Pred>$/;"	f
dedup_by	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn dedup_by<Cmp>(self, cmp: Cmp) -> DedupBy<Self, Cmp>$/;"	P	interface:Itertools
dedup_by_with_count	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^pub fn dedup_by_with_count<I, Pred>(mut iter: I, dedup_pred: Pred) -> DedupByWithCount<I, Pred>$/;"	f
dedup_by_with_count	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn dedup_by_with_count<Cmp>(self, cmp: Cmp) -> DedupByWithCount<Self, Cmp>$/;"	P	interface:Itertools
dedup_pair	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^    fn dedup_pair(&mut self, a: &T, b: &T) -> bool {$/;"	P	implementation:DedupEq
dedup_pair	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^    fn dedup_pair(&mut self, a: &T, b: &T) -> bool {$/;"	P	implementation:F
dedup_pair	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^    fn dedup_pair(&mut self, a: &T, b: &T) -> bool;$/;"	P	interface:DedupPredicate
dedup_with_count	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^pub fn dedup_with_count<I>(iter: I) -> DedupWithCount<I>$/;"	f
dedup_with_count	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn dedup_with_count(self) -> DedupWithCount<Self>$/;"	P	interface:Itertools
default	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    fn default() -> Criterion {$/;"	P	implementation:Criterion
default	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    fn default() -> PlotConfiguration {$/;"	P	implementation:PlotConfiguration
default	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/thread.rs	/^    fn default() -> ThreadRng {$/;"	P	implementation:ThreadRng
default	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^    fn default() -> Self {$/;"	P	implementation:Digest
default	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^        fn default() -> Self {$/;"	P	implementation:proof_stream_typed_tests::TestItem
default	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^    fn default() -> Self {$/;"	P	implementation:ProofStream
default	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^    pub fn default() -> Self {$/;"	f
degree	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    pub fn degree(&self) -> Degree {$/;"	P	implementation:MPolynomial
degree	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn degree(&self) -> isize {$/;"	P	implementation:Polynomial
degree_bounds_big	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn degree_bounds_big() {$/;"	f	module:test_mpolynomials
degree_raw	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^fn degree_raw<T: Add + Div + Mul + Sub + Display + Zero>(coefficients: &[T]) -> isize {$/;"	f
delete	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_vector.rs	/^    fn delete(&mut self, index: u128) {$/;"	P	implementation:DatabaseVector
dequeue	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream.rs	/^    pub fn dequeue<T>(&mut self, byte_length: usize) -> Result<T, Box<dyn Error>>$/;"	P	implementation:ProofStream
dequeue	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^    pub fn dequeue(&mut self) -> Result<Item, Box<dyn Error>> {$/;"	f
dequeue_and_authenticate	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    fn dequeue_and_authenticate($/;"	f
dequeue_length_prepended	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream.rs	/^    pub fn dequeue_length_prepended<T>(&mut self) -> Result<T, Box<dyn Error>>$/;"	P	implementation:ProofStream
deref	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/mod.rs	/^    fn deref(&self) -> &Sample<A> {$/;"	P	implementation:Distribution
deref	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^    fn deref(&self) -> &Sample<A> {$/;"	f
deref	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/sample.rs	/^    fn deref(&self) -> &[A] {$/;"	P	implementation:Sample
description	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/error.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:Error
diff	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod diff;$/;"	n
diff_exponents	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    diff_exponents: Vec<u8>,$/;"	m	struct:PolynomialEvaluationDataNode
diff_sum	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    diff_sum: u64,$/;"	m	struct:PolynomialEvaluationDataNode
diff_with	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/diff.rs	/^pub fn diff_with<I, J, F>(i: I, j: J, is_equal: F)$/;"	f
different_subsets	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/resamples.rs	/^    fn different_subsets() {$/;"	f	module:test
differentiate_const	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn differentiate_const() {$/;"	f	module:test_polynomials
differentiate_leibniz	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn differentiate_leibniz() {$/;"	f	module:test_polynomials
differentiate_quartic	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn differentiate_quartic() {$/;"	f	module:test_polynomials
differentiate_zero	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn differentiate_zero() {$/;"	f	module:test_polynomials
digest_from_str	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^    pub fn digest_from_str() {$/;"	f	module:digest_tests
digest_tests	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^mod digest_tests {$/;"	n
digests	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    digests: DatabaseVector<Digest>,$/;"	m	struct:ArchivalMmr
directory_name	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    directory_name: String,$/;"	m	struct:BenchmarkId
disallow_conversion_of_u8_array_outside_range	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn disallow_conversion_of_u8_array_outside_range() {$/;"	f	module:b_prime_field_element_test
display_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn display_test() {$/;"	f	module:b_prime_field_element_test
display_u32s	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn display_u32s() {$/;"	f	module:u32s_tests
distr	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    distr: D,$/;"	m	struct:DistIter
distr	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    distr: D,$/;"	m	struct:DistMap
distribution	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs	/^mod distribution;$/;"	n
distributions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^mod distributions;$/;"	n
distributions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/mod.rs	/^mod distributions;$/;"	n
distributions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub distributions: Distributions,$/;"	m	struct:MeasurementData
distributions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs	/^pub mod distributions;$/;"	n
div	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn div(self, rhs: Self) -> Self::Output {$/;"	P	implementation:U32s
div	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn div(self, other: Self) -> Self {$/;"	P	implementation:BFieldElement
div	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn div(self, other: Self) -> Self {$/;"	P	implementation:Polynomial
div	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn div(self, other: Self) -> Self {$/;"	P	implementation:XFieldElement
div_2_pbt	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn div_2_pbt() {$/;"	f	module:u32s_tests
div_mul_pbt	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn div_mul_pbt() {$/;"	f	module:u32s_tests
div_rem	/home/einar/triton/twenty-first/twenty-first/src/shared_math/other.rs	/^pub fn div_rem<T: Div<Output = T> + Rem<Output = T> + Copy>(x: T, y: T) -> (T, T) {$/;"	f
div_two	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    pub fn div_two(&mut self) {$/;"	P	implementation:U32s
divide	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn divide(&self, divisor: Self) -> (Self, Self) {$/;"	P	implementation:Polynomial
divide_by_power_of_two	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^    pub fn divide_by_power_of_two(&mut self, power: u32) {$/;"	P	implementation:DyadicRational
do_test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^            fn do_test<I: Iterator<Item = u32>>(iter: I, v: &[u32]) {$/;"	f	function:test::value_stability_choose_multiple
do_test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        fn do_test<I: Iterator<Item = u32>>(iter: I, v: &[u32]) {$/;"	f	function:test::value_stability_choose_multiple
domain	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    pub domain: FriDomain,$/;"	m	struct:Fri
done	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    done: bool,$/;"	m	struct:GroupInner
done	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lazy_buffer.rs	/^    done: bool,$/;"	m	struct:LazyBuffer
dot	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/mod.rs	/^fn dot<A>(xs: &[A], ys: &[A]) -> A$/;"	f
dprintf	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn dprintf($/;"	f
draw_line_comarision_figure	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/summary.rs	/^fn draw_line_comarision_figure<XR: AsRangedCoord<Value = f64>, YR: AsRangedCoord<Value = f64>>($/;"	f
draw_violin_figure	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/summary.rs	/^fn draw_violin_figure<XR: AsRangedCoord<Value = f64>, YR: AsRangedCoord<Value = f64>>($/;"	f
drop	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    fn drop(&mut self) {$/;"	P	implementation:BenchmarkGroup
drop	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Array_bool_1d
drop	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Array_i64_1d
drop	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Array_u64_1d
drop	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Array_u64_2d
drop	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Array_u64_3d
drop	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Array_u8_2d
drop	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Array_u8_3d
drop_group	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    fn drop_group(&mut self, client: usize) {$/;"	f
drop_group	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    fn drop_group(&self, client: usize) {$/;"	f
dropped_group	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    dropped_group: usize,$/;"	m	struct:GroupInner
dropping	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn dropping(mut self, n: usize) -> Self$/;"	P	interface:Itertools
dropping_back	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn dropping_back(mut self, n: usize) -> Self$/;"	P	interface:Itertools
duplicates	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^pub fn duplicates<I>(iter: I) -> Duplicates<I>$/;"	f
duplicates	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn duplicates(self) -> Duplicates<Self>$/;"	P	interface:Itertools
duplicates_by	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^pub fn duplicates_by<I, Key, F>(iter: I, f: F) -> DuplicatesBy<I, Key, F>$/;"	f
duplicates_by	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn duplicates_by<V, F>(self, f: F) -> DuplicatesBy<Self, V, F>$/;"	P	interface:Itertools
duplicates_impl	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod duplicates_impl;$/;"	n
durations	/home/einar/triton/twenty-first/twenty-first/src/timing_reporter.rs	/^    durations: Vec<(String, Duration)>,$/;"	m	struct:TimingReporter
dyadic_rationals	/home/einar/triton/twenty-first/twenty-first/src/amount.rs	/^pub mod dyadic_rationals;$/;"	n
dyadic_rationals_tests	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^mod dyadic_rationals_tests {$/;"	n
either_or_both	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod either_or_both;$/;"	n
elapsed	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/analysis/mod.rs	/^macro_rules! elapsed {$/;"	M
elapsed	/home/einar/triton/twenty-first/twenty-first/src/timing_reporter.rs	/^    pub fn elapsed(&mut self, label: &str) {$/;"	P	implementation:TimingReporter
elapsed_time	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/bencher.rs	/^    pub(crate) elapsed_time: Duration, \/\/ How much time did it take to perform the iteration? /;"	m	struct:Bencher
element	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/intersperse.rs	/^    element: ElemF,$/;"	m	struct:IntersperseWith
elements_per_second	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^    fn elements_per_second(&self, elems: f64, typical: f64, values: &mut [f64]) -> &'static str /;"	P	implementation:DurationFormatter
elt	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/repeatn.rs	/^    elt: Option<A>,$/;"	m	struct:RepeatN
emojihash	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    pub fn emojihash(&self) -> String {$/;"	P	implementation:BFieldElement
emojihash	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^    pub fn emojihash(&self) -> String {$/;"	P	implementation:Digest
emojihash	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    pub fn emojihash(&self) -> String {$/;"	P	implementation:XFieldElement
empty_mmr_behavior_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    fn empty_mmr_behavior_test() {$/;"	f	module:mmr_test
enable_text_coloring	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub enable_text_coloring: bool,$/;"	m	struct:CliReport
enable_text_overwrite	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub enable_text_overwrite: bool,$/;"	m	struct:CliReport
end	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^    fn end(&self, i: Self::Intermediate) -> Self::Value {$/;"	P	implementation:WallTime
end	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^    fn end(&self, i: Self::Intermediate) -> Self::Value;$/;"	P	interface:Measurement
enqueue	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream.rs	/^    pub fn enqueue<T>(&mut self, item: &T) -> Result<(), Box<dyn Error>>$/;"	P	implementation:ProofStream
enqueue	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^    pub fn enqueue(&mut self, item: &Item) {$/;"	f
enqueue_auth_pairs	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    fn enqueue_auth_pairs($/;"	f
enqueue_dequeue_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^    fn enqueue_dequeue_test() {$/;"	f	module:proof_stream_typed_tests
enqueue_length_prepended	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream.rs	/^    pub fn enqueue_length_prepended<T>(&mut self, item: &T) -> Result<(), Box<dyn Error>>$/;"	P	implementation:ProofStream
ensure_directory_name_unique	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub fn ensure_directory_name_unique(&mut self, existing_directories: &HashSet<String>) {$/;"	P	implementation:BenchmarkId
ensure_title_unique	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub fn ensure_title_unique(&mut self, existing_titles: &HashSet<String>) {$/;"	P	implementation:BenchmarkId
enumerate	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/free.rs	/^pub fn enumerate<I>(iterable: I) -> iter::Enumerate<I::IntoIter>$/;"	f
eq	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^        fn eq(&self, other: &Self) -> bool {$/;"	P	implementation:sample_efraimidis_spirakis::Element
eq	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn eq(&self, other: &IndexVec) -> bool {$/;"	P	implementation:IndexVec
eq	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	P	implementation:DyadicRational
eq	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	P	implementation:BFieldElement
eq	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	P	implementation:MPolynomial
eq	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	P	implementation:Polynomial
eq	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	P	implementation:MmrMembershipProof
equal	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^pub fn equal<I, J>(a: I, b: J) -> bool$/;"	f
equality	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn equality() {$/;"	f	module:test_polynomials
equality_and_hash_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn equality_and_hash_test() {$/;"	f	module:b_prime_field_element_test
equality_and_hash_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^    fn equality_and_hash_test() {$/;"	f	module:mmr_membership_proof_test
equality_test	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^    fn equality_test() {$/;"	f	module:dyadic_rationals_tests
equality_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn equality_test() {$/;"	f	module:test_mpolynomials
error	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^mod error;$/;"	n
error	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/macros_private.rs	/^macro_rules! error {$/;"	M
error	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/process_results_impl.rs	/^    error: &'a mut Result<(), E>,$/;"	m	struct:ProcessResults
error	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs	/^macro_rules! error { ($($x:tt)*) => ($/;"	M
error	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^    error: String,$/;"	m	struct:FutharkError
estimate	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^mod estimate;$/;"	n
estimate	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/kde/mod.rs	/^    fn estimate<A: Float>(self, sample: &Sample<A>) -> A {$/;"	P	implementation:Bandwidth
estimate	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/kde/mod.rs	/^    pub fn estimate(&self, x: A) -> A {$/;"	f
estimates	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/analysis/compare.rs	/^fn estimates<M: Measurement>($/;"	f
estimates	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/analysis/mod.rs	/^fn estimates(avg_times: &Sample<f64>, config: &BenchmarkConfig) -> (Distributions, Estimates) {$/;"	f
evaluate	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/kde/kernel.rs	/^    fn evaluate(&self, x: A) -> A {$/;"	f
evaluate	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/kde/kernel.rs	/^    fn evaluate(&self, x: A) -> A;$/;"	P	interface:Kernel
evaluate	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    pub fn evaluate(&self, point: &[FF]) -> FF {$/;"	P	implementation:MPolynomial
evaluate	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn evaluate(&self, &x: &FF) -> FF {$/;"	P	implementation:Polynomial
evaluate_symbolic	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    pub fn evaluate_symbolic(&self, point: &[Polynomial<FF>]) -> Polynomial<FF> {$/;"	P	implementation:MPolynomial
evaluate_symbolic_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn evaluate_symbolic_test() {$/;"	f	module:test_mpolynomials
evaluate_symbolic_with_memoization	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    pub fn evaluate_symbolic_with_memoization($/;"	P	implementation:MPolynomial
evaluate_symbolic_with_memoization_precalculated	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    pub fn evaluate_symbolic_with_memoization_precalculated($/;"	P	implementation:MPolynomial
evaluate_symbolic_with_zeros_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn evaluate_symbolic_with_zeros_test() {$/;"	f	module:test_mpolynomials
evaluate_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn evaluate_test() {$/;"	f	module:test_mpolynomials
evaluate_with_precalculation	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    pub fn evaluate_with_precalculation($/;"	P	implementation:MPolynomial
exactly_one	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn exactly_one(mut self) -> Result<Self::Item, ExactlyOneError<Self>>$/;"	P	interface:Itertools
exactly_one_err	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod exactly_one_err;$/;"	n
exp	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^        fn exp(base: BFieldElement, exponent: u64) -> BFieldElement {$/;"	f	method:BFieldElement::inverse
expansion_factor	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    pub expansion_factor: usize,         \/\/ = domain_length \/ trace_length$/;"	m	struct:Fri
explanation	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    explanation: String,$/;"	m	struct:Comparison
exponent	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^    exponent: u32,$/;"	m	struct:DyadicRational
extend	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    fn extend(&mut self, other: &mut (Vec<A>, Vec<B>)) {$/;"	f
extend	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    fn extend(&mut self, other: &mut (Vec<A>, Vec<B>, Vec<C>)) {$/;"	f
extend	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    fn extend(&mut self, other: &mut (Vec<A>, Vec<B>, Vec<C>, Vec<D>)) {$/;"	f
extend	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    fn extend(&mut self, other: &mut (Vec<A>,)) {$/;"	f
extend	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    fn extend(&mut self, other: &mut Self);$/;"	P	interface:TupledDistributionsBuilder
extract	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn extract(self, index: usize) -> Self {$/;"	P	interface:FloatAsSIMD
extract_db	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_array.rs	/^    pub fn extract_db(self) -> DB {$/;"	P	implementation:DatabaseArray
extract_db	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_vector.rs	/^    pub fn extract_db(self) -> DB {$/;"	P	implementation:DatabaseVector
extract_exponents_list	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    pub fn extract_exponents_list(mpols: &[Self]) -> Result<Vec<Vec<u8>>, Box<dyn Error>> {$/;"	P	implementation:MPolynomial
extract_exponents_list_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn extract_exponents_list_test() {$/;"	f	module:test_mpolynomials
extrema_set	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod extrema_set;$/;"	n
f	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/routine.rs	/^    f: F,$/;"	m	struct:Function
f	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^    f: F,$/;"	m	struct:CoalesceBy
f	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/map.rs	/^    f: F,$/;"	m	struct:MapSpecialCase
f	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    f: F$/;"	m	struct:FilterMapOk
f	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    f: F$/;"	m	struct:FilterOk
f	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    f: F,$/;"	m	struct:Batching
f	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    f: F,$/;"	m	struct:Positions
f	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    f: F,$/;"	m	struct:TakeWhileRef
f	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    f: F,$/;"	m	struct:Update
f	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/peeking_take_while.rs	/^    f: F,$/;"	m	struct:PeekingTakeWhile
f	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/sources.rs	/^    f: F,$/;"	m	struct:Iterate
f	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/sources.rs	/^    f: F,$/;"	m	struct:RepeatCall
f	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/sources.rs	/^    f: F,$/;"	m	struct:Unfold
f	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/unique_impl.rs	/^    f: F,$/;"	m	struct:UniqueBy
f32	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/float.rs	/^impl Float for f32 {}$/;"	c
f64	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/float.rs	/^impl Float for f64 {}$/;"	c
faint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn faint(&self, s: String) -> String {$/;"	P	implementation:CliReport
false_	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const false_: u32 = 0;$/;"	C
fast_coset_divide	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn fast_coset_divide($/;"	f
fast_coset_divide_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn fast_coset_divide_test() {$/;"	f	module:test_polynomials
fast_coset_evaluate	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn fast_coset_evaluate($/;"	f
fast_coset_evaluate_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn fast_coset_evaluate_test() {$/;"	f	module:test_polynomials
fast_coset_interpolate	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn fast_coset_interpolate($/;"	f
fast_evaluate	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn fast_evaluate($/;"	f
fast_evaluate_pb_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn fast_evaluate_pb_test() {$/;"	f	module:test_polynomials
fast_evaluate_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn fast_evaluate_test() {$/;"	f	module:test_polynomials
fast_interpolate	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn fast_interpolate($/;"	f
fast_interpolate_pbt	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn fast_interpolate_pbt() {$/;"	f	module:test_polynomials
fast_interpolate_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn fast_interpolate_test() {$/;"	f	module:test_polynomials
fast_lagrange_interpolate_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn fast_lagrange_interpolate_test() {$/;"	f	module:test_polynomials
fast_mod_pow	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn fast_mod_pow(&self, pow: BigInt) -> Self {$/;"	f
fast_multiply	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn fast_multiply($/;"	f
fast_multiply_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn fast_multiply_test() {$/;"	f	module:test_polynomials
fast_ntt_attempt_tests	/home/einar/triton/twenty-first/twenty-first/src/shared_math/ntt.rs	/^mod fast_ntt_attempt_tests {$/;"	n
fast_square	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn fast_square(&self) -> Self {$/;"	f
fast_square_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn fast_square_test() {$/;"	f	module:test_polynomials
fast_zerofier	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn fast_zerofier(domain: &[FF], primitive_root: &BFieldElement, root_order: usize) -> Se/;"	f
fast_zerofier_pb_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn fast_zerofier_pb_test() {$/;"	f	module:test_polynomials
fast_zerofier_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn fast_zerofier_test() {$/;"	f	module:test_polynomials
fclose	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn fclose(__stream: *mut FILE) -> ::std::os::raw::c_int;$/;"	f
fdopen	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn fdopen(__fd: ::std::os::raw::c_int, __modes: *const ::std::os::raw::c_char)$/;"	f
fences	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^    fences: (A, A, A, A),$/;"	m	struct:Iter
fences	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^    fences: (A, A, A, A),$/;"	m	struct:LabeledSample
fences	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^    pub fn fences(&self) -> (A, A, A, A) {$/;"	f
feof	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn feof(__stream: *mut FILE) -> ::std::os::raw::c_int;$/;"	f
feof_unlocked	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn feof_unlocked(__stream: *mut FILE) -> ::std::os::raw::c_int;$/;"	f
ferror	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn ferror(__stream: *mut FILE) -> ::std::os::raw::c_int;$/;"	f
ferror_unlocked	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn ferror_unlocked(__stream: *mut FILE) -> ::std::os::raw::c_int;$/;"	f
fflush	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn fflush(__stream: *mut FILE) -> ::std::os::raw::c_int;$/;"	f
fflush_unlocked	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn fflush_unlocked(__stream: *mut FILE) -> ::std::os::raw::c_int;$/;"	f
fgetc	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn fgetc(__stream: *mut FILE) -> ::std::os::raw::c_int;$/;"	f
fgetc_unlocked	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn fgetc_unlocked(__stream: *mut FILE) -> ::std::os::raw::c_int;$/;"	f
fgetpos	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn fgetpos(__stream: *mut FILE, __pos: *mut fpos_t) -> ::std::os::raw::c_int;$/;"	f
fgets	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn fgets($/;"	f
fileno	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn fileno(__stream: *mut FILE) -> ::std::os::raw::c_int;$/;"	f
fileno_unlocked	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn fileno_unlocked(__stream: *mut FILE) -> ::std::os::raw::c_int;$/;"	f
fill	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn fill<T: Fill + ?Sized>(&mut self, dest: &mut T) {$/;"	P	interface:Rng
fill_bytes	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	P	implementation:ReadRng
fill_bytes	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	f
fill_bytes	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	P	implementation:StepRng
fill_bytes	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/small.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	P	implementation:SmallRng
fill_bytes	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	P	implementation:StdRng
fill_bytes	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/thread.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	P	implementation:ThreadRng
fill_bytes	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro128plusplus.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	P	implementation:Xoshiro128PlusPlus
fill_bytes	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro256plusplus.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	P	implementation:Xoshiro256PlusPlus
filler	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/pad_tail.rs	/^    filler: F,$/;"	m	struct:PadUsing
filter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    filter: Option<Regex>,$/;"	m	struct:Criterion
filter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^        fn filter<I>(&mut self, item: I) -> Option<I>$/;"	f	module:private
filter_map_ok	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub fn filter_map_ok<I, F, T, U, E>(iter: I, f: F) -> FilterMapOk<I, F>$/;"	f
filter_map_ok	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn filter_map_ok<F, T, U, E>(self, f: F) -> FilterMapOk<Self, F>$/;"	P	interface:Itertools
filter_matches	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    fn filter_matches(&self, id: &str) -> bool {$/;"	P	implementation:Criterion
filter_ok	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub fn filter_ok<I, F, T, E>(iter: I, f: F) -> FilterOk<I, F>$/;"	f
filter_ok	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn filter_ok<F, T, E>(self, f: F) -> FilterOk<Self, F>$/;"	P	interface:Itertools
final_summary	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    fn final_summary(&self, report_context: &ReportContext) {$/;"	P	implementation:Html
final_summary	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    pub fn final_summary(&self) {$/;"	P	implementation:Criterion
final_summary	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn final_summary(&self, _context: &ReportContext) {}$/;"	P	interface:Report
find_or_first	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn find_or_first<P>(mut self, mut predicate: P) -> Option<Self::Item>$/;"	P	interface:Itertools
find_or_last	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn find_or_last<P>(mut self, mut predicate: P) -> Option<Self::Item>$/;"	P	interface:Itertools
find_position	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn find_position<P>(&mut self, mut pred: P) -> Option<(usize, Self::Item)>$/;"	P	interface:Itertools
finish	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    pub fn finish(self) {$/;"	P	implementation:BenchmarkGroup
finish	/home/einar/triton/twenty-first/twenty-first/src/timing_reporter.rs	/^    pub fn finish(&self) -> TimingReport {$/;"	P	implementation:TimingReporter
finite_mask	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn finite_mask(self) -> Self::Mask;$/;"	P	interface:FloatSIMDUtils
first	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/combinations.rs	/^    first: bool,$/;"	m	struct:Combinations
first	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/combinations_with_replacement.rs	/^    first: bool,$/;"	m	struct:CombinationsWithReplacement
first	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    first: Option<I::Item>,$/;"	m	struct:Chunk
first	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    first: Option<I::Item>,$/;"	m	struct:Group
first_two	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/exactly_one_err.rs	/^    first_two: Option<Either<[I::Item; 2], I::Item>>,$/;"	m	struct:ExactlyOneError
fit	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/regression.rs	/^    pub fn fit(data: &Data<'_, A, A>) -> Slope<A> {$/;"	f
flag	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    flag: bool,$/;"	m	struct:Interleave
flatten_ok	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/flatten_ok.rs	/^pub fn flatten_ok<I, T, E>(iter: I) -> FlattenOk<I, T, E>$/;"	f
flatten_ok	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn flatten_ok<T, E>(self) -> FlattenOk<Self, T, E>$/;"	P	interface:Itertools
flatten_ok	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod flatten_ok;$/;"	n
flip	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/either_or_both.rs	/^    pub fn flip(self) -> EitherOrBoth<B, A> {$/;"	P	implementation:EitherOrBoth
float	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/mod.rs	/^mod float;$/;"	n
float	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs	/^mod float;$/;"	n
float_impls	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs	/^macro_rules! float_impls {$/;"	M
flockfile	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn flockfile(__stream: *mut FILE);$/;"	f
flush	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_array.rs	/^    pub fn flush(&mut self) {$/;"	P	implementation:DatabaseArray
flush	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_vector.rs	/^    pub fn flush(&mut self) {$/;"	P	implementation:DatabaseVector
flush	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    pub fn flush(&mut self) {$/;"	P	implementation:ArchivalMmr
fmemopen	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn fmemopen($/;"	f
fmt	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	P	implementation:MessageError
fmt	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Statistic
fmt	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:BenchmarkId
fmt	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/exactly_one_err.rs	/^    fn fmt(&self, f: &mut Formatter) -> FmtResult {$/;"	f
fmt	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/flatten_ok.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/format.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:BernoulliError
fmt	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs	/^    fn fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result {$/;"	P	implementation:EmptySlice
fmt	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:WeightedError
fmt	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ReadError
fmt	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^    fn fmt(&self, f: &mut Formatter<'_>) -> FmtResult {$/;"	P	implementation:Error
fmt	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^    fn fmt(&self, f: &mut Formatter<'_>) -> FmtResult {$/;"	P	implementation:FutharkError
fmt	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	P	implementation:U32s
fmt	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:BFieldElement
fmt	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ValidationError
fmt	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:MPolynomial
fmt	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:PrecalculationError
fmt	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:MPolynomial
fmt	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn fmt(&self, f: &mut Formatter) -> std::fmt::Result {$/;"	P	implementation:Polynomial
fmt	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {$/;"	P	implementation:Polynomial
fmt	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Digest
fmt	/home/einar/triton/twenty-first/twenty-first/src/shared_math/stark/stark_verify_error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:StarkVerifyError
fmt	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {$/;"	P	implementation:XFieldElement
fmt	/home/einar/triton/twenty-first/twenty-first/src/timing_reporter.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	P	implementation:TimingReport
fmt	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ProofStreamError
fmt	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	P	implementation:ProofStreamError
fn	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    pub const fn new(value: u64) -> Self {$/;"	C	implementation:BFieldElement
fn	/home/einar/triton/twenty-first/twenty-first/src/shared_math/other.rs	/^const fn num_bits<T>() -> u64 {$/;"	C
fold	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^    fn fold<Acc, FnAcc>(self, acc: Acc, mut fn_acc: FnAcc) -> Acc$/;"	f
fold	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/map.rs	/^    fn fold<Acc, Fold>(self, init: Acc, mut fold_f: Fold) -> Acc$/;"	f
fold	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    fn fold<Acc, Fold>(self, init: Acc, fold_f: Fold) -> Acc$/;"	f
fold	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    fn fold<Acc, G>(mut self, init: Acc, mut f: G) -> Acc$/;"	f
fold	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    fn fold<Acc, G>(mut self, mut accum: Acc, mut f: G) -> Acc$/;"	f
fold	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    fn fold<Acc, G>(self, init: Acc, mut g: G) -> Acc$/;"	f
fold	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/free.rs	/^pub fn fold<I, B, F>(iterable: I, init: B, f: F) -> B$/;"	f
fold	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/grouping_map.rs	/^    pub fn fold<FO, R>(self, init: R, mut operation: FO) -> HashMap<K, R>$/;"	f
fold	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/intersperse.rs	/^    fn fold<B, F>(mut self, init: B, mut f: F) -> B where$/;"	f
fold	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/process_results_impl.rs	/^    fn fold<B, F>(mut self, init: B, mut f: F) -> B$/;"	f
fold1	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn fold1<F>(mut self, f: F) -> Option<Self::Item>$/;"	P	interface:Itertools
fold_first	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/grouping_map.rs	/^    pub fn fold_first<FO>(self, mut operation: FO) -> HashMap<K, V>$/;"	f
fold_ok	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn fold_ok<A, E, B, F>(&mut self, mut start: B, mut f: F) -> Result<B, E>$/;"	P	interface:Itertools
fold_options	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn fold_options<A, B, F>(&mut self, mut start: B, mut f: F) -> Option<B>$/;"	P	interface:Itertools
fold_results	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn fold_results<A, E, B, F>(&mut self, start: B, f: F) -> Result<B, E>$/;"	P	interface:Itertools
fold_while	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn fold_while<B, F>(&mut self, init: B, mut f: F) -> FoldWhile<B>$/;"	P	interface:Itertools
fopen	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn fopen($/;"	f
foreach	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn foreach<F>(self, f: F)$/;"	P	interface:Itertools
fork	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^mod fork {$/;"	n
fork_counter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    fork_counter: usize,$/;"	m	struct:ReseedingCore
fork_handler	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    extern "C" fn fork_handler() {$/;"	f	module:fork
formal_derivative	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn formal_derivative(&self) -> Self {$/;"	P	implementation:Polynomial
format	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^mod format;$/;"	n
format	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/format.rs	/^    fn format<F>(&self, f: &mut fmt::Formatter, mut cb: F) -> fmt::Result$/;"	f
format	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn format(self, sep: &str) -> Format<Self>$/;"	P	interface:Itertools
format	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod format;$/;"	n
format_opt	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^        fn format_opt(opt: &Option<String>) -> String {$/;"	f	method:BenchmarkId::fmt
format_throughput	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^    fn format_throughput(&self, throughput: &Throughput, value: f64) -> String {$/;"	P	interface:ValueFormatter
format_value	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^    fn format_value(&self, value: f64) -> String {$/;"	P	interface:ValueFormatter
format_with	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn format_with<F>(self, sep: &str, format: F) -> FormatWith<Self, F>$/;"	P	interface:Itertools
formatter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^    fn formatter(&self) -> &dyn ValueFormatter {$/;"	P	implementation:WallTime
formatter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^    fn formatter(&self) -> &dyn ValueFormatter;$/;"	P	interface:Measurement
formatter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/mod.rs	/^    pub(crate) formatter: &'a dyn ValueFormatter,$/;"	m	struct:PlotData
fp_offset	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fp_offset: ::std::os::raw::c_uint,$/;"	m	struct:__va_list_tag
fpos_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type fpos_t = __fpos_t;$/;"	t
fprintf	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn fprintf($/;"	f
fputc	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn fputc(__c: ::std::os::raw::c_int, __stream: *mut FILE) -> ::std::os::raw::c_int;$/;"	f
fputc_unlocked	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn fputc_unlocked(__c: ::std::os::raw::c_int, __stream: *mut FILE)$/;"	f
fputs	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn fputs(__s: *const ::std::os::raw::c_char, __stream: *mut FILE) -> ::std::os::raw::c_i/;"	f
fread	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn fread($/;"	f
fread_unlocked	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn fread_unlocked($/;"	f
free	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^pub mod free;$/;"	n
free	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    unsafe fn free<C>(ctx: C, ptr: *mut Self) -> ::std::os::raw::c_int$/;"	P	implementation:futhark_bool_1d
free	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    unsafe fn free<C>(ctx: C, ptr: *mut Self) -> ::std::os::raw::c_int$/;"	P	implementation:futhark_i64_1d
free	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    unsafe fn free<C>(ctx: C, ptr: *mut Self) -> ::std::os::raw::c_int$/;"	P	implementation:futhark_u64_1d
free	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    unsafe fn free<C>(ctx: C, ptr: *mut Self) -> ::std::os::raw::c_int$/;"	P	implementation:futhark_u64_2d
free	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    unsafe fn free<C>(ctx: C, ptr: *mut Self) -> ::std::os::raw::c_int$/;"	P	implementation:futhark_u64_3d
free	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    unsafe fn free<C>(ctx: C, ptr: *mut Self) -> ::std::os::raw::c_int$/;"	P	implementation:futhark_u8_2d
free	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    unsafe fn free<C>(ctx: C, ptr: *mut Self) -> ::std::os::raw::c_int$/;"	P	implementation:futhark_u8_3d
free	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    unsafe fn free<C>(ctx: C, ptr: *mut Self) -> c_int$/;"	P	interface:FutharkType
free	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/context.rs	/^    pub fn free(&mut self) {$/;"	P	implementation:FutharkContext
free_array	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn free_array(&mut self)$/;"	P	implementation:Array_bool_1d
free_array	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn free_array(&mut self)$/;"	P	implementation:Array_i64_1d
free_array	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn free_array(&mut self)$/;"	P	implementation:Array_u64_1d
free_array	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn free_array(&mut self)$/;"	P	implementation:Array_u64_2d
free_array	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn free_array(&mut self)$/;"	P	implementation:Array_u64_3d
free_array	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn free_array(&mut self)$/;"	P	implementation:Array_u8_2d
free_array	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn free_array(&mut self)$/;"	P	implementation:Array_u8_3d
freopen	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn freopen($/;"	f
fri	/home/einar/triton/twenty-first/twenty-first/src/shared_math.rs	/^pub mod fri;$/;"	n
fri_domain_tests	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^mod fri_domain_tests {$/;"	n
fri_on_x_field_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    fn fri_on_x_field_test() {$/;"	f	module:fri_tests
fri_tests	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^mod fri_tests {$/;"	n
fri_x_field_limit_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    fn fri_x_field_limit_test() {$/;"	f	module:fri_tests
from	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    fn from(other: &InternalBenchmarkId) -> RawBenchmarkId {$/;"	P	implementation:RawBenchmarkId
from	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    fn from(other: &crate::PlotConfiguration) -> Self {$/;"	P	implementation:PlotConfiguration
from	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    fn from(other: &crate::benchmark::BenchmarkConfig) -> Self {$/;"	P	implementation:BenchmarkConfig
from	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    fn from(other: ciborium::de::Error<std::io::Error>) -> Self {$/;"	P	implementation:MessageError
from	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    fn from(other: ciborium::ser::Error<std::io::Error>) -> Self {$/;"	P	implementation:MessageError
from	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    fn from(other: crate::ActualSamplingMode) -> Self {$/;"	P	implementation:SamplingMethod
from	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    fn from(other: crate::AxisScale) -> Self {$/;"	P	implementation:AxisScale
from	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    fn from(other: std::io::Error) -> Self {$/;"	P	implementation:MessageError
from	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    fn from(other: std::time::Duration) -> Self {$/;"	P	implementation:Duration
from	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/error.rs	/^    fn from(other: CsvError) -> Error {$/;"	P	implementation:Error
from	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/mod.rs	/^    pub fn from(values: Box<[A]>) -> Distribution<A> {$/;"	f
from	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    fn from(iter: I) -> Self {$/;"	P	implementation:Tuple1Combination
from	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn from(r: ::core::ops::Range<X>) -> Uniform<X> {$/;"	P	implementation:Uniform
from	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn from(r: ::core::ops::RangeInclusive<X>) -> Uniform<X> {$/;"	P	implementation:Uniform
from	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn from(v: Vec<u32>) -> Self {$/;"	P	implementation:IndexVec
from	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn from(v: Vec<usize>) -> Self {$/;"	P	implementation:IndexVec
from	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/context.rs	/^    fn from(mut ctx: FutharkContext) -> Self {$/;"	P	implementation:futhark_context
from	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^    fn from(err: FutharkError) -> Self {$/;"	P	implementation:Error
from	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^    fn from(integer: u32) -> Self {$/;"	P	implementation:DyadicRational
from	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn from(bigint: BigUint) -> Self {$/;"	P	implementation:U32s
from	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn from(n: u32) -> Self {$/;"	P	implementation:U32s
from	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn from(u32s: U32s<N>) -> Self {$/;"	P	implementation:BigUint
from	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn from(value: U32s<N>) -> Self {$/;"	P	implementation:N
from	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn from(array: [u8; 8]) -> Self {$/;"	P	implementation:BFieldElement
from	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn from(bfe: BFieldElement) -> Self {$/;"	P	implementation:u8
from	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn from(elem: &BFieldElement) -> Self {$/;"	P	implementation:u64
from	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn from(elem: BFieldElement) -> Self {$/;"	P	implementation:u64
from	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn from(value: u32) -> Self {$/;"	P	implementation:BFieldElement
from	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn from(value: u64) -> Self {$/;"	P	implementation:BFieldElement
from	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^    fn from(item: Digest) -> Self {$/;"	P	implementation:BYTES
from	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^    fn from(item: [u8; Digest::BYTES]) -> Self {$/;"	P	implementation:Digest
from	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^    fn from(val: Digest) -> Self {$/;"	P	implementation:Vec
from	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn from(bfe: BFieldElement) -> Self {$/;"	P	implementation:XFieldElement
from	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn from(item: XFieldElement) -> Self {$/;"	P	implementation:Polynomial
from	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn from(poly: Polynomial<BFieldElement>) -> Self {$/;"	P	implementation:XFieldElement
from	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn from(value: u32) -> Self {$/;"	P	implementation:XFieldElement
from	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^    fn from(archive: &mut ArchivalMmr<H>) -> Self {$/;"	P	implementation:MmrAccumulator
from	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^    fn from(mut ammr: ArchivalMmr<H>) -> Self {$/;"	P	implementation:MmrAccumulator
from	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream.rs	/^    fn from(item: Vec<u8>) -> Self {$/;"	P	implementation:ProofStream
from_blake3_digest	/home/einar/triton/twenty-first/twenty-first/src/util_types/blake3_wrapper.rs	/^pub fn from_blake3_digest(digest: &blake3::Hash) -> Digest {$/;"	f
from_complete	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/permutations.rs	/^        fn from_complete(complete_state: CompleteState) -> usize {$/;"	f	function:count
from_constant	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    pub fn from_constant(element: FF, variable_count: usize) -> Self {$/;"	P	implementation:MPolynomial
from_constant	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn from_constant(constant: FF) -> Self {$/;"	P	implementation:Polynomial
from_ctx	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/traits.rs	/^    fn from_ctx(_: T, ctx: *mut futhark_context) -> Self;$/;"	P	interface:FromCtx
from_digests	/home/einar/triton/gpu/ruthark/accelerators/src/kernels/merkle_tree_gpu_kernel.rs	/^    fn from_digests(digests: &[Digest]) -> MerkleTree<H, GpuParallel> {$/;"	P	implementation:GpuParallel
from_digests	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    fn from_digests(digests: &[Digest]) -> MerkleTree<H, CpuParallel> {$/;"	P	implementation:CpuParallel
from_digests	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    pub fn from_digests(leaves: &[Digest], salts: &[Digest]) -> Self {$/;"	f
from_digests	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree_maker.rs	/^    fn from_digests(digests: &[Digest]) -> MerkleTree<H, Self>;$/;"	P	interface:MerkleTreeMaker
from_id	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    fn from_id($/;"	P	implementation:IndividualBenchmark
from_ne_bytes	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    pub fn from_ne_bytes(bytes: &[u8]) -> BFieldElement {$/;"	P	implementation:BFieldElement
from_parameter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    pub fn from_parameter<P: ::std::fmt::Display>(parameter: P) -> BenchmarkId {$/;"	P	implementation:BenchmarkId
from_ptr	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn from_ptr<T>(ctx: T, ptr: *const futhark_bool_1d) -> Self$/;"	P	implementation:Array_bool_1d
from_ptr	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn from_ptr<T>(ctx: T, ptr: *const futhark_i64_1d) -> Self$/;"	P	implementation:Array_i64_1d
from_ptr	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn from_ptr<T>(ctx: T, ptr: *const futhark_u64_1d) -> Self$/;"	P	implementation:Array_u64_1d
from_ptr	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn from_ptr<T>(ctx: T, ptr: *const futhark_u64_2d) -> Self$/;"	P	implementation:Array_u64_2d
from_ptr	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn from_ptr<T>(ctx: T, ptr: *const futhark_u64_3d) -> Self$/;"	P	implementation:Array_u64_3d
from_ptr	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn from_ptr<T>(ctx: T, ptr: *const futhark_u8_2d) -> Self$/;"	P	implementation:Array_u8_2d
from_ptr	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn from_ptr<T>(ctx: T, ptr: *const futhark_u8_3d) -> Self$/;"	P	implementation:Array_u8_3d
from_ratio	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^    pub fn from_ratio(numerator: u32, denominator: u32) -> Result<Bernoulli, BernoulliError> {$/;"	P	implementation:Bernoulli
from_rng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/small.rs	/^    fn from_rng<R: RngCore>(rng: R) -> Result<Self, Error> {$/;"	P	implementation:SmallRng
from_rng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs	/^    fn from_rng<R: RngCore>(rng: R) -> Result<Self, Error> {$/;"	P	implementation:StdRng
from_seed	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/small.rs	/^    fn from_seed(seed: Self::Seed) -> Self {$/;"	P	implementation:SmallRng
from_seed	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs	/^    fn from_seed(seed: Self::Seed) -> Self {$/;"	P	implementation:StdRng
from_seed	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro128plusplus.rs	/^    fn from_seed(seed: [u8; 16]) -> Xoshiro128PlusPlus {$/;"	P	implementation:Xoshiro128PlusPlus
from_seed	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro256plusplus.rs	/^    fn from_seed(seed: [u8; 32]) -> Xoshiro256PlusPlus {$/;"	P	implementation:Xoshiro256PlusPlus
from_str	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^    fn from_str(string: &str) -> Result<Self, Self::Err> {$/;"	P	implementation:Digest
from_vec	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub fn from_vec<T>(ctx: T, arr: &[bool], dim: &[i64]) -> Result<Self>$/;"	P	implementation:Array_bool_1d
from_vec	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub fn from_vec<T>(ctx: T, arr: &[i64], dim: &[i64]) -> Result<Self>$/;"	P	implementation:Array_i64_1d
from_vec	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub fn from_vec<T>(ctx: T, arr: &[u64], dim: &[i64]) -> Result<Self>$/;"	P	implementation:Array_u64_1d
from_vec	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub fn from_vec<T>(ctx: T, arr: &[u64], dim: &[i64]) -> Result<Self>$/;"	P	implementation:Array_u64_2d
from_vec	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub fn from_vec<T>(ctx: T, arr: &[u64], dim: &[i64]) -> Result<Self>$/;"	P	implementation:Array_u64_3d
from_vec	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub fn from_vec<T>(ctx: T, arr: &[u8], dim: &[i64]) -> Result<Self>$/;"	P	implementation:Array_u8_2d
from_vec	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub fn from_vec<T>(ctx: T, arr: &[u8], dim: &[i64]) -> Result<Self>$/;"	P	implementation:Array_u8_3d
from_vecu8	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn from_vecu8(bytes: Vec<u8>) -> Self {$/;"	P	implementation:BFieldElement
from_vecu8	/home/einar/triton/twenty-first/twenty-first/src/shared_math/traits.rs	/^    fn from_vecu8(bytes: Vec<u8>) -> Self;$/;"	P	interface:FromVecu8
from_vecu8	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn from_vecu8(bytes: Vec<u8>) -> Self {$/;"	P	implementation:XFieldElement
fs	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^mod fs;$/;"	n
fscanf	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn fscanf($/;"	f
fscanf1	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn fscanf1($/;"	f
fseek	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn fseek($/;"	f
fseeko	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn fseeko($/;"	f
fsetpos	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn fsetpos(__stream: *mut FILE, __pos: *const fpos_t) -> ::std::os::raw::c_int;$/;"	f
ftell	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn ftell(__stream: *mut FILE) -> ::std::os::raw::c_long;$/;"	f
ftello	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn ftello(__stream: *mut FILE) -> __off_t;$/;"	f
ftrylockfile	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn ftrylockfile(__stream: *mut FILE) -> ::std::os::raw::c_int;$/;"	f
full_id	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    full_id: String,$/;"	m	struct:BenchmarkId
func	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    func: F,$/;"	m	struct:DistMap
function	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/csv_report.rs	/^    function: Option<&'a str>,$/;"	m	struct:CsvRow
function	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    fn function(output_directory: &Path, group_id: &str, function_id: &'a str) -> ReportLink<'a>/;"	P	implementation:ReportLink
function_id	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    function_id: Option<String>,$/;"	m	struct:RawBenchmarkId
function_id	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub function_id: Option<String>,$/;"	m	struct:BenchmarkId
function_ids	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    function_ids: Option<Vec<ReportLink<'a>>>,$/;"	m	struct:BenchmarkGroup
function_name	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    pub(crate) function_name: Option<String>,$/;"	m	struct:BenchmarkId
funlockfile	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn funlockfile(__stream: *mut FILE);$/;"	f
fused	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    fused: Option<bool>,$/;"	m	struct:MergeBy
futhark_bool_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^impl FutharkType for futhark_bool_1d {$/;"	c
futhark_bool_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^impl futhark_bool_1d {$/;"	c
futhark_bool_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub struct futhark_bool_1d {$/;"	s
futhark_context	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub struct futhark_context {$/;"	s
futhark_context	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/context.rs	/^impl From<FutharkContext> for *mut bindings::futhark_context {$/;"	c
futhark_context_clear_caches	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_context_clear_caches(ctx: *mut futhark_context) -> ::std::os::raw::c_int;$/;"	f
futhark_context_config	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub struct futhark_context_config {$/;"	s
futhark_context_config_free	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_context_config_free(cfg: *mut futhark_context_config);$/;"	f
futhark_context_config_new	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_context_config_new() -> *mut futhark_context_config;$/;"	f
futhark_context_config_set_cache_file	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_context_config_set_cache_file($/;"	f
futhark_context_config_set_debugging	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_context_config_set_debugging($/;"	f
futhark_context_config_set_logging	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_context_config_set_logging($/;"	f
futhark_context_config_set_profiling	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_context_config_set_profiling($/;"	f
futhark_context_config_set_tuning_param	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_context_config_set_tuning_param($/;"	f
futhark_context_free	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_context_free(ctx: *mut futhark_context);$/;"	f
futhark_context_get_error	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_context_get_error(ctx: *mut futhark_context) -> *mut ::std::os::raw::c_char;$/;"	f
futhark_context_new	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_context_new(cfg: *mut futhark_context_config) -> *mut futhark_context;$/;"	f
futhark_context_pause_profiling	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_context_pause_profiling(ctx: *mut futhark_context);$/;"	f
futhark_context_report	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_context_report(ctx: *mut futhark_context) -> *mut ::std::os::raw::c_char;$/;"	f
futhark_context_set_logging_file	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_context_set_logging_file(ctx: *mut futhark_context, f: *mut FILE);$/;"	f
futhark_context_sync	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_context_sync(ctx: *mut futhark_context) -> ::std::os::raw::c_int;$/;"	f
futhark_context_unpause_profiling	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_context_unpause_profiling(ctx: *mut futhark_context);$/;"	f
futhark_entry_kernel_histogram	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_entry_kernel_histogram($/;"	f
futhark_entry_kernel_histogram_with_is	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_entry_kernel_histogram_with_is($/;"	f
futhark_entry_kernel_merkle_root_2d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_entry_kernel_merkle_root_2d($/;"	f
futhark_entry_kernel_merkle_root_inplace	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_entry_kernel_merkle_root_inplace($/;"	f
futhark_entry_kernel_padded	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_entry_kernel_padded($/;"	f
futhark_entry_kernel_rescue_prime_hash	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_entry_kernel_rescue_prime_hash($/;"	f
futhark_entry_kernel_rescue_prime_hash_10	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_entry_kernel_rescue_prime_hash_10($/;"	f
futhark_entry_kernel_rescue_prime_hash_varlen	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_entry_kernel_rescue_prime_hash_varlen($/;"	f
futhark_entry_kernel_segmented_reduce	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_entry_kernel_segmented_reduce($/;"	f
futhark_entry_kernel_segmented_reduce_with_flags	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_entry_kernel_segmented_reduce_with_flags($/;"	f
futhark_free_bool_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_free_bool_1d($/;"	f
futhark_free_i64_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_free_i64_1d($/;"	f
futhark_free_u64_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_free_u64_1d($/;"	f
futhark_free_u64_2d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_free_u64_2d($/;"	f
futhark_free_u64_3d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_free_u64_3d($/;"	f
futhark_free_u8_2d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_free_u8_2d($/;"	f
futhark_free_u8_3d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_free_u8_3d($/;"	f
futhark_get_tuning_param_class	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_get_tuning_param_class($/;"	f
futhark_get_tuning_param_count	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_get_tuning_param_count() -> ::std::os::raw::c_int;$/;"	f
futhark_get_tuning_param_name	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_get_tuning_param_name($/;"	f
futhark_i64_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^impl FutharkType for futhark_i64_1d {$/;"	c
futhark_i64_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^impl futhark_i64_1d {$/;"	c
futhark_i64_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub struct futhark_i64_1d {$/;"	s
futhark_new_bool_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_new_bool_1d($/;"	f
futhark_new_i64_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_new_i64_1d($/;"	f
futhark_new_raw_bool_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_new_raw_bool_1d($/;"	f
futhark_new_raw_i64_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_new_raw_i64_1d($/;"	f
futhark_new_raw_u64_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_new_raw_u64_1d($/;"	f
futhark_new_raw_u64_2d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_new_raw_u64_2d($/;"	f
futhark_new_raw_u64_3d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_new_raw_u64_3d($/;"	f
futhark_new_raw_u8_2d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_new_raw_u8_2d($/;"	f
futhark_new_raw_u8_3d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_new_raw_u8_3d($/;"	f
futhark_new_u64_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_new_u64_1d($/;"	f
futhark_new_u64_2d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_new_u64_2d($/;"	f
futhark_new_u64_3d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_new_u64_3d($/;"	f
futhark_new_u8_2d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_new_u8_2d($/;"	f
futhark_new_u8_3d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_new_u8_3d($/;"	f
futhark_shape_bool_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_shape_bool_1d($/;"	f
futhark_shape_i64_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_shape_i64_1d(ctx: *mut futhark_context, arr: *mut futhark_i64_1d) -> *const i/;"	f
futhark_shape_u64_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_shape_u64_1d(ctx: *mut futhark_context, arr: *mut futhark_u64_1d) -> *const i/;"	f
futhark_shape_u64_2d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_shape_u64_2d(ctx: *mut futhark_context, arr: *mut futhark_u64_2d) -> *const i/;"	f
futhark_shape_u64_3d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_shape_u64_3d(ctx: *mut futhark_context, arr: *mut futhark_u64_3d) -> *const i/;"	f
futhark_shape_u8_2d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_shape_u8_2d(ctx: *mut futhark_context, arr: *mut futhark_u8_2d) -> *const i64/;"	f
futhark_shape_u8_3d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_shape_u8_3d(ctx: *mut futhark_context, arr: *mut futhark_u8_3d) -> *const i64/;"	f
futhark_u64_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^impl FutharkType for futhark_u64_1d {$/;"	c
futhark_u64_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^impl futhark_u64_1d {$/;"	c
futhark_u64_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub struct futhark_u64_1d {$/;"	s
futhark_u64_2d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^impl FutharkType for futhark_u64_2d {$/;"	c
futhark_u64_2d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^impl futhark_u64_2d {$/;"	c
futhark_u64_2d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub struct futhark_u64_2d {$/;"	s
futhark_u64_3d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^impl FutharkType for futhark_u64_3d {$/;"	c
futhark_u64_3d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^impl futhark_u64_3d {$/;"	c
futhark_u64_3d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub struct futhark_u64_3d {$/;"	s
futhark_u8_2d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^impl FutharkType for futhark_u8_2d {$/;"	c
futhark_u8_2d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^impl futhark_u8_2d {$/;"	c
futhark_u8_2d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub struct futhark_u8_2d {$/;"	s
futhark_u8_3d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^impl FutharkType for futhark_u8_3d {$/;"	c
futhark_u8_3d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^impl futhark_u8_3d {$/;"	c
futhark_u8_3d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub struct futhark_u8_3d {$/;"	s
futhark_values_bool_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_values_bool_1d($/;"	f
futhark_values_i64_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_values_i64_1d($/;"	f
futhark_values_raw_bool_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_values_raw_bool_1d($/;"	f
futhark_values_raw_i64_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_values_raw_i64_1d($/;"	f
futhark_values_raw_u64_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_values_raw_u64_1d($/;"	f
futhark_values_raw_u64_2d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_values_raw_u64_2d($/;"	f
futhark_values_raw_u64_3d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_values_raw_u64_3d($/;"	f
futhark_values_raw_u8_2d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_values_raw_u8_2d($/;"	f
futhark_values_raw_u8_3d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_values_raw_u8_3d($/;"	f
futhark_values_u64_1d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_values_u64_1d($/;"	f
futhark_values_u64_2d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_values_u64_2d($/;"	f
futhark_values_u64_3d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_values_u64_3d($/;"	f
futhark_values_u8_2d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_values_u8_2d($/;"	f
futhark_values_u8_3d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn futhark_values_u8_3d($/;"	f
fwrite	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn fwrite($/;"	f
fwrite_unlocked	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn fwrite_unlocked($/;"	f
ge_mask	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn ge_mask(self, other: Self) -> Self::Mask;$/;"	P	interface:FloatSIMDUtils
gen	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn gen<T>(&mut self) -> T$/;"	P	interface:Rng
gen_bool	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn gen_bool(&mut self, p: f64) -> bool {$/;"	P	interface:Rng
gen_index	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^fn gen_index<R: Rng + ?Sized>(rng: &mut R, ubound: usize) -> usize {$/;"	f
gen_mpolynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn gen_mpolynomial($/;"	f	module:test_mpolynomials
gen_polynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn gen_polynomial<T: FiniteField>() -> Polynomial<T>$/;"	f	module:test_polynomials
gen_polynomial_non_zero	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn gen_polynomial_non_zero<T: FiniteField>() -> Polynomial<T>$/;"	f	module:test_polynomials
gen_range	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn gen_range<T, R>(&mut self, range: R) -> T$/;"	P	interface:Rng
gen_ratio	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn gen_ratio(&mut self, numerator: u32, denominator: u32) -> bool {$/;"	P	interface:Rng
gen_upolynomials	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn gen_upolynomials($/;"	f	module:test_mpolynomials
generate	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/intersperse.rs	/^    fn generate(&mut self) -> Item {$/;"	P	implementation:F
generate	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/intersperse.rs	/^    fn generate(&mut self) -> Item {$/;"	P	implementation:IntersperseElementSimple
generate	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/intersperse.rs	/^    fn generate(&mut self) -> Item;$/;"	P	interface:IntersperseElement
generate	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    fn generate(&mut self, results: &mut Self::Results) {$/;"	f
generate_plots	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    fn generate_plots($/;"	P	implementation:Html
generate_summary	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    fn generate_summary($/;"	P	implementation:Html
generator	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    pub fn generator() -> Self {$/;"	P	implementation:BFieldElement
get	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub fn get(&self, stat: Statistic) -> &Distribution<f64> {$/;"	P	implementation:ChangeDistributions
get	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub fn get(&self, stat: Statistic) -> &Estimate {$/;"	P	implementation:ChangeEstimates
get	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub fn get(&self, stat: Statistic) -> Option<&Distribution<f64>> {$/;"	P	implementation:Distributions
get	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub fn get(&self, stat: Statistic) -> Option<&Estimate> {$/;"	P	implementation:Estimates
get	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_array.rs	/^    pub fn get(&mut self, index: u128) -> T {$/;"	P	implementation:DatabaseArray
get	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_vector.rs	/^    pub fn get(&mut self, index: u128) -> T {$/;"	P	implementation:DatabaseVector
get_all_leaves	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    pub fn get_all_leaves(&self) -> Vec<Digest> {$/;"	f
get_all_salted_leaves	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    pub fn get_all_salted_leaves(&self) -> Vec<Digest> {$/;"	f
get_archival_mmr_from_digests	/home/einar/triton/twenty-first/twenty-first/src/test_shared/mmr.rs	/^pub fn get_archival_mmr_from_digests<H>(digests: Vec<Digest>) -> ArchivalMmr<H>$/;"	f
get_authentication_path	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    pub fn get_authentication_path(&self, leaf_index: usize) -> Vec<Digest> {$/;"	f
get_authentication_path_and_salt	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    pub fn get_authentication_path_and_salt(&self, index: usize) -> (Vec<Digest>, Digest) {$/;"	f
get_authentication_path_node_indices	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^pub fn get_authentication_path_node_indices($/;"	f
get_authentication_path_node_indices_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^    fn get_authentication_path_node_indices_test() {$/;"	f	module:mmr_test
get_authentication_structure	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    pub fn get_authentication_structure($/;"	f
get_authentication_structure_and_salt	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    pub fn get_authentication_structure_and_salt($/;"	f
get_big_mpol	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn get_big_mpol() -> MPolynomial<BFieldElement> {$/;"	f	module:test_mpolynomials
get_big_mpol_extra_variabel	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn get_big_mpol_extra_variabel() -> MPolynomial<BFieldElement> {$/;"	f	module:test_mpolynomials
get_bit	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn get_bit(&self, bit_index: usize) -> bool {$/;"	P	implementation:U32s
get_bit_set_bit_pbt	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn get_bit_set_bit_pbt() {$/;"	f	module:u32s_tests
get_bit_test	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn get_bit_test() {$/;"	f	module:u32s_tests
get_colinear_y	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn get_colinear_y(p0: (FF, FF), p1: (FF, FF), p2_x: FF) -> FF {$/;"	P	implementation:Polynomial
get_cyclic_group_elements	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn get_cyclic_group_elements(&self, max: Option<usize>) -> Vec<Self> {$/;"	P	implementation:BFieldElement
get_cyclic_group_elements	/home/einar/triton/twenty-first/twenty-first/src/shared_math/traits.rs	/^    fn get_cyclic_group_elements(&self, max: Option<usize>) -> Vec<Self>;$/;"	P	interface:CyclicGroupGenerator
get_cyclic_group_elements	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn get_cyclic_group_elements(&self, max: Option<usize>) -> Vec<Self> {$/;"	P	implementation:XFieldElement
get_direct_path_indices	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^    fn get_direct_path_indices(&self) -> Vec<u128> {$/;"	P	implementation:MmrMembershipProof
get_empty_archival_mmr	/home/einar/triton/twenty-first/twenty-first/src/test_shared/mmr.rs	/^pub fn get_empty_archival_mmr<H: AlgebraicHasher>() -> ArchivalMmr<H> {$/;"	f
get_evaluation_argument	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    fn get_evaluation_argument(&self, idx: usize, round: usize) -> BFieldElement {$/;"	f
get_evaluation_domain	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    pub fn get_evaluation_domain(&self) -> Vec<BFieldElement> {$/;"	f
get_fork_counter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    pub fn get_fork_counter() -> usize {$/;"	f	module:fork
get_heap_size	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^    fn get_heap_size(&self) -> usize {$/;"	P	implementation:Digest
get_height	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    pub fn get_height(&self) -> usize {$/;"	f
get_height_from_data_index	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^fn get_height_from_data_index(data_index: u128) -> u128 {$/;"	f
get_height_from_data_index_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^    fn get_height_from_data_index_test() {$/;"	f	module:mmr_test
get_leaf	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    pub fn get_leaf(&mut self, data_index: u128) -> Digest {$/;"	P	implementation:ArchivalMmr
get_leaf_by_index	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    pub fn get_leaf_by_index(&self, index: usize) -> Digest {$/;"	f
get_leaf_count	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    pub fn get_leaf_count(&self) -> usize {$/;"	f
get_leaves_by_indices	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    pub fn get_leaves_by_indices(&self, leaf_indices: &[usize]) -> Vec<Digest> {$/;"	f
get_minus_17y	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn get_minus_17y() -> MPolynomial<BFieldElement> {$/;"	f	module:test_mpolynomials
get_n_hash_rounds	/home/einar/triton/twenty-first/twenty-first/src/util_types/algebraic_hasher.rs	/^    fn get_n_hash_rounds(seed: &Digest, count: usize) -> Vec<Digest> {$/;"	P	interface:AlgebraicHasher
get_next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lazy_buffer.rs	/^    pub fn get_next(&mut self) -> bool {$/;"	f
get_node_indices	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^    pub fn get_node_indices(&self) -> Vec<u128> {$/;"	P	implementation:MmrMembershipProof
get_node_indices_simple_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^    fn get_node_indices_simple_test() {$/;"	f	module:mmr_membership_proof_test
get_peak_heights	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^pub fn get_peak_heights(leaf_count: u128) -> Vec<u8> {$/;"	f
get_peak_heights_and_peak_node_indices	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^pub fn get_peak_heights_and_peak_node_indices(leaf_count: u128) -> (Vec<u128>, Vec<u128>) {$/;"	f
get_peak_heights_and_peak_node_indices_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^    fn get_peak_heights_and_peak_node_indices_test() {$/;"	f	module:mmr_test
get_peak_index_and_height	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^    fn get_peak_index_and_height(&self) -> (u128, u32) {$/;"	P	implementation:MmrMembershipProof
get_peak_index_simple_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^    fn get_peak_index_simple_test() {$/;"	f	module:mmr_membership_proof_test
get_peaks	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    fn get_peaks(&mut self) -> Vec<Digest> {$/;"	f
get_peaks	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^    fn get_peaks(&mut self) -> Vec<Digest> {$/;"	P	implementation:MmrAccumulator
get_peaks	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_trait.rs	/^    fn get_peaks(&mut self) -> Vec<Digest>;$/;"	P	interface:Mmr
get_peaks_with_heights	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    pub fn get_peaks_with_heights(&mut self) -> Vec<(Digest, u128)> {$/;"	P	implementation:ArchivalMmr
get_point_on_invalid_line_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn get_point_on_invalid_line_test() {$/;"	f	module:test_polynomials
get_point_on_line_prop	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn get_point_on_line_prop<FF: FiniteField>() {$/;"	f	module:test_polynomials
get_point_on_line_tests	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn get_point_on_line_tests() {$/;"	f	module:test_polynomials
get_primitive_root_of_unity_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn get_primitive_root_of_unity_test() {$/;"	f	module:b_prime_field_element_test
get_rands	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^    fn get_rands(length: usize) -> Vec<DyadicRational> {$/;"	f	module:dyadic_rationals_tests
get_read_index	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream.rs	/^    pub fn get_read_index(&self) -> usize {$/;"	P	implementation:ProofStream
get_root	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    pub fn get_root(&self) -> Digest {$/;"	f
get_rounds_count_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    fn get_rounds_count_test() {$/;"	f	module:fri_tests
get_salted_leaf_by_index	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    pub fn get_salted_leaf_by_index(&self, index: usize) -> Digest {$/;"	f
get_salted_leaves_by_indices	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    pub fn get_salted_leaves_by_indices(&self, leaf_indices: &[usize]) -> Vec<Digest> {$/;"	f
get_salts	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    pub fn get_salts(&self) -> &[Digest] {$/;"	f
get_size	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^    fn get_size(&self) -> usize {$/;"	P	implementation:Digest
get_size	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^    pub fn get_size() {$/;"	f	module:digest_tests
get_stack_size	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^    fn get_stack_size() -> usize {$/;"	P	implementation:Digest
get_u32s	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn get_u32s<const N: usize>(count: usize, and_mask: Option<[u32; N]>) -> Vec<U32s<N>> {$/;"	f	module:u32s_tests
get_weight	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        fn get_weight<T>(item: &(u32, T)) -> u32 {$/;"	f	function:test::test_weighted
get_x	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn get_x() -> MPolynomial<BFieldElement> {$/;"	f	module:test_mpolynomials
get_x_field_fri_test_object	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    fn get_x_field_fri_test_object<H>($/;"	f	module:fri_tests
get_x_minus_xz	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn get_x_minus_xz() -> MPolynomial<BFieldElement> {$/;"	f	module:test_mpolynomials
get_x_plus_xz	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn get_x_plus_xz() -> MPolynomial<BFieldElement> {$/;"	f	module:test_mpolynomials
get_x_plus_xz_minus_17y	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn get_x_plus_xz_minus_17y() -> MPolynomial<BFieldElement> {$/;"	f	module:test_mpolynomials
get_x_quartic	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn get_x_quartic() -> MPolynomial<BFieldElement> {$/;"	f	module:test_mpolynomials
get_x_squared	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn get_x_squared() -> MPolynomial<BFieldElement> {$/;"	f	module:test_mpolynomials
get_x_squared_z_squared	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn get_x_squared_z_squared() -> MPolynomial<BFieldElement> {$/;"	f	module:test_mpolynomials
get_xyz	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn get_xyz() -> MPolynomial<BFieldElement> {$/;"	f	module:test_mpolynomials
get_xz	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn get_xz() -> MPolynomial<BFieldElement> {$/;"	f	module:test_mpolynomials
get_y	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn get_y() -> MPolynomial<BFieldElement> {$/;"	f	module:test_mpolynomials
get_z	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn get_z() -> MPolynomial<BFieldElement> {$/;"	f	module:test_mpolynomials
getc	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn getc(__stream: *mut FILE) -> ::std::os::raw::c_int;$/;"	f
getc_unlocked	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn getc_unlocked(__stream: *mut FILE) -> ::std::os::raw::c_int;$/;"	f
getchar	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn getchar() -> ::std::os::raw::c_int;$/;"	f
getchar_unlocked	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn getchar_unlocked() -> ::std::os::raw::c_int;$/;"	f
getdelim	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn getdelim($/;"	f
getline	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn getline($/;"	f
getw	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn getw(__stream: *mut FILE) -> ::std::os::raw::c_int;$/;"	f
gnuplot_backend	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/mod.rs	/^mod gnuplot_backend;$/;"	n
gnuplot_escape	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^fn gnuplot_escape(string: &str) -> String {$/;"	f
gp_offset	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub gp_offset: ::std::os::raw::c_uint,$/;"	m	struct:__va_list_tag
gpu_cpu_roots_agree_test	/home/einar/triton/gpu/ruthark/accelerators/src/kernels/merkle_tree_gpu_kernel.rs	/^    pub fn gpu_cpu_roots_agree_test() {$/;"	f	module:merkle_tree_gpu_tests
gpu_cpu_trees_agree_test	/home/einar/triton/gpu/ruthark/accelerators/src/kernels/merkle_tree_gpu_kernel.rs	/^    pub fn gpu_cpu_trees_agree_test() {$/;"	f	module:merkle_tree_gpu_tests
green	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn green(&self, s: &str) -> String {$/;"	P	implementation:CliReport
group	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/csv_report.rs	/^    group: &'a str,$/;"	m	struct:CsvRow
group	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    fn group(output_directory: &Path, group_id: &'a str) -> ReportLink<'a> {$/;"	P	implementation:ReportLink
group_by	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn group_by<K, F>(self, key: F) -> GroupBy<K, Self, F>$/;"	P	interface:Itertools
group_id	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    group_id: String,$/;"	m	struct:RawBenchmarkId
group_id	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    group_id: String,$/;"	m	struct:SummaryContext
group_id	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub group_id: String,$/;"	m	struct:BenchmarkId
group_key	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    fn group_key(&mut self, client: usize) -> K {$/;"	f
group_map	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod group_map;$/;"	n
group_name	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    group_name: String,$/;"	m	struct:BenchmarkGroup
group_report	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    group_report: ReportLink<'a>,$/;"	m	struct:BenchmarkGroup
group_separator	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn group_separator(&self) {$/;"	P	implementation:BencherReport
group_separator	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn group_separator(&self) {$/;"	P	implementation:CliReport
group_separator	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn group_separator(&self) {}$/;"	P	interface:Report
groupbylazy	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod groupbylazy;$/;"	n
grouping_map	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod grouping_map;$/;"	n
groups	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    groups: Vec<BenchmarkGroup<'a>>,$/;"	m	struct:IndexContext
gt_mask	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn gt_mask(self, other: Self) -> Self::Mask;$/;"	P	interface:FloatSIMDUtils
handled_first	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/with_position.rs	/^    handled_first: bool,$/;"	m	struct:WithPosition
has_left	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/either_or_both.rs	/^    pub fn has_left(&self) -> bool {$/;"	P	implementation:EitherOrBoth
has_right	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/either_or_both.rs	/^    pub fn has_right(&self) -> bool {$/;"	P	implementation:EitherOrBoth
has_unique_elements	/home/einar/triton/twenty-first/twenty-first/src/utils.rs	/^pub fn has_unique_elements<T>(iter: T) -> bool$/;"	f
has_unique_elements_test	/home/einar/triton/twenty-first/twenty-first/src/utils.rs	/^    fn has_unique_elements_test() {$/;"	f	module:test_utils
hash	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn hash<H: Hasher>(&self, state: &mut H) {$/;"	P	implementation:BFieldElement
hash	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn hash<H: std::hash::Hasher>(&self, state: &mut H) {$/;"	P	implementation:MPolynomial
hash	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn hash<H: std::hash::Hasher>(&self, state: &mut H) {$/;"	P	implementation:Polynomial
hash	/home/einar/triton/twenty-first/twenty-first/src/util_types/algebraic_hasher.rs	/^    fn hash<T: Hashable>(item: &T) -> Digest {$/;"	P	interface:AlgebraicHasher
hash_10	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^    pub fn hash_10(input: &[BFieldElement; 10]) -> [BFieldElement; 5] {$/;"	P	implementation:RescuePrimeRegular
hash_10_with_trace	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^    pub fn hash_10_with_trace($/;"	P	implementation:RescuePrimeRegular
hash_pair	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^    fn hash_pair(left: &Digest, right: &Digest) -> Digest {$/;"	P	implementation:RescuePrimeRegular
hash_pair	/home/einar/triton/twenty-first/twenty-first/src/util_types/algebraic_hasher.rs	/^    fn hash_pair(left: &Digest, right: &Digest) -> Digest;$/;"	P	interface:AlgebraicHasher
hash_pair	/home/einar/triton/twenty-first/twenty-first/src/util_types/blake3_wrapper.rs	/^    fn hash_pair(left: &Digest, right: &Digest) -> Digest {$/;"	P	implementation:Hasher
hash_slice	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^    fn hash_slice(elements: &[BFieldElement]) -> Digest {$/;"	P	implementation:RescuePrimeRegular
hash_slice	/home/einar/triton/twenty-first/twenty-first/src/util_types/algebraic_hasher.rs	/^    fn hash_slice(elements: &[BFieldElement]) -> Digest;$/;"	P	interface:AlgebraicHasher
hash_slice	/home/einar/triton/twenty-first/twenty-first/src/util_types/blake3_wrapper.rs	/^    fn hash_slice(elements: &[BFieldElement]) -> Digest {$/;"	P	implementation:Hasher
hash_varlen	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^    pub fn hash_varlen(input: &[BFieldElement]) -> [BFieldElement; 5] {$/;"	P	implementation:RescuePrimeRegular
head	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/kmerge_impl.rs	/^    head: I::Item,$/;"	m	struct:HeadTail
heap	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/kmerge_impl.rs	/^    heap: Vec<HeadTail<I>>,$/;"	m	struct:KMergeBy
heapify	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/kmerge_impl.rs	/^fn heapify<T, S>(data: &mut [T], mut less_than: S)$/;"	f
hidden_export	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs	/^pub mod hidden_export {$/;"	n
hint_total_size	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        hint_total_size: bool,$/;"	m	struct:test::ChunkHintedIterator
hint_total_size	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        hint_total_size: bool,$/;"	m	struct:test::WindowHintedIterator
html	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^mod html;$/;"	n
html	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub(crate) html: Option<Html>,$/;"	m	struct:Reports
i64	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^        let shape_ptr: *const i64 = futhark_bool_1d::shape(ctx, ptr);$/;"	C	method:Array_bool_1d::shape
i64	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^        let shape_ptr: *const i64 = futhark_i64_1d::shape(ctx, ptr);$/;"	C	method:Array_i64_1d::shape
i64	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^        let shape_ptr: *const i64 = futhark_u64_1d::shape(ctx, ptr);$/;"	C	method:Array_u64_1d::shape
i64	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^        let shape_ptr: *const i64 = futhark_u64_2d::shape(ctx, ptr);$/;"	C	method:Array_u64_2d::shape
i64	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^        let shape_ptr: *const i64 = futhark_u64_3d::shape(ctx, ptr);$/;"	C	method:Array_u64_3d::shape
i64	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^        let shape_ptr: *const i64 = futhark_u8_2d::shape(ctx, ptr);$/;"	C	method:Array_u8_2d::shape
i64	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^        let shape_ptr: *const i64 = futhark_u8_3d::shape(ctx, ptr);$/;"	C	method:Array_u8_3d::shape
id	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/mod.rs	/^    pub(crate) id: &'a BenchmarkId,$/;"	m	struct:PlotContext
id	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub fn id(&self) -> &str {$/;"	P	implementation:BenchmarkId
id	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tee.rs	/^    id: bool,$/;"	m	struct:Tee
identity_mul_test	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn identity_mul_test() {$/;"	f	module:u32s_tests
if_exists	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^fn if_exists(output_directory: &Path, path: &Path) -> Option<String> {$/;"	f
ignore_ident	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/impl_macros.rs	/^macro_rules! ignore_ident{$/;"	M
ignore_zero_coefficients_for_total_degree_computation_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn ignore_zero_coefficients_for_total_degree_computation_test() {$/;"	f	module:test_mpolynomials
impl_cons_iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/cons_tuples_impl.rs	/^macro_rules! impl_cons_iter($/;"	M
impl_fill	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^macro_rules! impl_fill {$/;"	M
impl_fill_arrays	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^macro_rules! impl_fill_arrays {$/;"	M
impl_fill_each	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^macro_rules! impl_fill_each {$/;"	M
impl_format	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/format.rs	/^macro_rules! impl_format {$/;"	M
impl_int_from_uint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^macro_rules! impl_int_from_uint {$/;"	M
impl_macros	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod impl_macros;$/;"	n
impl_nzint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^macro_rules! impl_nzint {$/;"	M
impl_tuple_collect	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^macro_rules! impl_tuple_collect {$/;"	M
impl_tuple_combination	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^macro_rules! impl_tuple_combination {$/;"	M
impl_unzip_iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/unziptuple.rs	/^macro_rules! impl_unzip_iter {$/;"	M
impl_weight	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted.rs	/^    macro_rules! impl_weight {$/;"	M	module:alias_method
impl_zip_iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/ziptuple.rs	/^macro_rules! impl_zip_iter {$/;"	M
in_progress	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/multi_product.rs	/^    fn in_progress(&self) -> bool {$/;"	f
incr_decr_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn incr_decr_test() {$/;"	f	module:x_field_element_test
increment	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    pub fn increment(&mut self) {$/;"	P	implementation:BFieldElement
increment	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    pub fn increment(&mut self, index: usize) {$/;"	P	implementation:XFieldElement
index	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^    fn index(&self, i: usize) -> &Label {$/;"	f
index	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    index: Cell<usize>,$/;"	m	struct:GroupBy
index	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    index: Cell<usize>,$/;"	m	struct:IntoChunks
index	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    index: usize,$/;"	m	struct:Chunk
index	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    index: usize,$/;"	m	struct:ChunkIndex
index	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    index: usize,$/;"	m	struct:Group
index	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lazy_buffer.rs	/^    fn index(&self, index: J) -> &Self::Output {$/;"	f
index	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/multipeek_impl.rs	/^    index: usize,$/;"	m	struct:MultiPeek
index	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^        index: N,$/;"	m	struct:sample_efraimidis_spirakis::Element
index	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    pub fn index(&self, index: usize) -> usize {$/;"	P	implementation:IndexVec
index	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^pub mod index;$/;"	n
index_zero_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_vector.rs	/^    fn index_zero_test() {$/;"	f	module:database_vector_tests
indices	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/combinations.rs	/^    indices: Vec<usize>,$/;"	m	struct:Combinations
indices	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/combinations_with_replacement.rs	/^    indices: Vec<usize>,$/;"	m	struct:CombinationsWithReplacement
indices	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    indices: index::IndexVecIntoIter,$/;"	m	struct:SliceChooseIter
individual	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    fn individual(output_directory: &Path, id: &'a BenchmarkId) -> ReportLink<'a> {$/;"	P	implementation:ReportLink
individual_links	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    individual_links: Vec<BenchmarkValueGroup<'a>>,$/;"	m	struct:BenchmarkGroup
inequality	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    inequality: String,$/;"	m	struct:Comparison
info	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/macros_private.rs	/^macro_rules! info {$/;"	M
info	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs	/^macro_rules! info { ($($x:tt)*) => ($/;"	M
init	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^    pub fn init(peaks: Vec<Digest>, leaf_count: u128) -> Self {$/;"	P	implementation:MmrAccumulator
init_and_default_values_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_array.rs	/^    fn init_and_default_values_test() {$/;"	f	module:database_array_tests
inner	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    inner: RefCell<InnerConnection>,$/;"	m	struct:Connection
inner	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/exactly_one_err.rs	/^    inner: I,$/;"	m	struct:ExactlyOneError
inner	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/format.rs	/^    inner: RefCell<Option<(I, F)>>,$/;"	m	struct:FormatWith
inner	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/format.rs	/^    inner: RefCell<Option<I>>,$/;"	m	struct:Format
inner	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    inner: RefCell<GroupInner<K, I, F>>,$/;"	m	struct:GroupBy
inner	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    inner: RefCell<GroupInner<usize, I, ChunkIndex>>,$/;"	m	struct:IntoChunks
inner	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^        fn inner<T, II, FF>(stop: usize, it: &mut II, f: &mut FF) -> State<T>$/;"	f	method:Itertools::tree_fold1
inner	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    inner: R,$/;"	m	struct:ReseedingCore
inner0	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^        fn inner0<T, II, FF>(it: &mut II, f: &mut FF) -> State<T>$/;"	f	method:Itertools::tree_fold1
inner_back	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/flatten_ok.rs	/^    inner_back: Option<T::IntoIter>,$/;"	m	struct:FlattenOk
inner_front	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/flatten_ok.rs	/^    inner_front: Option<T::IntoIter>,$/;"	m	struct:FlattenOk
int_fast16_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type int_fast16_t = ::std::os::raw::c_long;$/;"	t
int_fast32_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type int_fast32_t = ::std::os::raw::c_long;$/;"	t
int_fast64_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type int_fast64_t = ::std::os::raw::c_long;$/;"	t
int_fast8_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type int_fast8_t = ::std::os::raw::c_schar;$/;"	t
int_least16_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type int_least16_t = __int_least16_t;$/;"	t
int_least32_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type int_least32_t = __int_least32_t;$/;"	t
int_least64_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type int_least64_t = __int_least64_t;$/;"	t
int_least8_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type int_least8_t = __int_least8_t;$/;"	t
integer	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/format.rs	/^pub fn integer(n: f64) -> String {$/;"	f
integer	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs	/^mod integer;$/;"	n
interleave	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub fn interleave<I, J>(i: I, j: J) -> Interleave<<I as IntoIterator>::IntoIter, <J as IntoItera/;"	f
interleave	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn interleave<J>(self, other: J) -> Interleave<Self, J::IntoIter>$/;"	P	interface:Itertools
interleave_shortest	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub fn interleave_shortest<I, J>(a: I, b: J) -> InterleaveShortest<I, J>$/;"	f
interleave_shortest	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn interleave_shortest<J>(self, other: J) -> InterleaveShortest<Self, J::IntoIter>$/;"	P	interface:Itertools
internal_merkle_tree	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    internal_merkle_tree: MerkleTree<H, SaltedMaker>,$/;"	m	struct:SaltedMerkleTree
interpolate_pb_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn interpolate_pb_test() {$/;"	f	module:test_polynomials
intersperse	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/free.rs	/^pub fn intersperse<I>(iterable: I, element: I::Item) -> Intersperse<I::IntoIter>$/;"	f
intersperse	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/intersperse.rs	/^pub fn intersperse<I>(iter: I, elt: I::Item) -> Intersperse<I>$/;"	f
intersperse	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn intersperse(self, element: Self::Item) -> Intersperse<Self>$/;"	P	interface:Itertools
intersperse	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod intersperse;$/;"	n
intersperse_with	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/free.rs	/^pub fn intersperse_with<I, F>(iterable: I, element: F) -> IntersperseWith<I::IntoIter, F>$/;"	f
intersperse_with	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/intersperse.rs	/^pub fn intersperse_with<I, ElemF>(iter: I, elt: ElemF) -> IntersperseWith<I, ElemF>$/;"	f
intersperse_with	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn intersperse_with<F>(self, element: F) -> IntersperseWith<Self, F>$/;"	P	interface:Itertools
intmax_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type intmax_t = __intmax_t;$/;"	t
into	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/either_or_both.rs	/^    fn into(self) -> Option<Either<A, B>> {$/;"	P	implementation:EitherOrBoth
into_benchmark_id	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    fn into_benchmark_id(self) -> BenchmarkId {$/;"	P	implementation:BenchmarkId
into_benchmark_id	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    fn into_benchmark_id(self) -> BenchmarkId {$/;"	P	implementation:S
into_benchmark_id	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    fn into_benchmark_id(self) -> BenchmarkId;$/;"	P	interface:IntoBenchmarkId
into_buffer	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^    pub fn into_buffer(self) -> TupleBuffer<T> {$/;"	f
into_ctx	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/traits.rs	/^    fn into_ctx(self, ctx: *mut futhark_context) -> T;$/;"	P	interface:IntoCtx
into_ctx	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/traits.rs	/^    fn into_ctx(self, ctx: *mut futhark_context) -> U {$/;"	f
into_float_with_exponent	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs	/^    fn into_float_with_exponent(self, exponent: i32) -> Self::F;$/;"	P	interface:IntoFloat
into_group_map	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/group_map.rs	/^pub fn into_group_map<I, K, V>(iter: I) -> HashMap<K, Vec<V>>$/;"	f
into_group_map	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn into_group_map<K, V>(self) -> HashMap<K, Vec<V>>$/;"	P	interface:Itertools
into_group_map_by	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/group_map.rs	/^pub fn into_group_map_by<I, K, V>(iter: I, f: impl Fn(&V) -> K) -> HashMap<K, Vec<V>>$/;"	f
into_group_map_by	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn into_group_map_by<K, V, F>(self, f: F) -> HashMap<K, Vec<V>>$/;"	P	interface:Itertools
into_grouping_map	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn into_grouping_map<K, V>(self) -> GroupingMap<Self>$/;"	P	interface:Itertools
into_grouping_map_by	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn into_grouping_map_by<K, V, F>(self, key_mapper: F) -> GroupingMapBy<Self, F>$/;"	P	interface:Itertools
into_inner	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    pub fn into_inner(self) -> T {$/;"	P	implementation:FoldWhile
into_inner	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/with_position.rs	/^    pub fn into_inner(self) -> T {$/;"	P	implementation:Position
into_iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^    fn into_iter(self) -> Iter<'a, A> {$/;"	f
into_iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/rciter_impl.rs	/^    fn into_iter(self) -> RcIter<I> {$/;"	f
into_iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn into_iter(self) -> IndexVecIntoIter {$/;"	P	implementation:IndexVec
into_iter	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^        fn into_iter(self) -> Self::IntoIter {$/;"	P	implementation:proof_stream_typed_tests::TestItem
into_option	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/minmax.rs	/^    pub fn into_option(self) -> Option<(T,T)> {$/;"	P	implementation:MinMaxResult
into_parts	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    pub fn into_parts(self) -> (Option<I::Item>, I) {$/;"	f
into_vec	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    pub fn into_vec(self) -> Vec<usize> {$/;"	P	implementation:IndexVec
intt	/home/einar/triton/twenty-first/twenty-first/src/shared_math/ntt.rs	/^pub fn intt<FF: FiniteField + MulAssign<BFieldElement>>($/;"	f
inverse	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn inverse(&self) -> Self {$/;"	P	implementation:BFieldElement
inverse	/home/einar/triton/twenty-first/twenty-first/src/shared_math/traits.rs	/^    fn inverse(&self) -> Self;$/;"	P	interface:Inverse
inverse	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn inverse(&self) -> Self {$/;"	P	implementation:XFieldElement
inverse_or_zero	/home/einar/triton/twenty-first/twenty-first/src/shared_math/traits.rs	/^    fn inverse_or_zero(&self) -> Self {$/;"	P	interface:Inverse
inverse_or_zero_bfe	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn inverse_or_zero_bfe() {$/;"	f	module:b_prime_field_element_test
inverse_or_zero_xfe	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn inverse_or_zero_xfe() {$/;"	f	module:x_field_element_test
inversion_property_based_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn inversion_property_based_test() {$/;"	f	module:b_prime_field_element_test
inversion_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn inversion_test() {$/;"	f	module:b_prime_field_element_test
iproduct	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^macro_rules! iproduct {$/;"	M
iqr	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/percentiles.rs	/^    pub fn iqr(&self) -> A {$/;"	f
iqr	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/sample.rs	/^    pub fn iqr(&self) -> A$/;"	f
is_benchmark	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/fs.rs	/^    fn is_benchmark(entry: &DirEntry) -> bool {$/;"	f	function:list_existing_benchmarks
is_benchmark	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    pub fn is_benchmark(&self) -> bool {$/;"	P	implementation:Mode
is_both	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/either_or_both.rs	/^    pub fn is_both(&self) -> bool {$/;"	P	implementation:EitherOrBoth
is_dir	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/fs.rs	/^pub fn is_dir<P>(path: &P) -> bool$/;"	f
is_done	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    pub fn is_done(&self) -> bool {$/;"	P	implementation:FoldWhile
is_empty	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn is_empty(&self) -> bool {$/;"	P	implementation:Range
is_empty	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn is_empty(&self) -> bool {$/;"	P	implementation:RangeInclusive
is_empty	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn is_empty(&self) -> bool;$/;"	P	interface:SampleRange
is_empty	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:IndexVec
is_empty	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_vector.rs	/^    pub fn is_empty(&mut self) -> bool {$/;"	P	implementation:DatabaseVector
is_empty	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    fn is_empty(&mut self) -> bool {$/;"	f
is_empty	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^    fn is_empty(&mut self) -> bool {$/;"	P	implementation:MmrAccumulator
is_empty	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_trait.rs	/^    fn is_empty(&mut self) -> bool;$/;"	P	interface:Mmr
is_empty	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:ProofStream
is_empty	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_finite	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn is_finite(self) -> bool;$/;"	P	interface:Float
is_forked	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    fn is_forked(&self, global_fork_counter: usize) -> bool {$/;"	f
is_high	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^    pub fn is_high(&self) -> bool {$/;"	P	implementation:Label
is_infinite	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn is_infinite(self) -> bool;$/;"	P	interface:Float
is_left	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/either_or_both.rs	/^    pub fn is_left(&self) -> bool {$/;"	P	implementation:EitherOrBoth
is_linear	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    fn is_linear(&self) -> bool {$/;"	P	implementation:ActualSamplingMode
is_low	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^    pub fn is_low(&self) -> bool {$/;"	P	implementation:Label
is_mild	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^    pub fn is_mild(&self) -> bool {$/;"	P	implementation:Label
is_nan	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn is_nan(self) -> bool;$/;"	P	interface:Float
is_one	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^    fn is_one(&self) -> bool {$/;"	P	implementation:DyadicRational
is_one	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn is_one(&self) -> bool {$/;"	P	implementation:U32s
is_one	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn is_one(&self) -> bool {$/;"	P	implementation:BFieldElement
is_one	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    pub fn is_one(&self) -> bool {$/;"	P	implementation:MPolynomial
is_one	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn is_one(&self) -> bool {$/;"	P	implementation:Polynomial
is_one	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn is_one(&self) -> bool {$/;"	P	implementation:XFieldElement
is_one_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn is_one_test() {$/;"	f	module:test_mpolynomials
is_outlier	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^    pub fn is_outlier(&self) -> bool {$/;"	P	implementation:Label
is_power_of_two	/home/einar/triton/twenty-first/twenty-first/src/shared_math/other.rs	/^pub fn is_power_of_two<T: Zero + One + Sub<Output = T> + BitAnd<Output = T> + Copy>(n: T) -> boo/;"	f
is_power_of_two_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/other.rs	/^    fn is_power_of_two_test() {$/;"	f	module:test_other
is_right	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/either_or_both.rs	/^    pub fn is_right(&self) -> bool {$/;"	P	implementation:EitherOrBoth
is_right_child_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^    fn is_right_child_test() {$/;"	f	module:mmr_test
is_severe	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^    pub fn is_severe(&self) -> bool {$/;"	P	implementation:Label
is_thumbnail	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/mod.rs	/^    pub(crate) is_thumbnail: bool,$/;"	m	struct:PlotContext
is_x	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn is_x(&self) -> bool {$/;"	P	implementation:Polynomial
is_x_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn is_x_test() {$/;"	f	module:test_polynomials
is_zero	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^    fn is_zero(&self) -> bool {$/;"	P	implementation:DyadicRational
is_zero	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn is_zero(&self) -> bool {$/;"	P	implementation:U32s
is_zero	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn is_zero(&self) -> bool {$/;"	P	implementation:BFieldElement
is_zero	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    pub fn is_zero(&self) -> bool {$/;"	P	implementation:MPolynomial
is_zero	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn is_zero(&self) -> bool {$/;"	P	implementation:Polynomial
is_zero	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn is_zero(&self) -> bool {$/;"	P	implementation:XFieldElement
it	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lazy_buffer.rs	/^    pub it: I,$/;"	m	struct:LazyBuffer
it0	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    it0: I,$/;"	m	struct:InterleaveShortest
it1	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    it1: J,$/;"	m	struct:InterleaveShortest
items	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^    items: Vec<(Item, usize)>,$/;"	m	struct:ProofStream
items_index	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^    items_index: usize,$/;"	m	struct:ProofStream
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/bencher.rs	/^    pub fn iter<O, R, F>(&mut self, mut routine: R)$/;"	P	implementation:AsyncBencher
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/bencher.rs	/^    pub fn iter<O, R>(&mut self, mut routine: R)$/;"	P	implementation:Bencher
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/mod.rs	/^    pub fn iter(&self) -> Pairs<'a, X, Y> {$/;"	P	implementation:Data
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^    iter: slice::Iter<'a, A>,$/;"	m	struct:Iter
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^    pub fn iter(&self) -> Iter<'a, A> {$/;"	f
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^    iter: I,$/;"	m	struct:CoalesceBy
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/map.rs	/^    iter: I,$/;"	m	struct:MapSpecialCase
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    iter: &'a mut I,$/;"	m	struct:TakeWhileRef
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    iter: Fuse<I>,$/;"	m	struct:Step
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:Batching
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:FilterMapOk
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:FilterOk
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:Positions
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:PutBack
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:Tuple1Combination
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:Update
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:WhileSome
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    iter: T::Combination,$/;"	m	struct:TupleCombinations
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/multi_product.rs	/^    iter: I,$/;"	m	struct:MultiProductIter
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/cons_tuples_impl.rs	/^    iter: I,$/;"	m	struct:ConsTuples
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^        pub(crate) iter: I,$/;"	m	struct:private::DuplicatesBy
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/flatten_ok.rs	/^    iter: I,$/;"	m	struct:FlattenOk
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    iter: I,$/;"	m	struct:GroupInner
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/grouping_map.rs	/^    iter: I,$/;"	m	struct:GroupingMap
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/intersperse.rs	/^    iter: Fuse<I>,$/;"	m	struct:IntersperseWith
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/multipeek_impl.rs	/^    iter: Fuse<I>,$/;"	m	struct:MultiPeek
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/pad_tail.rs	/^    iter: Fuse<I>,$/;"	m	struct:PadUsing
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/peek_nth.rs	/^    iter: Fuse<I>,$/;"	m	struct:PeekNth
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/peeking_take_while.rs	/^    iter: &'a mut I,$/;"	m	struct:PeekingTakeWhile
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/process_results_impl.rs	/^    iter: I,$/;"	m	struct:ProcessResults
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/put_back_n_impl.rs	/^    iter: I,$/;"	m	struct:PutBackN
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tee.rs	/^    iter: I,$/;"	m	struct:TeeBuffer
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^    iter: Fuse<I>,$/;"	m	struct:Tuples
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^    iter: I,$/;"	m	struct:TupleWindows
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^    iter: Take<TupleWindows<Cycle<I>, T>>,$/;"	m	struct:CircularTupleWindows
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/unique_impl.rs	/^    iter: I,$/;"	m	struct:UniqueBy
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/unique_impl.rs	/^    iter: UniqueBy<I, I::Item, ()>,$/;"	m	struct:Unique
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    pub fn iter(&self) -> IndexVecIter<'_> {$/;"	P	implementation:IndexVec
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        iter: I,$/;"	m	struct:test::ChunkHintedIterator
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        iter: I,$/;"	m	struct:test::UnhintedIterator
iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        iter: I,$/;"	m	struct:test::WindowHintedIterator
iter_batched	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/bencher.rs	/^    pub fn iter_batched<I, O, S, R, F>(&mut self, mut setup: S, mut routine: R, size: BatchSize)$/;"	P	implementation:AsyncBencher
iter_batched	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/bencher.rs	/^    pub fn iter_batched<I, O, S, R>(&mut self, mut setup: S, mut routine: R, size: BatchSize)$/;"	P	implementation:Bencher
iter_batched_ref	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/bencher.rs	/^    pub fn iter_batched_ref<I, O, S, R, F>(&mut self, mut setup: S, mut routine: R, size: BatchS/;"	P	implementation:AsyncBencher
iter_batched_ref	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/bencher.rs	/^    pub fn iter_batched_ref<I, O, S, R>(&mut self, mut setup: S, mut routine: R, size: BatchSize/;"	P	implementation:Bencher
iter_count	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/format.rs	/^pub fn iter_count(iterations: u64) -> String {$/;"	f
iter_counts	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub fn iter_counts(&self) -> &Sample<f64> {$/;"	P	implementation:MeasurementData
iter_custom	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/bencher.rs	/^    pub fn iter_custom<R, F>(&mut self, mut routine: R)$/;"	P	implementation:AsyncBencher
iter_custom	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/bencher.rs	/^    pub fn iter_custom<R>(&mut self, mut routine: R)$/;"	P	implementation:Bencher
iter_orig	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/multi_product.rs	/^    iter_orig: I,$/;"	m	struct:MultiProductIter
iter_with_large_drop	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/bencher.rs	/^    pub fn iter_with_large_drop<O, R, F>(&mut self, mut routine: R)$/;"	P	implementation:AsyncBencher
iter_with_large_drop	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/bencher.rs	/^    pub fn iter_with_large_drop<O, R>(&mut self, mut routine: R)$/;"	P	implementation:Bencher
iter_with_large_setup	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/bencher.rs	/^    pub fn iter_with_large_setup<I, O, S, R, F>(&mut self, setup: S, routine: R)$/;"	P	implementation:AsyncBencher
iter_with_setup	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/bencher.rs	/^    pub fn iter_with_setup<I, O, S, R, F>(&mut self, setup: S, routine: R)$/;"	P	implementation:AsyncBencher
iter_with_setup	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/bencher.rs	/^    pub fn iter_with_setup<I, O, S, R>(&mut self, setup: S, routine: R)$/;"	P	implementation:Bencher
iterate	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/multi_product.rs	/^    fn iterate(&mut self) {$/;"	f
iterate	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/sources.rs	/^pub fn iterate<St, F>(initial_value: St, f: F) -> Iterate<St, F>$/;"	f
iterate_last	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/multi_product.rs	/^    fn iterate_last($/;"	f
iterated	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/bencher.rs	/^    pub(crate) iterated: bool,         \/\/ Have we iterated this benchmark?$/;"	m	struct:Bencher
iteration_count	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/csv_report.rs	/^    iteration_count: u64,$/;"	m	struct:CsvRow
iteration_counts	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    pub(crate) fn iteration_counts($/;"	P	implementation:ActualSamplingMode
iteration_times	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/iteration_times.rs	/^pub(crate) fn iteration_times($/;"	f
iteration_times	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^    fn iteration_times(&mut self, ctx: PlotContext<'_>, data: PlotData<'_>) {$/;"	P	implementation:Gnuplot
iteration_times	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^mod iteration_times;$/;"	n
iteration_times	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/mod.rs	/^    fn iteration_times(&mut self, ctx: PlotContext<'_>, data: PlotData<'_>);$/;"	P	interface:Plotter
iteration_times	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/mod.rs	/^    fn iteration_times(&mut self, ctx: PlotContext<'_>, data: PlotData<'_>) {$/;"	P	implementation:PlottersBackend
iteration_times	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/mod.rs	/^mod iteration_times;$/;"	n
iteration_times_comparison	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/iteration_times.rs	/^pub(crate) fn iteration_times_comparison($/;"	f
iteration_times_comparison_figure	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/iteration_times.rs	/^fn iteration_times_comparison_figure($/;"	f
iteration_times_comparison_figure	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/iteration_times.rs	/^pub(crate) fn iteration_times_comparison_figure($/;"	f
iteration_times_comparison_small	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/iteration_times.rs	/^pub(crate) fn iteration_times_comparison_small($/;"	f
iteration_times_figure	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/iteration_times.rs	/^fn iteration_times_figure($/;"	f
iteration_times_figure	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/iteration_times.rs	/^pub(crate) fn iteration_times_figure($/;"	f
iteration_times_small	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/iteration_times.rs	/^pub(crate) fn iteration_times_small($/;"	f
iters	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/bencher.rs	/^    pub(crate) iters: u64,             \/\/ Number of times to iterate this benchmark$/;"	m	struct:Bencher
iters	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    iters: Vec<f64>,$/;"	m	struct:SavedSample
iters_per_batch	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    fn iters_per_batch(self, iters: u64) -> u64 {$/;"	P	implementation:BatchSize
izip	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^macro_rules! izip {$/;"	M
join	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/free.rs	/^pub fn join<I>(iterable: I, sep: &str) -> String$/;"	f
join	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn join(&mut self, sep: &str) -> String$/;"	P	interface:Itertools
k	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/combinations.rs	/^    pub fn k(&self) -> usize { self.indices.len() }$/;"	P	implementation:Combinations
k_smallest	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/k_smallest.rs	/^pub(crate) fn k_smallest<T: Ord, I: Iterator<Item = T>>(mut iter: I, k: usize) -> BinaryHeap<T> /;"	f
k_smallest	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn k_smallest(self, k: usize) -> VecIntoIter<Self::Item>$/;"	P	interface:Itertools
k_smallest	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod k_smallest;$/;"	n
kde	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^mod kde;$/;"	n
kde	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/mod.rs	/^pub mod kde;$/;"	n
kernel	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/kde/mod.rs	/^    kernel: K,$/;"	m	struct:Kde
kernel	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/kde/mod.rs	/^pub mod kernel;$/;"	n
kernel_histogram	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^pub fn kernel_histogram(&mut self, in0: Array_u64_2d, in1: Array_u64_3d, in2: Array_u8_2d, in3: /;"	P	implementation:FutharkContext
kernel_histogram_with_is	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^pub fn kernel_histogram_with_is(&mut self, in0: Array_u64_2d, in1: Array_u64_3d, in2: Array_u8_2/;"	P	implementation:FutharkContext
kernel_merkle_root_2d	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^pub fn kernel_merkle_root_2d(&mut self, in0: Array_u64_2d, ) -> Result<(Array_u64_1d)>$/;"	P	implementation:FutharkContext
kernel_merkle_root_inplace	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^pub fn kernel_merkle_root_inplace(&mut self, in0: Array_u64_1d, ) -> Result<(Array_u64_1d)>$/;"	P	implementation:FutharkContext
kernel_padded	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^pub fn kernel_padded(&mut self, in0: Array_u64_2d, in1: Array_u64_3d, in2: Array_u8_3d, in3: Arr/;"	P	implementation:FutharkContext
kernel_rescue_prime_hash	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^pub fn kernel_rescue_prime_hash(&mut self, in0: Array_u64_1d, ) -> Result<(Array_u64_1d)>$/;"	P	implementation:FutharkContext
kernel_rescue_prime_hash_10	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^pub fn kernel_rescue_prime_hash_10(&mut self, in0: Array_u64_1d, ) -> Result<(Array_u64_1d)>$/;"	P	implementation:FutharkContext
kernel_rescue_prime_hash_varlen	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^pub fn kernel_rescue_prime_hash_varlen(&mut self, in0: Array_u64_1d, ) -> Result<(Array_u64_1d)>$/;"	P	implementation:FutharkContext
kernel_segmented_reduce	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^pub fn kernel_segmented_reduce(&mut self, in0: Array_u64_2d, in1: Array_u64_3d, in2: Array_u8_2d/;"	P	implementation:FutharkContext
kernel_segmented_reduce_with_flags	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^pub fn kernel_segmented_reduce_with_flags(&mut self, in0: Array_u64_2d, in1: Array_u64_3d, in2: /;"	P	implementation:FutharkContext
kernels	/home/einar/triton/gpu/ruthark/accelerators/src/lib.rs	/^pub mod kernels;$/;"	n
key	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^        fn key(self) -> K {$/;"	P	implementation:private::KeyValue
key	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^        fn key(self) -> K;$/;"	P	interface:private::KeyXorValue
key	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^        fn key(self) -> V {$/;"	P	implementation:private::JustValue
key	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    key: F,$/;"	m	struct:GroupInner
key	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    key: usize,$/;"	m	struct:ChunkIndex
key	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^        key: f64,$/;"	m	struct:sample_efraimidis_spirakis::Element
key_method	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^        key_method: F,$/;"	m	struct:private::Meta
key_ref	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^        fn key_ref(&self) -> &K {$/;"	P	implementation:private::KeyValue
key_ref	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^        fn key_ref(&self) -> &K;$/;"	P	interface:private::KeyXorValue
key_ref	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^        fn key_ref(&self) -> &V {$/;"	P	implementation:private::JustValue
kmerge	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/kmerge_impl.rs	/^pub fn kmerge<I>(iterable: I) -> KMerge<<I::Item as IntoIterator>::IntoIter>$/;"	f
kmerge	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn kmerge(self) -> KMerge<<Self::Item as IntoIterator>::IntoIter>$/;"	P	interface:Itertools
kmerge_by	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/kmerge_impl.rs	/^pub fn kmerge_by<I, F>(iterable: I, mut less_than: F)$/;"	f
kmerge_by	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn kmerge_by<F>(self, first: F)$/;"	P	interface:Itertools
kmerge_impl	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod kmerge_impl;$/;"	n
kmerge_pred	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/kmerge_impl.rs	/^    fn kmerge_pred(&mut self, a: &T, b: &T) -> bool {$/;"	P	implementation:F
kmerge_pred	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/kmerge_impl.rs	/^    fn kmerge_pred(&mut self, a: &T, b: &T) -> bool {$/;"	P	implementation:KMergeByLt
kmerge_pred	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/kmerge_impl.rs	/^    fn kmerge_pred(&mut self, a: &T, b: &T) -> bool;$/;"	P	interface:KMergePredicate
lagrange_interpolate	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn lagrange_interpolate(domain: &[FF], values: &[FF]) -> Self {$/;"	P	implementation:Polynomial
lagrange_interpolate_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn lagrange_interpolate_test() {$/;"	f	module:test_polynomials
lagrange_interpolate_zipped	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn lagrange_interpolate_zipped(points: &[(FF, FF)]) -> Self {$/;"	P	implementation:Polynomial
lanes	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn lanes() -> usize {$/;"	P	interface:FloatAsSIMD
last	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^    last: Option<T>,$/;"	m	struct:CoalesceBy
last	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    fn last(self) -> Option<Self::Item> {$/;"	f
last	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/multi_product.rs	/^    fn last(self) -> Option<Self::Item> {$/;"	f
last	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/merge_join.rs	/^    fn last(mut self) -> Option<Self::Item> {$/;"	f
last	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^    last: Option<T>,$/;"	m	struct:TupleWindows
lazy_buffer	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod lazy_buffer;$/;"	n
leading_coefficient	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn leading_coefficient(&self) -> Option<FF> {$/;"	P	implementation:Polynomial
leading_coefficient_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn leading_coefficient_test() {$/;"	f	module:test_polynomials
leaf_count	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^    leaf_count: u128,$/;"	m	struct:MmrAccumulator
leaf_count_to_node_count	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^pub fn leaf_count_to_node_count(leaf_count: u128) -> u128 {$/;"	f
leaf_count_to_node_count_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^    fn leaf_count_to_node_count_test() {$/;"	f	module:mmr_test
leaf_index_to_peak_index	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^pub fn leaf_index_to_peak_index(leaf_index: u128, leaf_count: u128) -> Option<u128> {$/;"	f
leaf_index_to_peak_index_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^    fn leaf_index_to_peak_index_test() {$/;"	f	module:mmr_test
left	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/either_or_both.rs	/^    pub fn left(self) -> Option<A> {$/;"	P	implementation:EitherOrBoth
left	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/merge_join.rs	/^    left: PutBack<Fuse<I>>,$/;"	m	struct:MergeJoinBy
left_and_then	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/either_or_both.rs	/^    pub fn left_and_then<F, L>(self, f: F) -> EitherOrBoth<L, B>$/;"	P	implementation:EitherOrBoth
left_child	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^pub fn left_child(node_index: u128, height: u128) -> u128 {$/;"	f
left_shift_push	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^    fn left_shift_push(&mut self, item: Self::Item);$/;"	P	interface:TupleCollect
left_sibling	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^pub fn left_sibling(node_index: u128, height: u128) -> u128 {$/;"	f
left_sibling_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^    fn left_sibling_test() {$/;"	f	module:mmr_test
leftmost_ancestor	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^pub fn leftmost_ancestor(node_index: u128) -> (u128, u128) {$/;"	f
leftmost_ancestor_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^    fn leftmost_ancestor_test() {$/;"	f	module:mmr_test
legendre_symbol	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    pub fn legendre_symbol(&self) -> i8 {$/;"	P	implementation:BFieldElement
len	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/mod.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Data
len	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lazy_buffer.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:IndexVec
len	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:SliceChooseIter
len	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_vector.rs	/^    pub fn len(&mut self) -> u128 {$/;"	P	implementation:DatabaseVector
len	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:ProofStream
len	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^    pub fn len(&self) -> usize {$/;"	f
length	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    pub length: usize,$/;"	m	struct:FriDomain
less_than	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/kmerge_impl.rs	/^    less_than: F,$/;"	m	struct:KMergeBy
lift	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    pub fn lift(&self) -> XFieldElement {$/;"	P	implementation:BFieldElement
lift	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    pub fn lift($/;"	P	implementation:MPolynomial
lift_property_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn lift_property_test() {$/;"	f	module:b_prime_field_element_test
lift_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn lift_test() {$/;"	f	module:test_mpolynomials
line_chart	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    line_chart: Option<String>,$/;"	m	struct:SummaryContext
line_comparison	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^    fn line_comparison($/;"	P	implementation:Gnuplot
line_comparison	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/summary.rs	/^pub fn line_comparison($/;"	f
line_comparison	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/mod.rs	/^    fn line_comparison($/;"	P	interface:Plotter
line_comparison	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/mod.rs	/^    fn line_comparison($/;"	P	implementation:PlottersBackend
line_comparison	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/summary.rs	/^pub fn line_comparison($/;"	f
line_comparison_path	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/mod.rs	/^    pub fn line_comparison_path(&self) -> PathBuf {$/;"	P	implementation:PlotContext
line_comparison_series_data	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/summary.rs	/^fn line_comparison_series_data<'a>($/;"	f
list_existing_benchmarks	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/fs.rs	/^pub fn list_existing_benchmarks<P>(directory: &P) -> Result<Vec<BenchmarkId>>$/;"	f
load	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/fs.rs	/^pub fn load<A, P: ?Sized>(path: &P) -> Result<A>$/;"	f
load_baseline	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    load_baseline: Option<String>,$/;"	m	struct:Criterion
load_summary_data	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    fn load_summary_data<'a>($/;"	P	implementation:Html
log_2_ceil	/home/einar/triton/twenty-first/twenty-first/src/shared_math/other.rs	/^pub fn log_2_ceil(x: u128) -> u64 {$/;"	f
log_2_ceil_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/other.rs	/^    fn log_2_ceil_test() {$/;"	f	module:test_other
log_2_floor	/home/einar/triton/twenty-first/twenty-first/src/shared_math/other.rs	/^pub fn log_2_floor(x: u128) -> u64 {$/;"	f
log_error	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/error.rs	/^pub(crate) fn log_error(e: &Error) {$/;"	f
log_if_err	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/macros_private.rs	/^macro_rules! log_if_err {$/;"	M
lookup_buffer	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    fn lookup_buffer(&mut self, client: usize) -> Option<I::Item> {$/;"	f
low	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    low: X,$/;"	m	struct:UniformFloat
low	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    low: X,$/;"	m	struct:UniformInt
lower	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    lower: String,$/;"	m	struct:ConfidenceInterval
lower_bound	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub lower_bound: f64,$/;"	m	struct:ConfidenceInterval
macros	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^mod macros;$/;"	n
macros_private	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^mod macros_private;$/;"	n
mad	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    mad: ConfidenceInterval,$/;"	m	struct:Context
make	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^        fn make(&mut self, v: V) -> Self::Container {$/;"	P	implementation:private::ById
make	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^        fn make(&mut self, v: V) -> Self::Container {$/;"	f	module:private
make	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^        fn make(&mut self, value: V) -> Self::Container;$/;"	P	interface:private::KeyMethod
make_filename_safe	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^pub fn make_filename_safe(string: &str) -> String {$/;"	f
make_populated_archival_mmr	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^    fn make_populated_archival_mmr<H: AlgebraicHasher>($/;"	f	module:mmr_membership_proof_test
make_salted_merkle_tree	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    fn make_salted_merkle_tree<H: AlgebraicHasher>($/;"	f	module:merkle_tree_test
make_salted_merkle_tree_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    fn make_salted_merkle_tree_test<H: AlgebraicHasher>($/;"	f	module:merkle_tree_test
mantissa	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^    mantissa: BigUint,$/;"	m	struct:DyadicRational
map	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/kde/mod.rs	/^    pub fn map(&self, xs: &[A]) -> Box<[A]> {$/;"	f
map	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^mod map;$/;"	n
map	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    fn map<F, S>(self, func: F) -> DistMap<Self, F, T, S>$/;"	P	interface:Distribution
map_any	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/either_or_both.rs	/^    pub fn map_any<F, L, G, R>(self, f: F, g: G) -> EitherOrBoth<L, R>$/;"	P	implementation:EitherOrBoth
map_into	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/map.rs	/^pub fn map_into<I, R>(iter: I) -> MapInto<I, R> {$/;"	f
map_into	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn map_into<R>(self) -> MapInto<Self, R>$/;"	P	interface:Itertools
map_left	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/either_or_both.rs	/^    pub fn map_left<F, M>(self, f: F) -> EitherOrBoth<M, B>$/;"	P	implementation:EitherOrBoth
map_ok	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/map.rs	/^pub fn map_ok<I, F, T, U, E>(iter: I, f: F) -> MapOk<I, F>$/;"	f
map_ok	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn map_ok<F, T, U, E>(self, f: F) -> MapOk<Self, F>$/;"	P	interface:Itertools
map_results	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn map_results<F, T, U, E>(self, f: F) -> MapOk<Self, F>$/;"	P	interface:Itertools
map_right	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/either_or_both.rs	/^    pub fn map_right<F, M>(self, f: F) -> EitherOrBoth<A, M>$/;"	P	implementation:EitherOrBoth
max	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/sample.rs	/^    pub fn max(&self) -> A {$/;"	f
max	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/free.rs	/^pub fn max<I>(iterable: I) -> Option<I::Item>$/;"	f
max	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/grouping_map.rs	/^    pub fn max(self) -> HashMap<K, V>$/;"	f
max	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/size_hint.rs	/^pub fn max(a: SizeHint, b: SizeHint) -> SizeHint {$/;"	f
max_align_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub struct max_align_t {$/;"	s
max_by	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/grouping_map.rs	/^    pub fn max_by<F>(self, mut compare: F) -> HashMap<K, V>$/;"	f
max_by_key	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/grouping_map.rs	/^    pub fn max_by_key<F, CK>(self, mut f: F) -> HashMap<K, V>$/;"	f
max_exponent	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    pub fn max_exponent(&self) -> u8 {$/;"	P	implementation:MPolynomial
max_set	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn max_set(self) -> Vec<Self::Item>$/;"	P	interface:Itertools
max_set_by	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn max_set_by<F>(self, mut compare: F) -> Vec<Self::Item>$/;"	P	interface:Itertools
max_set_by_key	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn max_set_by_key<K, F>(self, key: F) -> Vec<Self::Item>$/;"	P	interface:Itertools
max_set_impl	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/extrema_set.rs	/^pub fn max_set_impl<I, K, F, Compare>(it: I, key_for: F, mut compare: Compare) -> Vec<I::Item>$/;"	f
mean	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub mean: Distribution<f64>,$/;"	m	struct:ChangeDistributions
mean	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub mean: Distribution<f64>,$/;"	m	struct:Distributions
mean	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub mean: Estimate,$/;"	m	struct:ChangeEstimates
mean	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub mean: Estimate,$/;"	m	struct:Estimates
mean	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub mean: f64,$/;"	m	struct:ChangePointEstimates
mean	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub mean: f64,$/;"	m	struct:PointEstimates
mean	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    mean: ConfidenceInterval,$/;"	m	struct:Context
mean	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/sample.rs	/^    pub fn mean(&self) -> A {$/;"	f
measurement	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/bencher.rs	/^    pub(crate) measurement: &'a M,     \/\/ Reference to the measurement object$/;"	m	struct:Bencher
measurement	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    measurement: M,$/;"	m	struct:Criterion
measurement	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^pub mod measurement;$/;"	n
measurement_complete	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/csv_report.rs	/^    fn measurement_complete($/;"	P	implementation:FileCsvReport
measurement_complete	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    fn measurement_complete($/;"	P	implementation:Html
measurement_complete	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn measurement_complete($/;"	P	implementation:BencherReport
measurement_complete	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn measurement_complete($/;"	P	implementation:CliReport
measurement_complete	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn measurement_complete($/;"	P	interface:Report
measurement_start	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn measurement_start($/;"	P	implementation:BencherReport
measurement_start	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn measurement_start($/;"	P	implementation:CliReport
measurement_start	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn measurement_start($/;"	P	interface:Report
measurement_time	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark.rs	/^    pub measurement_time: Duration,$/;"	m	struct:BenchmarkConfig
measurement_time	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark.rs	/^    pub(crate) measurement_time: Option<Duration>,$/;"	m	struct:PartialBenchmarkConfig
measurement_time	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    pub fn measurement_time(&mut self, dur: Duration) -> &mut Self {$/;"	P	implementation:BenchmarkGroup
measurement_time	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    measurement_time: Duration,$/;"	m	struct:BenchmarkConfig
measurement_time	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    pub fn measurement_time(mut self, dur: Duration) -> Criterion<M> {$/;"	P	implementation:Criterion
measurements	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/mod.rs	/^    pub(crate) measurements: &'a MeasurementData<'a>,$/;"	m	struct:PlotData
median	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub median: Distribution<f64>,$/;"	m	struct:ChangeDistributions
median	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub median: Distribution<f64>,$/;"	m	struct:Distributions
median	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub median: Estimate,$/;"	m	struct:ChangeEstimates
median	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub median: Estimate,$/;"	m	struct:Estimates
median	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub median: f64,$/;"	m	struct:ChangePointEstimates
median	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub median: f64,$/;"	m	struct:PointEstimates
median	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    median: ConfidenceInterval,$/;"	m	struct:Context
median	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/percentiles.rs	/^    pub fn median(&self) -> A {$/;"	f
median	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/sample.rs	/^    pub fn median(&self) -> A$/;"	f
median_abs_dev	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub median_abs_dev: Distribution<f64>,$/;"	m	struct:Distributions
median_abs_dev	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub median_abs_dev: Estimate,$/;"	m	struct:Estimates
median_abs_dev	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub median_abs_dev: f64,$/;"	m	struct:PointEstimates
median_abs_dev	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/sample.rs	/^    pub fn median_abs_dev(&self, median: Option<A>) -> A$/;"	f
median_abs_dev_pct	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/sample.rs	/^    pub fn median_abs_dev_pct(&self) -> A$/;"	f
merge	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub fn merge<I, J>(i: I, j: J) -> Merge<<I as IntoIterator>::IntoIter, <J as IntoIterator>::Into/;"	f
merge	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn merge<J>(self, other: J) -> Merge<Self, J::IntoIter>$/;"	P	interface:Itertools
merge_by	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn merge_by<J, F>(self, other: J, is_first: F) -> MergeBy<Self, J::IntoIter, F>$/;"	P	interface:Itertools
merge_by_new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub fn merge_by_new<I, J, F>(a: I, b: J, cmp: F) -> MergeBy<I::IntoIter, J::IntoIter, F>$/;"	f
merge_join	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod merge_join;$/;"	n
merge_join_by	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn merge_join_by<J, F>(self, other: J, cmp_fn: F) -> MergeJoinBy<Self, J::IntoIter, F>$/;"	P	interface:Itertools
merge_join_by	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/merge_join.rs	/^pub fn merge_join_by<I, J, F>(left: I, right: J, cmp_fn: F)$/;"	f
merge_pred	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    fn merge_pred(&mut self, a: &T, b: &T) -> bool {$/;"	P	implementation:F
merge_pred	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    fn merge_pred(&mut self, a: &T, b: &T) -> bool {$/;"	P	implementation:MergeLte
merge_pred	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    fn merge_pred(&mut self, a: &T, b: &T) -> bool;$/;"	P	interface:MergePredicate
merkle_tree	/home/einar/triton/twenty-first/twenty-first/src/util_types.rs	/^pub mod merkle_tree;$/;"	n
merkle_tree_get_authentication_path_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    fn merkle_tree_get_authentication_path_test() {$/;"	f	module:merkle_tree_test
merkle_tree_gpu_kernel	/home/einar/triton/gpu/ruthark/accelerators/src/kernels/mod.rs	/^pub mod merkle_tree_gpu_kernel;$/;"	n
merkle_tree_gpu_tests	/home/einar/triton/gpu/ruthark/accelerators/src/kernels/merkle_tree_gpu_kernel.rs	/^pub(crate) mod merkle_tree_gpu_tests {$/;"	n
merkle_tree_maker	/home/einar/triton/twenty-first/twenty-first/src/util_types.rs	/^pub mod merkle_tree_maker;$/;"	n
merkle_tree_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^mod merkle_tree_test {$/;"	n
merkle_tree_test_32	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    fn merkle_tree_test_32() {$/;"	f	module:merkle_tree_test
merkle_tree_verify_authentication_structure_degenerate_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    fn merkle_tree_verify_authentication_structure_degenerate_test() {$/;"	f	module:merkle_tree_test
merkle_tree_verify_authentication_structure_equivalence_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    fn merkle_tree_verify_authentication_structure_equivalence_test() {$/;"	f	module:merkle_tree_test
merkle_tree_verify_authentication_structure_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    fn merkle_tree_verify_authentication_structure_test() {$/;"	f	module:merkle_tree_test
message	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^    pub message: String,$/;"	m	struct:ProofStreamError
meta	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^        pub(crate) meta: Meta<Key, F>,$/;"	m	struct:private::DuplicatesBy
min	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/sample.rs	/^    pub fn min(&self) -> A {$/;"	f
min	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/free.rs	/^pub fn min<I>(iterable: I) -> Option<I::Item>$/;"	f
min	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/grouping_map.rs	/^    pub fn min(self) -> HashMap<K, V>$/;"	f
min	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/pad_tail.rs	/^    min: usize,$/;"	m	struct:PadUsing
min	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/size_hint.rs	/^pub fn min(a: SizeHint, b: SizeHint) -> SizeHint {$/;"	f
min_by	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/grouping_map.rs	/^    pub fn min_by<F>(self, mut compare: F) -> HashMap<K, V>$/;"	f
min_by_key	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/grouping_map.rs	/^    pub fn min_by_key<F, CK>(self, mut f: F) -> HashMap<K, V>$/;"	f
min_set	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn min_set(self) -> Vec<Self::Item>$/;"	P	interface:Itertools
min_set_by	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn min_set_by<F>(self, mut compare: F) -> Vec<Self::Item>$/;"	P	interface:Itertools
min_set_by_key	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn min_set_by_key<K, F>(self, key: F) -> Vec<Self::Item>$/;"	P	interface:Itertools
min_set_impl	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/extrema_set.rs	/^pub fn min_set_impl<I, K, F, Compare>($/;"	f
minmax	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/grouping_map.rs	/^    pub fn minmax(self) -> HashMap<K, MinMaxResult<V>>$/;"	f
minmax	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn minmax(self) -> MinMaxResult<Self::Item>$/;"	P	interface:Itertools
minmax	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod minmax;$/;"	n
minmax_by	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/grouping_map.rs	/^    pub fn minmax_by<F>(self, mut compare: F) -> HashMap<K, MinMaxResult<V>>$/;"	f
minmax_by	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn minmax_by<F>(self, mut compare: F) -> MinMaxResult<Self::Item>$/;"	P	interface:Itertools
minmax_by_key	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/grouping_map.rs	/^    pub fn minmax_by_key<F, CK>(self, mut f: F) -> HashMap<K, MinMaxResult<V>>$/;"	f
minmax_by_key	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn minmax_by_key<K, F>(self, key: F) -> MinMaxResult<Self::Item>$/;"	P	interface:Itertools
minmax_impl	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/minmax.rs	/^pub fn minmax_impl<I, K, F, L>(mut it: I, mut key_for: F,$/;"	f
mixed	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/mod.rs	/^pub mod mixed;$/;"	n
mkdirp	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/fs.rs	/^pub fn mkdirp<P>(path: &P) -> Result<()>$/;"	f
mmr	/home/einar/triton/twenty-first/twenty-first/src/test_shared.rs	/^pub mod mmr;$/;"	n
mmr	/home/einar/triton/twenty-first/twenty-first/src/util_types.rs	/^pub mod mmr;$/;"	n
mmr_accumulator	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr.rs	/^pub mod mmr_accumulator;$/;"	n
mmr_append_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    fn mmr_append_test() {$/;"	f	module:mmr_test
mmr_membership_proof	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr.rs	/^pub mod mmr_membership_proof;$/;"	n
mmr_membership_proof_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^mod mmr_membership_proof_test {$/;"	n
mmr_prove_verify_leaf_mutation_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    fn mmr_prove_verify_leaf_mutation_test() {$/;"	f	module:mmr_test
mmr_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^mod mmr_test {$/;"	n
mmr_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^mod mmr_test {$/;"	n
mmr_trait	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr.rs	/^pub mod mmr_trait;$/;"	n
mmra_serialization_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^    fn mmra_serialization_test() {$/;"	f	module:accumulator_mmr_tests
mock	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs	/^pub mod mock; \/\/ Public so we don't export `StepRng` directly, making it a bit$/;"	n
mod_div_simple_test_0	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn mod_div_simple_test_0() {$/;"	f	module:u32s_tests
mod_div_simple_test_1	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn mod_div_simple_test_1() {$/;"	f	module:u32s_tests
mod_div_simple_test_2	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn mod_div_simple_test_2() {$/;"	f	module:u32s_tests
mod_pow	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    pub fn mod_pow(&self, exp: u64) -> Self {$/;"	P	implementation:BFieldElement
mod_pow	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn mod_pow(&self, pow: BigInt) -> Self {$/;"	P	implementation:Polynomial
mod_pow_arbitrary_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn mod_pow_arbitrary_test() {$/;"	f	module:test_polynomials
mod_pow_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn mod_pow_test() {$/;"	f	module:b_prime_field_element_test
mod_pow_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn mod_pow_test() {$/;"	f	module:test_polynomials
mod_pow_u32	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn mod_pow_u32(&self, exp: u32) -> Self {$/;"	P	implementation:BFieldElement
mod_pow_u32	/home/einar/triton/twenty-first/twenty-first/src/shared_math/traits.rs	/^    fn mod_pow_u32(&self, exp: u32) -> Self;$/;"	P	interface:ModPowU32
mod_pow_u32	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn mod_pow_u32(&self, exp: u32) -> Self {$/;"	P	implementation:XFieldElement
mod_pow_u64	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn mod_pow_u64(&self, pow: u64) -> Self {$/;"	P	implementation:BFieldElement
mod_pow_u64	/home/einar/triton/twenty-first/twenty-first/src/shared_math/traits.rs	/^    fn mod_pow_u64(&self, pow: u64) -> Self;$/;"	P	interface:ModPowU64
mod_pow_u64	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn mod_pow_u64(&self, exponent: u64) -> Self {$/;"	P	implementation:XFieldElement
mod_reduce	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn mod_reduce(x: u128) -> u64 {$/;"	P	implementation:BFieldElement
mode	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    mode: Mode,$/;"	m	struct:Criterion
mode	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    mode: UniformDurationMode,$/;"	m	struct:UniformDuration
move_last	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        fn move_last(slice: &mut [usize], pos: usize) {$/;"	f	function:test::test_shuffle
mpoly_hashing_is_deterministic_and_unaffected_by_zero_coefficients_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn mpoly_hashing_is_deterministic_and_unaffected_by_zero_coefficients_test() {$/;"	f	module:test_mpolynomials
mpolynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math.rs	/^pub mod mpolynomial;$/;"	n
mpolys_in_hash_set_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn mpolys_in_hash_set_test() {$/;"	f	module:test_mpolynomials
mul	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/size_hint.rs	/^pub fn mul(a: SizeHint, b: SizeHint) -> SizeHint {$/;"	f
mul	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^    fn mul(self, rhs: DyadicRational) -> Self::Output {$/;"	P	implementation:DyadicRational
mul	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn mul(self, other: U32s<N>) -> U32s<N> {$/;"	P	implementation:U32s
mul	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn mul(self, other: Self) -> Self {$/;"	P	implementation:BFieldElement
mul	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn mul(self, other: Self) -> Self {$/;"	P	implementation:MPolynomial
mul	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn mul(self, other: Self) -> Self {$/;"	P	implementation:Polynomial
mul	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn mul(self, other: BFieldElement) -> Self {$/;"	P	implementation:XFieldElement
mul	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn mul(self, other: Self) -> Self {$/;"	P	implementation:XFieldElement
mul	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn mul(self, other: XFieldElement) -> XFieldElement {$/;"	P	implementation:BFieldElement
mul_assign	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn mul_assign(&mut self, rhs: Self) {$/;"	P	implementation:BFieldElement
mul_assign	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn mul_assign(&mut self, rhs: Self) {$/;"	P	implementation:MPolynomial
mul_assign	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn mul_assign(&mut self, rhs: BFieldElement) {$/;"	P	implementation:XFieldElement
mul_assign	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn mul_assign(&mut self, rhs: Self) {$/;"	P	implementation:XFieldElement
mul_commutative_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn mul_commutative_test() {$/;"	f	module:test_mpolynomials
mul_commutative_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn mul_commutative_test() {$/;"	f	module:test_polynomials
mul_div_pbt	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn mul_div_pbt() {$/;"	f	module:b_prime_field_element_test
mul_div_plus_minus_neg_property_based_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn mul_div_plus_minus_neg_property_based_test() {$/;"	f	module:b_prime_field_element_test
mul_div_pow_two_pbt	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^    fn mul_div_pow_two_pbt() {$/;"	f	module:dyadic_rationals_tests
mul_overflow_test_0	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn mul_overflow_test_0() {$/;"	f	module:u32s_tests
mul_overflow_test_1	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn mul_overflow_test_1() {$/;"	f	module:u32s_tests
mul_scalar	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/size_hint.rs	/^pub fn mul_scalar(sh: SizeHint, x: usize) -> SizeHint {$/;"	f
mul_simple_test	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^    fn mul_simple_test() {$/;"	f	module:dyadic_rationals_tests
mul_test_with_carry	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn mul_test_with_carry() {$/;"	f	module:u32s_tests
mul_two	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    pub fn mul_two(&mut self) {$/;"	P	implementation:U32s
mul_two_div_two_pbt	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn mul_two_div_two_pbt() {$/;"	f	module:u32s_tests
mul_two_div_two_simple_test	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn mul_two_div_two_simple_test() {$/;"	f	module:u32s_tests
mul_xfe_with_bfe_pbt	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn mul_xfe_with_bfe_pbt() {$/;"	f	module:x_field_element_test
multi_cartesian_product	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/multi_product.rs	/^pub fn multi_cartesian_product<H>(iters: H) -> MultiProduct<<H::Item as IntoIterator>::IntoIter>$/;"	f
multi_cartesian_product	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn multi_cartesian_product(self) -> MultiProduct<<Self::Item as IntoIterator>::IntoIter>$/;"	P	interface:Itertools
multi_product	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^mod multi_product;$/;"	n
multipeek	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn multipeek(self) -> MultiPeek<Self>$/;"	P	interface:Itertools
multipeek	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/multipeek_impl.rs	/^pub fn multipeek<I>(iterable: I) -> MultiPeek<I::IntoIter>$/;"	f
multipeek_impl	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod multipeek_impl;$/;"	n
multiplicative_inverse_of_p	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn multiplicative_inverse_of_p() {$/;"	f	module:b_prime_field_element_test
multiplicative_inverse_of_zero	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn multiplicative_inverse_of_zero() {$/;"	f	module:b_prime_field_element_test
multiply	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn multiply(self, other: Self) -> Self {$/;"	P	implementation:Polynomial
multiunzip	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn multiunzip<FromI>(self) -> FromI$/;"	P	interface:Itertools
multiunzip	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/unziptuple.rs	/^    fn multiunzip(self) -> FromI;$/;"	P	interface:MultiUnzip
multiunzip	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/unziptuple.rs	/^pub fn multiunzip<FromI, I>(i: I) -> FromI$/;"	f
multizip	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/ziptuple.rs	/^pub fn multizip<T, U>(t: U) -> Zip<T>$/;"	f
mut_with_one_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn mut_with_one_test() {$/;"	f	module:test_mpolynomials
mutate_leaf	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    fn mutate_leaf(&mut self, old_membership_proof: &MmrMembershipProof<H>, new_leaf: &Digest) {$/;"	f
mutate_leaf	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^    fn mutate_leaf(&mut self, old_membership_proof: &MmrMembershipProof<H>, new_leaf: &Digest) {$/;"	P	implementation:MmrAccumulator
mutate_leaf	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_trait.rs	/^    fn mutate_leaf(&mut self, old_membership_proof: &MmrMembershipProof<H>, new_leaf: &Digest);$/;"	P	interface:Mmr
mutate_leaf_archival_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    fn mutate_leaf_archival_test() {$/;"	f	module:mmr_test
mutate_leaf_raw	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    pub fn mutate_leaf_raw(&mut self, data_index: u128, new_leaf: Digest) {$/;"	P	implementation:ArchivalMmr
n	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/combinations.rs	/^    pub fn n(&self) -> usize { self.pool.len() }$/;"	P	implementation:Combinations
n	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/repeatn.rs	/^    n: usize,$/;"	m	struct:RepeatN
name	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    name: &'a str,$/;"	m	struct:ReportLink
name	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    name: String,$/;"	m	struct:IndividualBenchmark
name	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    name: String,$/;"	m	struct:Plot
nanos	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    nanos: u32,$/;"	m	struct:Duration
neg	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn neg(self) -> Self {$/;"	P	implementation:BFieldElement
neg	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn neg(self) -> Self {$/;"	P	implementation:MPolynomial
neg	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn neg(self) -> Self {$/;"	P	implementation:XFieldElement
neg_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn neg_test() {$/;"	f	module:b_prime_field_element_test
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    pub fn new<S: Into<String>, P: ::std::fmt::Display>($/;"	P	implementation:BenchmarkId
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    pub(crate) fn new(criterion: &mut Criterion<M>, group_name: String) -> BenchmarkGroup<'_, M>/;"	P	implementation:BenchmarkGroup
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    pub fn new(mut socket: TcpStream) -> Result<Self, std::io::Error> {$/;"	P	implementation:InnerConnection
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    pub fn new(socket: TcpStream) -> Result<Self, std::io::Error> {$/;"	P	implementation:Connection
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    fn new(name: &str, url: &str) -> Plot {$/;"	P	implementation:Plot
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    fn new(output_directory: &Path, ids: &[&'a BenchmarkId]) -> BenchmarkGroup<'a> {$/;"	P	implementation:BenchmarkGroup
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    pub(crate) fn new(plotter: Box<dyn Plotter>) -> Html {$/;"	P	implementation:Html
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub fn new($/;"	P	implementation:BenchmarkId
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub fn new($/;"	P	implementation:CliReport
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/routine.rs	/^    pub fn new(f: F) -> Function<M, F, T> {$/;"	f
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/mod.rs	/^    pub fn new(xs: &'a [X], ys: &'a [Y]) -> Data<'a, X, Y> {$/;"	f
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/resamples.rs	/^    pub fn new(data: Data<'a, X, Y>) -> Resamples<'a, X, Y> {$/;"	f
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    fn new(size: usize) -> (Vec<A>, Vec<B>) {$/;"	f
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    fn new(size: usize) -> (Vec<A>, Vec<B>, Vec<C>) {$/;"	f
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    fn new(size: usize) -> (Vec<A>, Vec<B>, Vec<C>, Vec<D>) {$/;"	f
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    fn new(size: usize) -> (Vec<A>,) {$/;"	f
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    fn new(size: usize) -> Self;$/;"	P	interface:TupledDistributionsBuilder
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/kde/mod.rs	/^    pub fn new(sample: &'a Sample<A>, kernel: K, bw: Bandwidth) -> Kde<'a, A, K> {$/;"	f
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/resamples.rs	/^    pub fn new(sample: &'a Sample<A>) -> Resamples<'a, A> {$/;"	f
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/sample.rs	/^    pub fn new(slice: &[A]) -> &Sample<A> {$/;"	f
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/multi_product.rs	/^    fn new(iter: I) -> Self {$/;"	f
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^        pub(crate) fn new(iter: I, key_method: F) -> Self {$/;"	P	implementation:private::DuplicatesBy
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/exactly_one_err.rs	/^    pub(crate) fn new(first_two: Option<Either<[I::Item; 2], I::Item>>, inner: I) -> Self {$/;"	f
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    fn new(size: usize) -> Self {$/;"	P	implementation:ChunkIndex
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^pub fn new<K, J, F>(iter: J, f: F) -> GroupBy<K, J::IntoIter, F>$/;"	f
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/grouping_map.rs	/^    pub(crate) fn new(iter: I, key_mapper: F) -> Self {$/;"	P	implementation:MapForGrouping
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/grouping_map.rs	/^pub fn new<I, K, V>(iter: I) -> GroupingMap<I>$/;"	f
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/kmerge_impl.rs	/^    fn new(mut it: I) -> Option<HeadTail<I>> {$/;"	f
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lazy_buffer.rs	/^    pub fn new(it: I) -> LazyBuffer<I> {$/;"	f
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tee.rs	/^pub fn new<I>(iter: I) -> (Tee<I>, Tee<I>)$/;"	f
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^    fn new(buf: T::Buffer) -> Self {$/;"	f
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^    pub fn new(p: f64) -> Result<Bernoulli, BernoulliError> {$/;"	P	implementation:Bernoulli
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs	/^    pub fn new(slice: &'a [T]) -> Result<Self, EmptySlice> {$/;"	P	implementation:Slice
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^            fn new<B1, B2>(low: B1, high: B2) -> Self$/;"	P	implementation:tests::test_custom_uniform::UniformMyF32
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn new<B1, B2>(low: B1, high: B2) -> Self$/;"	P	interface:UniformSampler
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn new<B1, B2>(low_b: B1, high_b: B2) -> Self$/;"	P	implementation:UniformChar
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn new<B1, B2>(low_b: B1, high_b: B2) -> Self$/;"	P	implementation:UniformDuration
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    pub fn new<B1, B2>(low: B1, high: B2) -> Uniform<X>$/;"	P	implementation:Uniform
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted.rs	/^        pub fn new(_weights: Vec<W>) -> Result<Self, WeightedError> {$/;"	P	implementation:alias_method::WeightedIndex
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^    pub fn new<I>(weights: I) -> Result<WeightedIndex<X>, WeightedError>$/;"	P	implementation:WeightedIndex
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^    pub fn new(r: R) -> ReadRng<R> {$/;"	P	implementation:ReadRng
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    fn new(rng: R, threshold: u64, reseeder: Rsdr) -> Self {$/;"	f
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    pub fn new(rng: R, threshold: u64, reseeder: Rsdr) -> Self {$/;"	f
new	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs	/^    pub fn new(initial: u64, increment: u64) -> Self {$/;"	P	implementation:StepRng
new	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^   unsafe fn new<C>(ctx: C, arr: &[bool], dim: &[i64]) -> *const Self$/;"	P	implementation:futhark_bool_1d
new	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^   unsafe fn new<C>(ctx: C, arr: &[i64], dim: &[i64]) -> *const Self$/;"	P	implementation:futhark_i64_1d
new	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^   unsafe fn new<C>(ctx: C, arr: &[u64], dim: &[i64]) -> *const Self$/;"	P	implementation:futhark_u64_1d
new	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^   unsafe fn new<C>(ctx: C, arr: &[u64], dim: &[i64]) -> *const Self$/;"	P	implementation:futhark_u64_2d
new	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^   unsafe fn new<C>(ctx: C, arr: &[u64], dim: &[i64]) -> *const Self$/;"	P	implementation:futhark_u64_3d
new	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^   unsafe fn new<C>(ctx: C, arr: &[u8], dim: &[i64]) -> *const Self$/;"	P	implementation:futhark_u8_2d
new	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^   unsafe fn new<C>(ctx: C, arr: &[u8], dim: &[i64]) -> *const Self$/;"	P	implementation:futhark_u8_3d
new	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/context.rs	/^    pub fn new() -> Result<Self> {$/;"	P	implementation:FutharkContext
new	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^    pub(crate) fn new(ctx: *mut bindings::futhark_context) -> Self {$/;"	P	implementation:FutharkError
new	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^    pub fn new(mantissa: BigUint, exponent: u32) -> Self {$/;"	P	implementation:DyadicRational
new	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    pub fn new(values: [u32; N]) -> Self {$/;"	P	implementation:U32s
new	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    pub const fn new(value: u64) -> Self {$/;"	P	implementation:BFieldElement
new	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    pub fn new($/;"	f
new	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn new(coefficients: Vec<FF>) -> Self {$/;"	P	implementation:Polynomial
new	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^    pub fn new(digest: [BFieldElement; DIGEST_LENGTH]) -> Self {$/;"	P	implementation:Digest
new	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^    fn new() -> RescuePrimeRegularState {$/;"	P	implementation:RescuePrimeRegularState
new	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    pub fn new(coefficients: [BFieldElement; EXTENSION_DEGREE]) -> Self {$/;"	P	implementation:XFieldElement
new	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_array.rs	/^    pub fn new(db: DB) -> Self {$/;"	P	implementation:DatabaseArray
new	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_vector.rs	/^    pub fn new(db: DB) -> Self {$/;"	P	implementation:DatabaseVector
new	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    pub fn new(db: DB) -> Self {$/;"	P	implementation:ArchivalMmr
new	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^    pub fn new(digests: Vec<Digest>) -> Self {$/;"	P	implementation:MmrAccumulator
new	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^    pub fn new(data_index: u128, authentication_path: Vec<Digest>) -> Self {$/;"	P	implementation:MmrMembershipProof
new	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^    pub fn new(message: &str) -> Self {$/;"	P	implementation:ProofStreamError
new_chunks	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^pub fn new_chunks<J>(iter: J, size: usize) -> IntoChunks<J::IntoIter>$/;"	f
new_const	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn new_const(element: FF) -> Self {$/;"	P	implementation:Polynomial
new_const	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    pub fn new_const(element: BFieldElement) -> Self {$/;"	P	implementation:XFieldElement
new_format	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/format.rs	/^pub fn new_format<I, F>(iter: I, separator: &str, f: F) -> FormatWith<'_, I, F>$/;"	f
new_format_default	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/format.rs	/^pub fn new_format_default<I>(iter: I, separator: &str) -> Format<'_, I>$/;"	f
new_from_usize	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn new_from_usize(&self, value: usize) -> Self {$/;"	P	implementation:BFieldElement
new_from_usize	/home/einar/triton/twenty-first/twenty-first/src/shared_math/traits.rs	/^    fn new_from_usize(&self, value: usize) -> Self;$/;"	P	interface:New
new_from_usize	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn new_from_usize(&self, value: usize) -> Self {$/;"	P	implementation:XFieldElement
new_inclusive	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^            fn new_inclusive<B1, B2>(low: B1, high: B2) -> Self$/;"	P	implementation:tests::test_custom_uniform::UniformMyF32
new_inclusive	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn new_inclusive<B1, B2>(low: B1, high: B2) -> Self$/;"	P	interface:UniformSampler
new_inclusive	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn new_inclusive<B1, B2>(low_b: B1, high_b: B2) -> Self$/;"	P	implementation:UniformChar
new_inclusive	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn new_inclusive<B1, B2>(low_b: B1, high_b: B2) -> Self$/;"	P	implementation:UniformDuration
new_inclusive	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    pub fn new_inclusive<B1, B2>(low: B1, high: B2) -> Uniform<X>$/;"	P	implementation:Uniform
new_rng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/rand_util.rs	/^pub fn new_rng() -> Rng {$/;"	f
new_u64	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    pub fn new_u64(coeffs: [u64; EXTENSION_DEGREE]) -> Self {$/;"	P	implementation:XFieldElement
new_with_prefix	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream.rs	/^    pub fn new_with_prefix(prefix: &[u8]) -> Self {$/;"	P	implementation:ProofStream
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/mod.rs	/^    fn next(&mut self) -> Option<(&'a X, &'a Y)> {$/;"	P	implementation:Pairs
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/resamples.rs	/^    pub fn next(&mut self) -> Data<'_, X, Y> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^    fn next(&mut self) -> Option<(A, Label)> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/resamples.rs	/^    pub fn next(&mut self) -> &Sample<A> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/map.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:Tuple1Combination
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/multi_product.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/combinations.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/combinations_with_replacement.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^        fn next(&mut self) -> Option<Self::Item> {$/;"	f	module:private
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/exactly_one_err.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/flatten_ok.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/grouping_map.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/intersperse.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/kmerge_impl.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/kmerge_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/merge_join.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/multipeek_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/pad_tail.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/peek_nth.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/peeking_take_while.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/permutations.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/powerset.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/process_results_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/put_back_n_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:PutBackN
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/rciter_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/repeatn.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/sources.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tee.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/unique_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/with_position.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:WithPosition
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/zip_eq_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/zip_longest.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    fn next(&mut self) -> Option<T> {$/;"	f
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:IndexVecIntoIter
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn next(&mut self) -> Option<usize> {$/;"	P	implementation:IndexVecIter
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:test::ChunkHintedIterator
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:test::UnhintedIterator
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:test::WindowHintedIterator
next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:SliceChooseIter
next_and_previous_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn next_and_previous_test() {$/;"	f	module:b_prime_field_element_test
next_back	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/map.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^        fn next_back(&mut self) -> Option<Self::Item> {$/;"	f	module:private
next_back	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/flatten_ok.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/pad_tail.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/rciter_impl.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/repeatn.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/unique_impl.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/zip_longest.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_element	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    fn next_element(&mut self) -> Option<I::Item> {$/;"	f
next_tuple	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn next_tuple<T>(&mut self) -> Option<T>$/;"	P	interface:Itertools
next_u32	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	P	implementation:ReadRng
next_u32	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	f
next_u32	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	P	implementation:StepRng
next_u32	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/small.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	P	implementation:SmallRng
next_u32	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	P	implementation:StdRng
next_u32	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/thread.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	P	implementation:ThreadRng
next_u32	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro128plusplus.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	P	implementation:Xoshiro128PlusPlus
next_u32	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro256plusplus.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	P	implementation:Xoshiro256PlusPlus
next_u64	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	P	implementation:ReadRng
next_u64	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	f
next_u64	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	P	implementation:StepRng
next_u64	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/small.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	P	implementation:SmallRng
next_u64	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	P	implementation:StdRng
next_u64	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/thread.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	P	implementation:ThreadRng
next_u64	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro128plusplus.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	P	implementation:Xoshiro128PlusPlus
next_u64	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro256plusplus.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	P	implementation:Xoshiro256PlusPlus
no_function	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    pub(crate) fn no_function() -> BenchmarkId {$/;"	P	implementation:BenchmarkId
no_function_with_input	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    pub(crate) fn no_function_with_input<P: ::std::fmt::Display>(parameter: P) -> BenchmarkId {$/;"	P	implementation:BenchmarkId
node_index_to_data_index	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^pub fn node_index_to_data_index(node_index: u128) -> Option<u128> {$/;"	f
node_index_to_data_index_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^    fn node_index_to_data_index_test() {$/;"	f	module:mmr_test
node_indices_added_by_append	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^pub fn node_indices_added_by_append(old_leaf_count: u128) -> Vec<u128> {$/;"	f
node_indices_added_by_append_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^    fn node_indices_added_by_append_test() {$/;"	f	module:mmr_test
nodes	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    pub nodes: Vec<Digest>,$/;"	m	struct:MerkleTree
noise_threshold	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark.rs	/^    pub noise_threshold: f64,$/;"	m	struct:BenchmarkConfig
noise_threshold	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark.rs	/^    pub(crate) noise_threshold: Option<f64>,$/;"	m	struct:PartialBenchmarkConfig
noise_threshold	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    pub fn noise_threshold(&mut self, threshold: f64) -> &mut Self {$/;"	P	implementation:BenchmarkGroup
noise_threshold	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    noise_threshold: f64,$/;"	m	struct:BenchmarkConfig
noise_threshold	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    pub fn noise_threshold(mut self, threshold: f64) -> Criterion<M> {$/;"	P	implementation:Criterion
noise_threshold	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub noise_threshold: f64,$/;"	m	struct:ComparisonData
non_leaf_nodes_left	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^fn non_leaf_nodes_left(data_index: u128) -> u128 {$/;"	f
non_leaf_nodes_left_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^    fn non_leaf_nodes_left_test() {$/;"	f	module:mmr_test
none	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn none(self) -> bool {$/;"	P	implementation:bool
none	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn none(self) -> bool;$/;"	P	interface:BoolAsSIMD
normalize	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    pub fn normalize(&mut self) {$/;"	P	implementation:MPolynomial
normalize	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn normalize(&mut self) {$/;"	P	implementation:Polynomial
normalize_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn normalize_test() {$/;"	f	module:test_polynomials
nresamples	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark.rs	/^    pub nresamples: usize,$/;"	m	struct:BenchmarkConfig
nresamples	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark.rs	/^    pub(crate) nresamples: Option<usize>,$/;"	m	struct:PartialBenchmarkConfig
nresamples	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    pub fn nresamples(&mut self, n: usize) -> &mut Self {$/;"	P	implementation:BenchmarkGroup
nresamples	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    nresamples: usize,$/;"	m	struct:BenchmarkConfig
nresamples	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    pub fn nresamples(mut self, n: usize) -> Criterion<M> {$/;"	P	implementation:Criterion
nth	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    fn nth(&mut self, n: usize) -> Option<Self::Item> {$/;"	f
nth	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/merge_join.rs	/^    fn nth(&mut self, mut n: usize) -> Option<Self::Item> {$/;"	f
ntt	/home/einar/triton/twenty-first/twenty-first/src/shared_math.rs	/^pub mod ntt;$/;"	n
ntt	/home/einar/triton/twenty-first/twenty-first/src/shared_math/ntt.rs	/^pub fn ntt<FF: FiniteField + MulAssign<BFieldElement>>($/;"	f
num_bits	/home/einar/triton/twenty-first/twenty-first/src/shared_math/other.rs	/^const fn num_bits<T>() -> u64 {$/;"	f
num_items	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^    fn num_items() -> usize;$/;"	P	interface:TupleCollect
num_rounds	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    fn num_rounds(&self) -> (u8, u32) {$/;"	f
off_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type off_t = __off_t;$/;"	t
offset	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    offset: u32,$/;"	m	struct:UniformDuration
offset	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    pub offset: BFieldElement,$/;"	m	struct:FriDomain
oldest_buffered_group	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    oldest_buffered_group: usize,$/;"	m	struct:GroupInner
omega	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    pub omega: BFieldElement,$/;"	m	struct:FriDomain
one	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn one() -> Self {$/;"	P	implementation:u32
one	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn one() -> Self {$/;"	P	implementation:usize
one	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn one() -> Self;$/;"	P	interface:UInt
one	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^    fn one() -> Self {$/;"	P	implementation:DyadicRational
one	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn one() -> Self {$/;"	P	implementation:U32s
one	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn one() -> Self {$/;"	P	implementation:BFieldElement
one	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn one() -> Self {$/;"	P	implementation:Polynomial
one	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn one() -> Self {$/;"	P	implementation:XFieldElement
one_input_mmr_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    fn one_input_mmr_test() {$/;"	f	module:mmr_test
one_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn one_test() {$/;"	f	module:test_polynomials
one_zero_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn one_zero_test() {$/;"	f	module:x_field_element_test
open_memstream	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn open_memstream($/;"	f
or	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/either_or_both.rs	/^    pub fn or(self, l: A, r: B) -> (A, B) {$/;"	P	implementation:EitherOrBoth
or_default	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/either_or_both.rs	/^    pub fn or_default(self) -> (A, B)$/;"	P	implementation:EitherOrBoth
or_else	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/either_or_both.rs	/^    pub fn or_else<L: FnOnce() -> A, R: FnOnce() -> B>(self, l: L, r: R) -> (A, B) {$/;"	P	implementation:EitherOrBoth
other	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs	/^mod other;$/;"	n
other	/home/einar/triton/twenty-first/twenty-first/src/shared_math.rs	/^pub mod other;$/;"	n
outliers	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub fn outliers(&self, sample: &LabeledSample<'_, f64>) {$/;"	P	implementation:CliReport
outliers	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/mod.rs	/^pub mod outliers;$/;"	n
output_directory	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    output_directory: PathBuf,$/;"	m	struct:Criterion
output_directory	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    pub fn output_directory(mut self, path: &Path) -> Criterion<M> {$/;"	P	implementation:Criterion
output_directory	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub output_directory: PathBuf,$/;"	m	struct:ReportContext
overflow_arg_area	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub overflow_arg_area: *mut ::std::os::raw::c_void,$/;"	m	struct:__va_list_tag
owner	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tee.rs	/^    owner: bool,$/;"	m	struct:TeeBuffer
p_int	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^    p_int: u64,$/;"	m	struct:Bernoulli
p_value	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    p_value: String,$/;"	m	struct:Comparison
p_value	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub p_value: f64,$/;"	m	struct:ComparisonData
p_value	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/mod.rs	/^    pub fn p_value(&self, t: A, tails: &Tails) -> A {$/;"	f
pad_tail	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod pad_tail;$/;"	n
pad_using	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn pad_using<F>(self, min: usize, f: F) -> PadUsing<Self, F>$/;"	P	interface:Itertools
pad_using	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/pad_tail.rs	/^pub fn pad_using<I, F>(iter: I, min: usize, filler: F) -> PadUsing<I, F>$/;"	f
panic_on_index_out_of_range_empty_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_array.rs	/^    fn panic_on_index_out_of_range_empty_test() {$/;"	f	module:database_array_tests
panic_on_index_out_of_range_empty_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_vector.rs	/^    fn panic_on_index_out_of_range_empty_test() {$/;"	f	module:database_vector_tests
panic_on_index_out_of_range_length_one_set_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_array.rs	/^    fn panic_on_index_out_of_range_length_one_set_test() {$/;"	f	module:database_array_tests
panic_on_index_out_of_range_length_one_set_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_vector.rs	/^    fn panic_on_index_out_of_range_length_one_set_test() {$/;"	f	module:database_vector_tests
panic_on_index_out_of_range_length_one_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_vector.rs	/^    fn panic_on_index_out_of_range_length_one_test() {$/;"	f	module:database_vector_tests
panic_when_one_is_not_one	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn panic_when_one_is_not_one() {$/;"	f	module:test_polynomials
parameter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    pub(crate) parameter: Option<String>,$/;"	m	struct:BenchmarkId
parent	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    parent: &'a GroupBy<K, I, F>,$/;"	m	struct:Group
parent	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    parent: &'a GroupBy<K, I, F>,$/;"	m	struct:Groups
parent	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    parent: &'a IntoChunks<I>,$/;"	m	struct:Chunk
parent	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    parent: &'a IntoChunks<I>,$/;"	m	struct:Chunks
parent	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^pub fn parent(node_index: u128) -> u128 {$/;"	f
parse_opt	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^        fn parse_opt(os: &Option<&str>) -> Option<f64> {$/;"	f	method:BenchmarkGroup::new
partial_cmp	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^        fn partial_cmp(&self, other: &Self) -> Option<core::cmp::Ordering> {$/;"	P	implementation:sample_efraimidis_spirakis::Element
partial_cmp	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^    fn partial_cmp(&self, other: &Self) -> Option<std::cmp::Ordering> {$/;"	P	implementation:DyadicRational
partial_cmp	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn partial_cmp(&self, other: &Self) -> Option<std::cmp::Ordering> {$/;"	P	implementation:U32s
partial_config	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    partial_config: PartialBenchmarkConfig,$/;"	m	struct:BenchmarkGroup
partial_shuffle	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn partial_shuffle<R>($/;"	P	implementation:T
partial_shuffle	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn partial_shuffle<R>($/;"	P	interface:SliceRandom
partition	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^pub fn partition<'a, A: 'a, I, F>(iter: I, mut pred: F) -> usize$/;"	f
partition_map	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn partition_map<A, B, F, L, R>(self, mut predicate: F) -> (A, B)$/;"	P	interface:Itertools
partition_result	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn partition_result<A, B, T, E>(self) -> (A, B)$/;"	P	interface:Itertools
path	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    path: Option<String>,$/;"	m	struct:ReportLink
path	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    path: String,$/;"	m	struct:IndividualBenchmark
pclose	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn pclose(__stream: *mut FILE) -> ::std::os::raw::c_int;$/;"	f
pdf	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^    fn pdf(&mut self, ctx: PlotContext<'_>, data: PlotData<'_>) {$/;"	P	implementation:Gnuplot
pdf	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^mod pdf;$/;"	n
pdf	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/pdf.rs	/^pub(crate) fn pdf($/;"	f
pdf	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/mod.rs	/^    fn pdf(&mut self, ctx: PlotContext<'_>, data: PlotData<'_>);$/;"	P	interface:Plotter
pdf	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/mod.rs	/^    fn pdf(&mut self, ctx: PlotContext<'_>, data: PlotData<'_>) {$/;"	P	implementation:PlottersBackend
pdf	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/mod.rs	/^mod pdf;$/;"	n
pdf	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/pdf.rs	/^pub(crate) fn pdf($/;"	f
pdf_comparison	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/pdf.rs	/^pub(crate) fn pdf_comparison($/;"	f
pdf_comparison_figure	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/pdf.rs	/^fn pdf_comparison_figure($/;"	f
pdf_comparison_figure	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/pdf.rs	/^pub(crate) fn pdf_comparison_figure($/;"	f
pdf_comparison_small	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/pdf.rs	/^pub(crate) fn pdf_comparison_small($/;"	f
pdf_small	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/pdf.rs	/^pub(crate) fn pdf_small($/;"	f
pdf_small	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/pdf.rs	/^pub(crate) fn pdf_small($/;"	f
peaks	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^    peaks: Vec<Digest>,$/;"	m	struct:MmrAccumulator
peek	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/intersperse.rs	/^    peek: Option<I::Item>,$/;"	m	struct:IntersperseWith
peek	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/multipeek_impl.rs	/^    pub fn peek(&mut self) -> Option<&I::Item> {$/;"	P	implementation:MultiPeek
peek	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/peek_nth.rs	/^    pub fn peek(&mut self) -> Option<&I::Item> {$/;"	f
peek_nth	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod peek_nth;$/;"	n
peek_nth	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/peek_nth.rs	/^    pub fn peek_nth(&mut self, n: usize) -> Option<&I::Item> {$/;"	f
peek_nth	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/peek_nth.rs	/^pub fn peek_nth<I>(iterable: I) -> PeekNth<I::IntoIter>$/;"	f
peekable	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/with_position.rs	/^    peekable: Peekable<Fuse<I>>,$/;"	m	struct:WithPosition
peeking_next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/multipeek_impl.rs	/^    fn peeking_next<F>(&mut self, accept: F) -> Option<Self::Item>$/;"	f
peeking_next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/peek_nth.rs	/^    fn peeking_next<F>(&mut self, accept: F) -> Option<Self::Item>$/;"	f
peeking_next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/peeking_take_while.rs	/^    fn peeking_next<F>(&mut self, accept: F) -> Option<Self::Item>$/;"	P	interface:PeekingNext
peeking_next	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/peeking_take_while.rs	/^    fn peeking_next<F>(&mut self, accept: F) -> Option<Self::Item>$/;"	f
peeking_next_by_clone	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/peeking_take_while.rs	/^macro_rules! peeking_next_by_clone {$/;"	M
peeking_take_while	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn peeking_take_while<F>(&mut self, accept: F) -> PeekingTakeWhile<Self, F>$/;"	P	interface:Itertools
peeking_take_while	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod peeking_take_while;$/;"	n
peeking_take_while	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/peeking_take_while.rs	/^pub fn peeking_take_while<I, F>(iter: &mut I, f: F) -> PeekingTakeWhile<I, F>$/;"	f
pending	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^        pending: usize,$/;"	m	struct:private::Meta
percentiles	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/mod.rs	/^mod percentiles;$/;"	n
percentiles	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/sample.rs	/^    pub fn percentiles(&self) -> Percentiles<A>$/;"	f
permutations	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn permutations(self, k: usize) -> Permutations<Self>$/;"	P	interface:Itertools
permutations	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod permutations;$/;"	n
permutations	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/permutations.rs	/^pub fn permutations<I: Iterator>(iter: I, k: usize) -> Permutations<I> {$/;"	f
perror	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn perror(__s: *const ::std::os::raw::c_char);$/;"	f
phantom	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    phantom: ::core::marker::PhantomData<T>,$/;"	m	struct:DistIter
phantom	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    phantom: ::core::marker::PhantomData<fn(T) -> S>,$/;"	m	struct:DistMap
phantom_data	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^    phantom_data: PhantomData<T>$/;"	m	struct:CircularTupleWindows
phase	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    phase: bool, \/\/ false ==> it0, true ==> it1$/;"	m	struct:InterleaveShortest
plot	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^mod plot;$/;"	n
plot_config	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark.rs	/^    pub(crate) plot_config: PlotConfiguration,$/;"	m	struct:PartialBenchmarkConfig
plot_config	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    pub fn plot_config(&mut self, new_config: PlotConfiguration) -> &mut Self {$/;"	P	implementation:BenchmarkGroup
plot_config	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub plot_config: PlotConfiguration,$/;"	m	struct:ReportContext
plotter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    plotter: RefCell<Box<dyn Plotter>>,$/;"	m	struct:Html
plotters_backend	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/mod.rs	/^mod plotters_backend;$/;"	n
plotting_backend	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    pub fn plotting_backend(mut self, backend: PlottingBackend) -> Criterion<M> {$/;"	P	implementation:Criterion
point	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    point: String,$/;"	m	struct:ConfidenceInterval
point_estimate	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub point_estimate: f64,$/;"	m	struct:Estimate
pol_div_bug_detection_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn pol_div_bug_detection_test() {$/;"	f	module:test_polynomials
polynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math.rs	/^pub mod polynomial;$/;"	n
polynomial_are_colinear_3_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn polynomial_are_colinear_3_test() {$/;"	f	module:test_polynomials
polynomial_are_colinear_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn polynomial_are_colinear_test() {$/;"	f	module:test_polynomials
polynomial_are_colinear_test_big	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn polynomial_are_colinear_test_big() {$/;"	f	module:test_polynomials
polynomial_arithmetic_division_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn polynomial_arithmetic_division_test() {$/;"	f	module:test_polynomials
polynomial_arithmetic_property_based_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn polynomial_arithmetic_property_based_test() {$/;"	f	module:test_polynomials
polynomial_arithmetic_property_based_test_big	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn polynomial_arithmetic_property_based_test_big() {$/;"	f	module:test_polynomials
polynomial_display_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn polynomial_display_test() {$/;"	f	module:test_polynomials
polynomial_divide_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn polynomial_divide_test() {$/;"	f	module:test_polynomials
polynomial_shift_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn polynomial_shift_test() {$/;"	f	module:test_polynomials
pool	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/combinations.rs	/^    pool: LazyBuffer<I>,$/;"	m	struct:Combinations
pool	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/combinations_with_replacement.rs	/^    pool: LazyBuffer<I>,$/;"	m	struct:CombinationsWithReplacement
pop	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_vector.rs	/^    pub fn pop(&mut self) -> Option<T> {$/;"	P	implementation:DatabaseVector
popen	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn popen($/;"	f
pos	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/pad_tail.rs	/^    pos: usize,$/;"	m	struct:PadUsing
pos	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/powerset.rs	/^    pos: usize,$/;"	m	struct:Powerset
position_max	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn position_max(self) -> Option<usize>$/;"	P	interface:Itertools
position_max_by	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn position_max_by<F>(self, mut compare: F) -> Option<usize>$/;"	P	interface:Itertools
position_max_by_key	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn position_max_by_key<K, F>(self, mut key: F) -> Option<usize>$/;"	P	interface:Itertools
position_min	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn position_min(self) -> Option<usize>$/;"	P	interface:Itertools
position_min_by	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn position_min_by<F>(self, mut compare: F) -> Option<usize>$/;"	P	interface:Itertools
position_min_by_key	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn position_min_by_key<K, F>(self, mut key: F) -> Option<usize>$/;"	P	interface:Itertools
position_minmax	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn position_minmax(self) -> MinMaxResult<usize>$/;"	P	interface:Itertools
position_minmax_by	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn position_minmax_by<F>(self, mut compare: F) -> MinMaxResult<usize>$/;"	P	interface:Itertools
position_minmax_by_key	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn position_minmax_by_key<K, F>(self, mut key: F) -> MinMaxResult<usize>$/;"	P	interface:Itertools
positions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub fn positions<I, F>(iter: I, f: F) -> Positions<I, F>$/;"	f
positions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn positions<P>(self, predicate: P) -> Positions<Self, P>$/;"	P	interface:Itertools
pow	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    pub fn pow(&self, pow: u8) -> Self {$/;"	P	implementation:MPolynomial
pow_scalar_base	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/size_hint.rs	/^pub fn pow_scalar_base(base: usize, exp: SizeHint) -> SizeHint {$/;"	f
pow_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn pow_test() {$/;"	f	module:test_mpolynomials
power_accumulator	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    pub fn power_accumulator<const N: usize, const M: usize>($/;"	P	implementation:BFieldElement
power_accumulator_simple_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn power_accumulator_simple_test() {$/;"	f	module:b_prime_field_element_test
powers_of_two_below	/home/einar/triton/twenty-first/twenty-first/src/shared_math/other.rs	/^pub fn powers_of_two_below<T>(max: T, bits: u32) -> impl Iterator<Item = T>$/;"	f
powers_of_two_below_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/other.rs	/^    fn powers_of_two_below_test() {$/;"	f	module:test_other
powerset	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn powerset(self) -> Powerset<Self>$/;"	P	interface:Itertools
powerset	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod powerset;$/;"	n
powerset	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/powerset.rs	/^pub fn powerset<I>(src: I) -> Powerset<I>$/;"	f
precalculate_exponents_memoization_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn precalculate_exponents_memoization_test() {$/;"	f	module:test_mpolynomials
precalculate_scalar_exponents	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    pub fn precalculate_scalar_exponents($/;"	P	implementation:MPolynomial
precalculate_scalar_exponents_simple_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn precalculate_scalar_exponents_simple_test() {$/;"	f	module:test_mpolynomials
precalculate_scalar_mod_pows	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    pub fn precalculate_scalar_mod_pows(limit: u8, point: &[FF]) -> HashMap<(usize, u8), FF> {$/;"	P	implementation:MPolynomial
precalculate_symbolic_exponents	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    pub fn precalculate_symbolic_exponents($/;"	P	implementation:MPolynomial
prefill	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lazy_buffer.rs	/^    pub fn prefill(&mut self, len: usize) {$/;"	f
prelude	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs	/^pub mod prelude;$/;"	n
pretty_print_coefficients_generic	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^fn pretty_print_coefficients_generic<FF: FiniteField>(coefficients: &[FF]) -> String {$/;"	f
primitive_root_of_unity	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn primitive_root_of_unity(n: u64) -> Option<BFieldElement> {$/;"	P	implementation:BFieldElement
primitive_root_of_unity	/home/einar/triton/twenty-first/twenty-first/src/shared_math/traits.rs	/^    fn primitive_root_of_unity(n: u64) -> Option<Self>;$/;"	P	interface:PrimitiveRootOfUnity
primitive_root_of_unity	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn primitive_root_of_unity(n: u64) -> Option<XFieldElement> {$/;"	P	implementation:XFieldElement
print_debug	/home/einar/triton/twenty-first/twenty-first/src/timing_reporter.rs	/^    print_debug: bool,$/;"	m	struct:TimingReporter
print_display_bfield_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn print_display_bfield_test() {$/;"	f	module:test_mpolynomials
print_display_xfield_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn print_display_xfield_test() {$/;"	f	module:test_mpolynomials
print_overwritable	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn print_overwritable(&self, s: String) {$/;"	P	implementation:CliReport
printf	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn printf(__format: *const ::std::os::raw::c_char, ...) -> ::std::os::raw::c_int;$/;"	f
private	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^mod private {$/;"	n
private	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^mod private {$/;"	n
process_list	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^    process_list: Vec<Child>,$/;"	m	struct:Gnuplot
process_results	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/process_results_impl.rs	/^pub fn process_results<I, F, T, E, R>(iterable: I, processor: F) -> Result<R, E>$/;"	f
process_results_impl	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod process_results_impl;$/;"	n
product	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/grouping_map.rs	/^    pub fn product(self) -> HashMap<K, V>$/;"	f
product1	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn product1<P>(mut self) -> Option<P>$/;"	P	interface:Itertools
profile	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn profile(&self, _id: &BenchmarkId, _context: &ReportContext, _profile_ns: f64) {}$/;"	P	interface:Report
profile	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn profile(&self, id: &BenchmarkId, _: &ReportContext, warmup_ns: f64) {$/;"	P	implementation:CliReport
profile	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/routine.rs	/^    fn profile($/;"	P	interface:Routine
profile_time	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    pub fn profile_time(mut self, profile_time: Option<Duration>) -> Criterion<M> {$/;"	P	implementation:Criterion
profiler	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    profiler: Box<RefCell<dyn Profiler>>,$/;"	m	struct:Criterion
profiler	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^pub mod profiler;$/;"	n
proof_stream	/home/einar/triton/twenty-first/twenty-first/src/util_types.rs	/^pub mod proof_stream;$/;"	n
proof_stream_typed	/home/einar/triton/twenty-first/twenty-first/src/util_types.rs	/^pub mod proof_stream_typed;$/;"	n
proof_stream_typed_tests	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^mod proof_stream_typed_tests {$/;"	n
property_based_slow_lagrange_interpolation_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn property_based_slow_lagrange_interpolation_test() {$/;"	f	module:test_polynomials
property_based_slow_lagrange_interpolation_test_big	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn property_based_slow_lagrange_interpolation_test_big() {$/;"	f	module:test_polynomials
prove	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    pub fn prove($/;"	f
prove_membership	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    pub fn prove_membership(&mut self, data_index: u128) -> (MmrMembershipProof<H>, Vec<Digest>)/;"	P	implementation:ArchivalMmr
prover_fiat_shamir	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream.rs	/^    pub fn prover_fiat_shamir(&self) -> Digest {$/;"	P	implementation:ProofStream
prover_fiat_shamir	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^    pub fn prover_fiat_shamir(&self) -> Digest {$/;"	f
prover_verifier_fiat_shamir_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^    fn prover_verifier_fiat_shamir_test() {$/;"	f	module:proof_stream_typed_tests
ps_empty_ts	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream.rs	/^    fn ps_empty_ts() {$/;"	f	module:test_proof_stream
ps_enq_deq_enq_deq	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream.rs	/^    fn ps_enq_deq_enq_deq() {$/;"	f	module:test_proof_stream
ps_enqueue_then_dequeue	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream.rs	/^    fn ps_enqueue_then_dequeue() {$/;"	f	module:test_proof_stream
ps_is_fifo_no_lifo	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream.rs	/^    fn ps_is_fifo_no_lifo() {$/;"	f	module:test_proof_stream
ps_test_default_empty_initiation	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream.rs	/^    fn ps_test_default_empty_initiation() {$/;"	f	module:test_proof_stream
ps_thrice_enqueue_then_dequeue	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream.rs	/^    fn ps_thrice_enqueue_then_dequeue() {$/;"	f	module:test_proof_stream
ptr	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    ptr: *const futhark_bool_1d,$/;"	m	struct:Array_bool_1d
ptr	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    ptr: *const futhark_i64_1d,$/;"	m	struct:Array_i64_1d
ptr	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    ptr: *const futhark_u64_1d,$/;"	m	struct:Array_u64_1d
ptr	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    ptr: *const futhark_u64_2d,$/;"	m	struct:Array_u64_2d
ptr	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    ptr: *const futhark_u64_3d,$/;"	m	struct:Array_u64_3d
ptr	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    ptr: *const futhark_u8_2d,$/;"	m	struct:Array_u8_2d
ptr	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    ptr: *const futhark_u8_3d,$/;"	m	struct:Array_u8_3d
ptr	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/context.rs	/^    pub(crate) fn ptr(&mut self) -> *mut bindings::futhark_context {$/;"	P	implementation:FutharkContext
push	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    fn push(&mut self, tuple: (A, B)) {$/;"	f
push	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    fn push(&mut self, tuple: (A, B, C)) {$/;"	f
push	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    fn push(&mut self, tuple: (A, B, C, D)) {$/;"	f
push	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    fn push(&mut self, tuple: (A,)) {$/;"	f
push	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/tuple.rs	/^    fn push(&mut self, tuple: Self::Item);$/;"	P	interface:TupledDistributionsBuilder
push	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_vector.rs	/^    pub fn push(&mut self, value: T) {$/;"	P	implementation:DatabaseVector
push_many_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_vector.rs	/^    fn push_many_test() {$/;"	f	module:database_vector_tests
push_next_group	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    fn push_next_group(&mut self, group: Vec<I::Item>) {$/;"	f
push_pop_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_vector.rs	/^    fn push_pop_test() {$/;"	f	module:database_vector_tests
put_back	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    pub fn put_back(&mut self, x: I::Item) {$/;"	f
put_back	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub fn put_back<I>(iterable: I) -> PutBack<I::IntoIter>$/;"	f
put_back	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/put_back_n_impl.rs	/^    pub fn put_back(&mut self, x: I::Item) {$/;"	P	implementation:PutBackN
put_back_n	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/put_back_n_impl.rs	/^pub fn put_back_n<I>(iterable: I) -> PutBackN<I::IntoIter>$/;"	f
put_back_n_impl	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod put_back_n_impl;$/;"	n
putc	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn putc(__c: ::std::os::raw::c_int, __stream: *mut FILE) -> ::std::os::raw::c_int;$/;"	f
putc_unlocked	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn putc_unlocked(__c: ::std::os::raw::c_int, __stream: *mut FILE) -> ::std::os::raw::c_i/;"	f
putchar	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn putchar(__c: ::std::os::raw::c_int) -> ::std::os::raw::c_int;$/;"	f
putchar_unlocked	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn putchar_unlocked(__c: ::std::os::raw::c_int) -> ::std::os::raw::c_int;$/;"	f
puts	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn puts(__s: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;$/;"	f
putw	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn putw(__w: ::std::os::raw::c_int, __stream: *mut FILE) -> ::std::os::raw::c_int;$/;"	f
quartiles	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/percentiles.rs	/^    pub fn quartiles(&self) -> (A, A, A) {$/;"	f
quick_mode	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark.rs	/^    pub quick_mode: bool,$/;"	m	struct:BenchmarkConfig
quick_mode	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark.rs	/^    pub(crate) quick_mode: Option<bool>,$/;"	m	struct:PartialBenchmarkConfig
r2	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    r2: ConfidenceInterval,$/;"	m	struct:Context
r_squared	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/regression.rs	/^    pub fn r_squared(&self, data: &Data<'_, A, A>) -> A {$/;"	f
rand_util	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/mod.rs	/^mod rand_util;$/;"	n
random	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs	/^pub fn random<T>() -> T$/;"	f
random_elements	/home/einar/triton/twenty-first/twenty-first/src/shared_math/other.rs	/^pub fn random_elements<T>(n: usize) -> Vec<T>$/;"	f
random_elements_array	/home/einar/triton/twenty-first/twenty-first/src/shared_math/other.rs	/^pub fn random_elements_array<T, const N: usize>() -> [T; N]$/;"	f
random_elements_distinct	/home/einar/triton/twenty-first/twenty-first/src/shared_math/other.rs	/^pub fn random_elements_distinct<T>(n: usize) -> Vec<T>$/;"	f
random_elements_distinct_range	/home/einar/triton/twenty-first/twenty-first/src/shared_math/other.rs	/^pub fn random_elements_distinct_range<T, R>(n: usize, range: R) -> Vec<T>$/;"	f
random_elements_range	/home/einar/triton/twenty-first/twenty-first/src/shared_math/other.rs	/^pub fn random_elements_range<T, R>(n: usize, range: R) -> Vec<T>$/;"	f
range	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs	/^    range: Uniform<usize>,$/;"	m	struct:Slice
range	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^        fn range<T: SampleUniform>(low: T, high: T) {$/;"	f	function:tests::test_float_assertions
range	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    range: X,$/;"	m	struct:UniformInt
rcbuffer	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tee.rs	/^    rcbuffer: Rc<RefCell<TeeBuffer<I::Item, I>>>,$/;"	m	struct:Tee
rciter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/rciter_impl.rs	/^    pub rciter: Rc<RefCell<I>>,$/;"	m	struct:RcIter
rciter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/rciter_impl.rs	/^pub fn rciter<I>(iterable: I) -> RcIter<I::IntoIter>$/;"	f
rciter_impl	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod rciter_impl;$/;"	n
read	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/mod.rs	/^mod read;$/;"	n
read_index	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream.rs	/^    read_index: usize,$/;"	m	struct:ProofStream
reader	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^    reader: R,$/;"	m	struct:ReadRng
receive_buffer	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    receive_buffer: Vec<u8>,$/;"	m	struct:InnerConnection
recommend_flat_sample_size	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    fn recommend_flat_sample_size(target_time: f64, met: f64) -> u64 {$/;"	P	implementation:ActualSamplingMode
recommend_linear_sample_size	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    fn recommend_linear_sample_size(target_time: f64, met: f64) -> u64 {$/;"	P	implementation:ActualSamplingMode
recv	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    pub fn recv(&mut self) -> Result<IncomingMessage, MessageError> {$/;"	P	implementation:InnerConnection
recv	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    pub fn recv(&self) -> Result<IncomingMessage, MessageError> {$/;"	P	implementation:Connection
red	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn red(&self, s: &str) -> String {$/;"	P	implementation:CliReport
reduce	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/either_or_both.rs	/^    pub fn reduce<F>(self, f: F) -> T$/;"	P	implementation:EitherOrBoth
reference	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro128plusplus.rs	/^    fn reference() {$/;"	f	module:tests
reference	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro256plusplus.rs	/^    fn reference() {$/;"	f	module:tests
reg_save_area	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub reg_save_area: *mut ::std::os::raw::c_void,$/;"	m	struct:__va_list_tag
register_fork_handler	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    pub fn register_fork_handler() {$/;"	f	module:fork
register_fork_handler	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    pub fn register_fork_handler() {}$/;"	f	module:fork
regression	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/analysis/mod.rs	/^fn regression($/;"	f
regression	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^    fn regression(&mut self, ctx: PlotContext<'_>, data: PlotData<'_>) {$/;"	P	implementation:Gnuplot
regression	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^mod regression;$/;"	n
regression	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/regression.rs	/^pub(crate) fn regression($/;"	f
regression	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/mod.rs	/^    fn regression(&mut self, ctx: PlotContext<'_>, data: PlotData<'_>);$/;"	P	interface:Plotter
regression	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/mod.rs	/^    fn regression(&mut self, ctx: PlotContext<'_>, data: PlotData<'_>) {$/;"	P	implementation:PlottersBackend
regression	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/mod.rs	/^mod regression;$/;"	n
regression	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/mod.rs	/^pub mod regression;$/;"	n
regression_comparison	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/regression.rs	/^pub(crate) fn regression_comparison($/;"	f
regression_comparison_figure	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/regression.rs	/^fn regression_comparison_figure($/;"	f
regression_comparison_figure	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/regression.rs	/^pub(crate) fn regression_comparison_figure($/;"	f
regression_comparison_small	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/regression.rs	/^pub(crate) fn regression_comparison_small($/;"	f
regression_exists	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    regression_exists: bool,$/;"	m	struct:IndividualBenchmark
regression_figure	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/regression.rs	/^fn regression_figure($/;"	f
regression_figure	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/regression.rs	/^pub(crate) fn regression_figure($/;"	f
regression_small	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/regression.rs	/^pub(crate) fn regression_small($/;"	f
rel_distribution	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/distributions.rs	/^fn rel_distribution($/;"	f
rel_distribution	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/distributions.rs	/^fn rel_distribution($/;"	f
rel_distributions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/distributions.rs	/^pub(crate) fn rel_distributions($/;"	f
rel_distributions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^    fn rel_distributions(&mut self, ctx: PlotContext<'_>, data: PlotData<'_>) {$/;"	P	implementation:Gnuplot
rel_distributions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/mod.rs	/^    fn rel_distributions(&mut self, ctx: PlotContext<'_>, data: PlotData<'_>);$/;"	P	interface:Plotter
rel_distributions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/distributions.rs	/^pub(crate) fn rel_distributions($/;"	f
rel_distributions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/mod.rs	/^    fn rel_distributions(&mut self, ctx: PlotContext<'_>, data: PlotData<'_>) {$/;"	P	implementation:PlottersBackend
relative_distributions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub relative_distributions: ChangeDistributions,$/;"	m	struct:ComparisonData
relative_estimates	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub relative_estimates: ChangeEstimates,$/;"	m	struct:ComparisonData
rem	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn rem(self, rhs: Self) -> Self::Output {$/;"	P	implementation:U32s
rem	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn rem(self, other: Self) -> Self {$/;"	P	implementation:BFieldElement
rem	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn rem(self, other: Self) -> Self {$/;"	P	implementation:Polynomial
rem_div	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    pub fn rem_div(&self, divisor: &Self) -> (Self, Self) {$/;"	P	implementation:U32s
remaining	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/permutations.rs	/^    fn remaining(&self) -> CompleteStateRemaining {$/;"	P	implementation:CompleteState
remove	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn remove(__filename: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;$/;"	f
remove_last_leaf	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    pub fn remove_last_leaf(&mut self) -> Option<Digest> {$/;"	P	implementation:ArchivalMmr
remove_last_leaf_pbt	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    fn remove_last_leaf_pbt() {$/;"	f	module:mmr_test
remove_last_leaf_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    fn remove_last_leaf_test() {$/;"	f	module:mmr_test
rename	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn rename($/;"	f
renameat	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn renameat($/;"	f
repeat_call	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/sources.rs	/^pub fn repeat_call<F, A>(function: F) -> RepeatCall<F>$/;"	f
repeat_n	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/repeatn.rs	/^pub fn repeat_n<A>(element: A, n: usize) -> RepeatN<A>$/;"	f
repeatn	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod repeatn;$/;"	n
replace	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn replace(self, index: usize, new_value: Self) -> Self {$/;"	P	interface:FloatAsSIMD
report	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    report: Reports,$/;"	m	struct:Criterion
report	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^mod report;$/;"	n
report_path	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub fn report_path<P: AsRef<Path> + ?Sized>(&self, id: &BenchmarkId, file_name: &P) -> PathB/;"	P	implementation:ReportContext
reports_impl	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^macro_rules! reports_impl {$/;"	M
resamples	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/mod.rs	/^mod resamples;$/;"	n
resamples	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/mod.rs	/^mod resamples;$/;"	n
rescue_prime_digest	/home/einar/triton/twenty-first/twenty-first/src/shared_math.rs	/^pub mod rescue_prime_digest;$/;"	n
rescue_prime_regular	/home/einar/triton/twenty-first/twenty-first/src/shared_math.rs	/^pub mod rescue_prime_regular;$/;"	n
rescue_prime_regular_tests	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^mod rescue_prime_regular_tests {$/;"	n
reseed	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    fn reseed(&mut self) -> Result<(), Error> {$/;"	f
reseed	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    pub fn reseed(&mut self) -> Result<(), Error> {$/;"	f
reseed_and_generate	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    fn reseed_and_generate($/;"	f
reseeder	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    reseeder: Rsdr,$/;"	m	struct:ReseedingCore
reseeding	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/mod.rs	/^mod reseeding;$/;"	n
reset	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/multi_product.rs	/^    fn reset(&mut self) {$/;"	f
reset	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/combinations.rs	/^    pub(crate) fn reset(&mut self, k: usize) {$/;"	P	implementation:Combinations
reset_for_verifier	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^    pub fn reset_for_verifier(&mut self) {$/;"	f
reset_peek	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/multipeek_impl.rs	/^    pub fn reset_peek(&mut self) {$/;"	f
restore	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_array.rs	/^    pub fn restore(db: DB) -> Self {$/;"	P	implementation:DatabaseArray
restore	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_vector.rs	/^    pub fn restore(db: DB) -> Self {$/;"	P	implementation:DatabaseVector
restore	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    pub fn restore(db: DB) -> Self {$/;"	P	implementation:ArchivalMmr
restore_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_vector.rs	/^    fn restore_test() {$/;"	f	module:database_vector_tests
retain_baseline	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    pub fn retain_baseline(mut self, baseline: String, strict: bool) -> Criterion<M> {$/;"	P	implementation:Criterion
rev	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/free.rs	/^pub fn rev<I>(iterable: I) -> iter::Rev<I::IntoIter>$/;"	f
rev_for_each_ident	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^macro_rules! rev_for_each_ident{$/;"	M
rewind	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn rewind(__stream: *mut FILE);$/;"	f
right	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/either_or_both.rs	/^    pub fn right(self) -> Option<B> {$/;"	P	implementation:EitherOrBoth
right	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/merge_join.rs	/^    right: PutBack<Fuse<J>>,$/;"	m	struct:MergeJoinBy
right_and_then	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/either_or_both.rs	/^    pub fn right_and_then<F, R>(self, f: F) -> EitherOrBoth<A, R>$/;"	P	implementation:EitherOrBoth
right_child	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^pub fn right_child(node_index: u128) -> u128 {$/;"	f
right_child_and_height	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^pub fn right_child_and_height(node_index: u128) -> (bool, u128) {$/;"	f
right_sibling	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/shared.rs	/^pub fn right_sibling(node_index: u128, height: u128) -> u128 {$/;"	f
rng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/resamples.rs	/^    rng: Rng,$/;"	m	struct:Resamples
rng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/resamples.rs	/^    rng: Rng,$/;"	m	struct:Resamples
rng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    rng: R,$/;"	m	struct:DistIter
rng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs	/^    pub fn rng(seed: u64) -> impl RngCore {$/;"	f	module:test
rng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs	/^mod rng;$/;"	n
rng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/thread.rs	/^    rng: Rc<UnsafeCell<ReseedingRng<Core, OsRng>>>,$/;"	m	struct:ThreadRng
rngs	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs	/^pub mod rngs;$/;"	n
root_from_arbitrary_number_of_digests	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    pub fn root_from_arbitrary_number_of_digests(digests: &[Digest]) -> Digest {$/;"	f
root_from_arbitrary_number_of_digests_empty_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    fn root_from_arbitrary_number_of_digests_empty_test() {$/;"	f	module:merkle_tree_test
root_from_digests	/home/einar/triton/gpu/ruthark/accelerators/src/kernels/merkle_tree_gpu_kernel.rs	/^    fn root_from_digests(digests: &[Digest]) -> Digest {$/;"	P	implementation:GpuParallel
root_from_odd_number_of_digests_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    fn root_from_odd_number_of_digests_test() {$/;"	f	module:merkle_tree_test
roundup_npo2	/home/einar/triton/twenty-first/twenty-first/src/shared_math/other.rs	/^pub fn roundup_npo2(x: u64) -> u64 {$/;"	f
routine	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^mod routine;$/;"	n
run_bench	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    fn run_bench<F, I>(&mut self, id: BenchmarkId, input: &I, f: F)$/;"	P	implementation:BenchmarkGroup
runner	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/bencher.rs	/^    runner: A,$/;"	m	struct:AsyncBencher
runner	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^pub fn runner(benches: &[&dyn Fn()]) {$/;"	f
s	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro128plusplus.rs	/^    s: [u32; 4],$/;"	m	struct:Xoshiro128PlusPlus
s	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro256plusplus.rs	/^    s: [u64; 4],$/;"	m	struct:Xoshiro256PlusPlus
salted_merkle_tree_get_authentication_path_medium_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    fn salted_merkle_tree_get_authentication_path_medium_test() {$/;"	f	module:merkle_tree_test
salted_merkle_tree_get_authentication_path_small_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    fn salted_merkle_tree_get_authentication_path_small_test() {$/;"	f	module:merkle_tree_test
salted_merkle_tree_multipath_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    fn salted_merkle_tree_multipath_test() {$/;"	f	module:merkle_tree_test
salted_merkle_tree_regression_test_0	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    fn salted_merkle_tree_regression_test_0() {$/;"	f	module:merkle_tree_test
salted_merkle_tree_verify_authentication_structure_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    fn salted_merkle_tree_verify_authentication_structure_test() {$/;"	f	module:merkle_tree_test
salts	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    salts: Vec<Digest>,$/;"	m	struct:SaltedMerkleTree
sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/routine.rs	/^    fn sample($/;"	P	interface:Routine
sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/kde/mod.rs	/^    sample: &'a Sample<A>,$/;"	m	struct:Kde
sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/mod.rs	/^mod sample;$/;"	n
sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^    sample: &'a Sample<A>,$/;"	m	struct:LabeledSample
sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/resamples.rs	/^    sample: &'a [A],$/;"	m	struct:Resamples
sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> bool {$/;"	P	implementation:Bernoulli
sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> S {$/;"	f
sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> T {$/;"	P	implementation:D
sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> T;$/;"	P	interface:Distribution
sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> u128 {$/;"	P	implementation:Standard
sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> u16 {$/;"	P	implementation:Standard
sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> u32 {$/;"	P	implementation:Standard
sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> u64 {$/;"	P	implementation:Standard
sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> u8 {$/;"	P	implementation:Standard
sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> usize {$/;"	P	implementation:Standard
sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^    fn sample<R: Rng + ?Sized>(&self, _: &mut R) -> () {$/;"	P	implementation:Standard
sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^    fn sample<R: Rng + ?Sized>(&self, _rng: &mut R) -> [T; N] {$/;"	f
sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> Option<T> {$/;"	f
sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> Wrapping<T> {$/;"	f
sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> bool {$/;"	P	implementation:Standard
sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> char {$/;"	P	implementation:Standard
sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> u8 {$/;"	P	implementation:Alphanumeric
sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs	/^    fn sample<R: crate::Rng + ?Sized>(&self, rng: &mut R) -> &'a T {$/;"	P	implementation:Slice
sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^            fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> Self::X {$/;"	P	implementation:tests::test_custom_uniform::UniformMyF32
sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> Duration {$/;"	P	implementation:UniformDuration
sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> Self::X {$/;"	P	implementation:UniformChar
sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> Self::X;$/;"	P	interface:UniformSampler
sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> X {$/;"	P	implementation:Uniform
sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> usize {$/;"	f
sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn sample<T, D: Distribution<T>>(&mut self, distr: D) -> T {$/;"	P	interface:Rng
sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^pub fn sample<R>(rng: &mut R, length: usize, amount: usize) -> IndexVec$/;"	f
sample	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> BFieldElement {$/;"	P	implementation:Standard
sample	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> Digest {$/;"	P	implementation:Standard
sample	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> XFieldElement {$/;"	P	implementation:Standard
sample	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    pub fn sample(digest: &Digest) -> Self {$/;"	P	implementation:XFieldElement
sample_efraimidis_spirakis	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^fn sample_efraimidis_spirakis<R, F, X, N>($/;"	f
sample_floyd	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^fn sample_floyd<R>(rng: &mut R, length: u32, amount: u32) -> IndexVec$/;"	f
sample_index	/home/einar/triton/twenty-first/twenty-first/src/util_types/algebraic_hasher.rs	/^    fn sample_index(seed: &Digest, upper_bound: usize) -> usize {$/;"	P	interface:AlgebraicHasher
sample_index_not_power_of_two	/home/einar/triton/twenty-first/twenty-first/src/util_types/algebraic_hasher.rs	/^    fn sample_index_not_power_of_two(seed: &Digest, max: usize) -> usize {$/;"	P	interface:AlgebraicHasher
sample_indices	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    fn sample_indices(&self, seed: &Digest) -> Vec<usize> {$/;"	f
sample_indices	/home/einar/triton/twenty-first/twenty-first/src/util_types/algebraic_hasher.rs	/^    fn sample_indices(count: usize, seed: &Digest, max: usize) -> Vec<usize> {$/;"	P	interface:AlgebraicHasher
sample_inplace	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^fn sample_inplace<R>(rng: &mut R, length: u32, amount: u32) -> IndexVec$/;"	f
sample_iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    fn sample_iter<R>(self, rng: R) -> DistIter<Self, R, T>$/;"	P	interface:Distribution
sample_iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn sample_iter<T, D>(self, distr: D) -> distributions::DistIter<D, Self, T>$/;"	P	interface:Rng
sample_measured_value	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/csv_report.rs	/^    sample_measured_value: f64,$/;"	m	struct:CsvRow
sample_rejection	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^fn sample_rejection<X: UInt, R>(rng: &mut R, length: X, amount: X) -> IndexVec$/;"	f
sample_single	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn sample_single<R: Rng + ?Sized, B1, B2>(low: B1, high: B2, rng: &mut R) -> Self::X$/;"	P	interface:UniformSampler
sample_single	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn sample_single<R: RngCore + ?Sized>(self, rng: &mut R) -> T {$/;"	P	implementation:Range
sample_single	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn sample_single<R: RngCore + ?Sized>(self, rng: &mut R) -> T {$/;"	P	implementation:RangeInclusive
sample_single	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn sample_single<R: RngCore + ?Sized>(self, rng: &mut R) -> T;$/;"	P	interface:SampleRange
sample_single_inclusive	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn sample_single_inclusive<R: Rng + ?Sized, B1, B2>(low: B1, high: B2, rng: &mut R)$/;"	P	interface:UniformSampler
sample_size	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark.rs	/^    pub sample_size: usize,$/;"	m	struct:BenchmarkConfig
sample_size	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark.rs	/^    pub(crate) sample_size: Option<usize>,$/;"	m	struct:PartialBenchmarkConfig
sample_size	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    pub fn sample_size(&mut self, n: usize) -> &mut Self {$/;"	P	implementation:BenchmarkGroup
sample_size	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    sample_size: usize,$/;"	m	struct:BenchmarkConfig
sample_size	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    pub fn sample_size(mut self, n: usize) -> Criterion<M> {$/;"	P	implementation:Criterion
sample_string	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    fn sample_string<R: Rng + ?Sized>(&self, rng: &mut R, len: usize) -> String {$/;"	P	interface:DistString
sample_times	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub fn sample_times(&self) -> &Sample<f64> {$/;"	P	implementation:MeasurementData
sample_weighted	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^pub fn sample_weighted<R, F, X>($/;"	f
sampler	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    sampler: UniformInt<u32>,$/;"	m	struct:UniformChar
sampling_mode	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark.rs	/^    pub sampling_mode: SamplingMode,$/;"	m	struct:BenchmarkConfig
sampling_mode	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark.rs	/^    pub(crate) sampling_mode: Option<SamplingMode>,$/;"	m	struct:PartialBenchmarkConfig
sampling_mode	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    pub fn sampling_mode(&mut self, new_mode: SamplingMode) -> &mut Self {$/;"	P	implementation:BenchmarkGroup
sampling_mode	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    sampling_mode: ActualSamplingMode,$/;"	m	struct:SavedSample
save	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/fs.rs	/^pub fn save<D, P>(data: &D, path: &P) -> Result<()>$/;"	f
save_baseline	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    pub fn save_baseline(mut self, baseline: String) -> Criterion<M> {$/;"	P	implementation:Criterion
save_string	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/fs.rs	/^pub fn save_string<P>(data: &str, path: &P) -> Result<()>$/;"	f
scalar_float_impl	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^macro_rules! scalar_float_impl {$/;"	M
scalar_mul	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^    pub fn scalar_mul(&mut self, scalar: u32) {$/;"	P	implementation:DyadicRational
scalar_mul	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    pub fn scalar_mul(&self, factor: FF) -> Self {$/;"	P	implementation:MPolynomial
scalar_mul	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn scalar_mul(&self, scalar: FF) -> Self {$/;"	P	implementation:Polynomial
scalar_mul_mut	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    pub fn scalar_mul_mut(&mut self, factor: FF) {$/;"	P	implementation:MPolynomial
scalar_mul_mut	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn scalar_mul_mut(&mut self, scalar: FF) {$/;"	P	implementation:Polynomial
scalar_mul_simple_test	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^    fn scalar_mul_simple_test() {$/;"	f	module:dyadic_rationals_tests
scale	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    scale: X,$/;"	m	struct:UniformFloat
scale	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn scale(&self, &alpha: &BFieldElement) -> Self {$/;"	f
scale_for_machines	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^    fn scale_for_machines(&self, _values: &mut [f64]) -> &'static str {$/;"	P	implementation:DurationFormatter
scale_for_machines	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^    fn scale_for_machines(&self, values: &mut [f64]) -> &'static str;$/;"	P	interface:ValueFormatter
scale_throughputs	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^    fn scale_throughputs($/;"	P	implementation:DurationFormatter
scale_throughputs	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^    fn scale_throughputs($/;"	P	interface:ValueFormatter
scale_values	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^    fn scale_values(&self, ns: f64, values: &mut [f64]) -> &'static str {$/;"	P	implementation:DurationFormatter
scale_values	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^    fn scale_values(&self, typical_value: f64, values: &mut [f64]) -> &'static str;$/;"	P	interface:ValueFormatter
scanf	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn scanf(__format: *const ::std::os::raw::c_char, ...) -> ::std::os::raw::c_int;$/;"	f
scanf1	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn scanf1(__format: *const ::std::os::raw::c_char, ...) -> ::std::os::raw::c_int;$/;"	f
secs	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    secs: u64,$/;"	m	struct:Duration
seed_from_u64	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro128plusplus.rs	/^    fn seed_from_u64(mut state: u64) -> Self {$/;"	P	implementation:Xoshiro128PlusPlus
seed_from_u64	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro256plusplus.rs	/^    fn seed_from_u64(mut state: u64) -> Self {$/;"	P	implementation:Xoshiro256PlusPlus
send	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    pub fn send(&mut self, message: &OutgoingMessage) -> Result<(), MessageError> {$/;"	P	implementation:InnerConnection
send	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    pub fn send(&self, message: &OutgoingMessage) -> Result<(), MessageError> {$/;"	P	implementation:Connection
send_buffer	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    send_buffer: Vec<u8>,$/;"	m	struct:InnerConnection
sep	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/format.rs	/^    sep: &'a str,$/;"	m	struct:Format
sep	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/format.rs	/^    sep: &'a str,$/;"	m	struct:FormatWith
seq	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs	/^pub mod seq;$/;"	n
serialization_test	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn serialization_test() {$/;"	f	module:u32s_tests
serialization_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^    fn serialization_test() {$/;"	f	module:mmr_membership_proof_test
serialize	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream.rs	/^    pub fn serialize(&self) -> Vec<u8> {$/;"	P	implementation:ProofStream
serve_value_formatter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    pub fn serve_value_formatter($/;"	P	implementation:Connection
set	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_array.rs	/^    pub fn set(&mut self, index: u128, value: T) {$/;"	P	implementation:DatabaseArray
set	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_vector.rs	/^    pub fn set(&mut self, index: u128, value: T) {$/;"	P	implementation:DatabaseVector
set_bit	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn set_bit(&mut self, bit_index: usize, val: bool) {$/;"	P	implementation:U32s
set_bit_simple_test	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn set_bit_simple_test() {$/;"	f	module:u32s_tests
set_from	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn set_from<'a, A: 'a, J>(&mut self, from: J) -> usize$/;"	P	interface:Itertools
set_index	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream.rs	/^    pub fn set_index(&mut self, new_index: usize) {$/;"	P	implementation:ProofStream
set_length	/home/einar/triton/twenty-first/twenty-first/src/util_types/database_vector.rs	/^    fn set_length(&mut self, length: u128) {$/;"	P	implementation:DatabaseVector
set_one	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^    fn set_one(&mut self) {$/;"	P	implementation:DyadicRational
set_one	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn set_one(&mut self) {$/;"	P	implementation:U32s
setbuf	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn setbuf(__stream: *mut FILE, __buf: *mut ::std::os::raw::c_char);$/;"	f
setbuffer	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn setbuffer(__stream: *mut FILE, __buf: *mut ::std::os::raw::c_char, __size: size_t);$/;"	f
setlinebuf	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn setlinebuf(__stream: *mut FILE);$/;"	f
setvbuf	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn setvbuf($/;"	f
shah_polynomial	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    pub fn shah_polynomial() -> Polynomial<BFieldElement> {$/;"	P	implementation:XFieldElement
shape	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn shape<T>(ctx: T, ptr: *const futhark_bool_1d) -> Vec<i64>$/;"	P	implementation:Array_bool_1d
shape	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn shape<T>(ctx: T, ptr: *const futhark_i64_1d) -> Vec<i64>$/;"	P	implementation:Array_i64_1d
shape	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn shape<T>(ctx: T, ptr: *const futhark_u64_1d) -> Vec<i64>$/;"	P	implementation:Array_u64_1d
shape	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn shape<T>(ctx: T, ptr: *const futhark_u64_2d) -> Vec<i64>$/;"	P	implementation:Array_u64_2d
shape	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn shape<T>(ctx: T, ptr: *const futhark_u64_3d) -> Vec<i64>$/;"	P	implementation:Array_u64_3d
shape	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn shape<T>(ctx: T, ptr: *const futhark_u8_2d) -> Vec<i64>$/;"	P	implementation:Array_u8_2d
shape	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub(crate) unsafe fn shape<T>(ctx: T, ptr: *const futhark_u8_3d) -> Vec<i64>$/;"	P	implementation:Array_u8_3d
shape	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    unsafe fn shape<C>(ctx: C, ptr: *const Self) -> *const i64$/;"	P	interface:FutharkType
shape	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    unsafe fn shape<C>(ctx: C, ptr: *const bindings::futhark_bool_1d) -> *const i64$/;"	P	implementation:futhark_bool_1d
shape	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    unsafe fn shape<C>(ctx: C, ptr: *const bindings::futhark_i64_1d) -> *const i64$/;"	P	implementation:futhark_i64_1d
shape	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    unsafe fn shape<C>(ctx: C, ptr: *const bindings::futhark_u64_1d) -> *const i64$/;"	P	implementation:futhark_u64_1d
shape	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    unsafe fn shape<C>(ctx: C, ptr: *const bindings::futhark_u64_2d) -> *const i64$/;"	P	implementation:futhark_u64_2d
shape	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    unsafe fn shape<C>(ctx: C, ptr: *const bindings::futhark_u64_3d) -> *const i64$/;"	P	implementation:futhark_u64_3d
shape	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    unsafe fn shape<C>(ctx: C, ptr: *const bindings::futhark_u8_2d) -> *const i64$/;"	P	implementation:futhark_u8_2d
shape	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    unsafe fn shape<C>(ctx: C, ptr: *const bindings::futhark_u8_3d) -> *const i64$/;"	P	implementation:futhark_u8_3d
shared	/home/einar/triton/twenty-first/twenty-first/src/util_types.rs	/^pub mod shared;$/;"	n
shared	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr.rs	/^pub mod shared;$/;"	n
shared_math	/home/einar/triton/twenty-first/twenty-first/src/lib.rs	/^pub mod shared_math;$/;"	n
shift_coefficients	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn shift_coefficients(&self, power: usize) -> Self {$/;"	P	implementation:Polynomial
shift_coefficients_mut	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn shift_coefficients_mut(&mut self, power: usize, zero: FF) {$/;"	P	implementation:Polynomial
short	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/format.rs	/^pub fn short(n: f64) -> String {$/;"	f
short_max_len	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/format.rs	/^    fn short_max_len() {$/;"	f	module:test
should_save_baseline	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    fn should_save_baseline(&self) -> bool {$/;"	P	implementation:Criterion
shuffle	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn shuffle<R>(&mut self, rng: &mut R)$/;"	P	implementation:T
shuffle	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn shuffle<R>(&mut self, rng: &mut R)$/;"	P	interface:SliceRandom
sift_down	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/kmerge_impl.rs	/^fn sift_down<T, S>(heap: &mut [T], index: usize, mut less_than: S)$/;"	f
signed_short	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/format.rs	/^fn signed_short(n: f64) -> String {$/;"	f
signed_short_max_len	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/format.rs	/^    fn signed_short_max_len() {$/;"	f	module:test
significance_level	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark.rs	/^    pub significance_level: f64,$/;"	m	struct:BenchmarkConfig
significance_level	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark.rs	/^    pub(crate) significance_level: Option<f64>,$/;"	m	struct:PartialBenchmarkConfig
significance_level	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    pub fn significance_level(&mut self, sl: f64) -> &mut Self {$/;"	P	implementation:BenchmarkGroup
significance_level	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    significance_level: f64,$/;"	m	struct:BenchmarkConfig
significance_level	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    significance_level: String,$/;"	m	struct:Comparison
significance_level	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    pub fn significance_level(mut self, sl: f64) -> Criterion<M> {$/;"	P	implementation:Criterion
significance_threshold	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub significance_threshold: f64,$/;"	m	struct:ComparisonData
simd_impl	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^macro_rules! simd_impl {$/;"	M
simd_impl	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^macro_rules! simd_impl {$/;"	M
simd_wmul	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^mod simd_wmul {$/;"	n
simple_add_test	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^    fn simple_add_test() {$/;"	f	module:dyadic_rationals_tests
simple_add_test	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn simple_add_test() {$/;"	f	module:u32s_tests
simple_add_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn simple_add_test() {$/;"	f	module:test_mpolynomials
simple_generator_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn simple_generator_test() {$/;"	f	module:b_prime_field_element_test
simple_lift_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn simple_lift_test() {$/;"	f	module:b_prime_field_element_test
simple_mul_test	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn simple_mul_test() {$/;"	f	module:u32s_tests
simple_mul_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn simple_mul_test() {$/;"	f	module:test_mpolynomials
simple_pow_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn simple_pow_test() {$/;"	f	module:test_mpolynomials
simple_sub_test	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^    fn simple_sub_test() {$/;"	f	module:dyadic_rationals_tests
simple_sub_test	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn simple_sub_test() {$/;"	f	module:u32s_tests
simple_sub_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn simple_sub_test() {$/;"	f	module:test_mpolynomials
simple_sum_test	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn simple_sum_test() {$/;"	f	module:u32s_tests
simple_value_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn simple_value_test() {$/;"	f	module:b_prime_field_element_test
single_point	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    single_point: Option<usize>,$/;"	m	struct:PolynomialEvaluationDataNode
size	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/mod.rs	/^    pub fn size(mut self, s: Option<criterion_plot::Size>) -> PlotContext<'a> {$/;"	P	implementation:PlotContext
size	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/mod.rs	/^    pub(crate) size: Option<(usize, usize)>,$/;"	m	struct:PlotContext
size	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    size: usize,$/;"	m	struct:ChunkIndex
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/tukey.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/coalesce.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/map.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/multi_product.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^        fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f	module:private
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/exactly_one_err.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/flatten_ok.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/intersperse.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/kmerge_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod size_hint;$/;"	n
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/merge_join.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/multipeek_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/pad_tail.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/peek_nth.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/peeking_take_while.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/permutations.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/powerset.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/process_results_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/put_back_n_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:PutBackN
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/rciter_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/repeatn.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/sources.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tee.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/unique_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/with_position.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:WithPosition
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/zip_eq_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/zip_longest.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:IndexVecIntoIter
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:IndexVecIter
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:test::ChunkHintedIterator
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:test::WindowHintedIterator
size_hint	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:SliceChooseIter
size_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type size_t = ::std::os::raw::c_ulong;$/;"	t
skip	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    skip: usize,$/;"	m	struct:Step
slice	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs	/^mod slice;$/;"	n
slice	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs	/^    slice: &'a [T],$/;"	m	struct:Slice
slice	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    slice: &'a S,$/;"	m	struct:SliceChooseIter
slope	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub slope: Option<Distribution<f64>>,$/;"	m	struct:Distributions
slope	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub slope: Option<Estimate>,$/;"	m	struct:Estimates
slope	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    slope: Option<ConfidenceInterval>,$/;"	m	struct:Context
slow_square	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn slow_square(&self) -> Self {$/;"	P	implementation:Polynomial
small	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs	/^#[cfg(feature = "small_rng")] mod small;$/;"	n
snprintf	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn snprintf($/;"	f
socket	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    socket: TcpStream,$/;"	m	struct:InnerConnection
sorted	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/free.rs	/^pub fn sorted<I>(iterable: I) -> VecIntoIter<I::Item>$/;"	f
sorted	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn sorted(self) -> VecIntoIter<Self::Item>$/;"	P	interface:Itertools
sorted_by	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn sorted_by<F>(self, cmp: F) -> VecIntoIter<Self::Item>$/;"	P	interface:Itertools
sorted_by_cached_key	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn sorted_by_cached_key<K, F>(self, f: F) -> VecIntoIter<Self::Item>$/;"	P	interface:Itertools
sorted_by_key	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn sorted_by_key<K, F>(self, f: F) -> VecIntoIter<Self::Item>$/;"	P	interface:Itertools
sorted_unstable	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn sorted_unstable(self) -> VecIntoIter<Self::Item>$/;"	P	interface:Itertools
sorted_unstable_by	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn sorted_unstable_by<F>(self, cmp: F) -> VecIntoIter<Self::Item>$/;"	P	interface:Itertools
sorted_unstable_by_key	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn sorted_unstable_by_key<K, F>(self, f: F) -> VecIntoIter<Self::Item>$/;"	P	interface:Itertools
source	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    fn source(&self) -> Option<&(dyn std::error::Error + 'static)> {$/;"	P	implementation:MessageError
source	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^    fn source(&self) -> Option<&(dyn std::error::Error + 'static)> {$/;"	P	implementation:ReadError
sources	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod sources;$/;"	n
splat	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn splat(scalar: Self) -> Self {$/;"	P	interface:FloatAsSIMD
sprintf	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn sprintf($/;"	f
square	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    pub fn square(&self) -> Self {$/;"	P	implementation:MPolynomial
square	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn square(&self) -> Self {$/;"	f
square	/home/einar/triton/twenty-first/twenty-first/src/shared_math/traits.rs	/^    fn square(self) -> Self {$/;"	P	interface:FiniteField
square_simple_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn square_simple_test() {$/;"	f	module:test_polynomials
square_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn square_test() {$/;"	f	module:test_mpolynomials
square_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn square_test() {$/;"	f	module:test_polynomials
square_test_simple	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn square_test_simple() {$/;"	f	module:test_mpolynomials
src	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/combinations.rs	/^    pub(crate) fn src(&self) -> &I { &self.pool.it }$/;"	P	implementation:Combinations
sscanf	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn sscanf($/;"	f
sscanf1	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn sscanf1($/;"	f
ssize_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type ssize_t = __ssize_t;$/;"	t
stage	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/resamples.rs	/^    stage: Option<(Vec<X>, Vec<Y>)>,$/;"	m	struct:Resamples
stage	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/resamples.rs	/^    stage: Option<Vec<A>>,$/;"	m	struct:Resamples
standard_error	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub standard_error: f64,$/;"	m	struct:Estimate
stark	/home/einar/triton/twenty-first/twenty-first/src/shared_math.rs	/^pub mod stark;$/;"	n
stark_verify_error	/home/einar/triton/twenty-first/twenty-first/src/shared_math/stark.rs	/^pub mod stark_verify_error;$/;"	n
start	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^    fn start(&self) -> Self::Intermediate {$/;"	P	implementation:WallTime
start	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^    fn start(&self) -> Self::Intermediate;$/;"	P	interface:Measurement
start	/home/einar/triton/twenty-first/twenty-first/src/timing_reporter.rs	/^    pub fn start() -> Self {$/;"	P	implementation:TimingReporter
start_profiling	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/profiler.rs	/^    fn start_profiling(&mut self, _benchmark_id: &str, _benchmark_dir: &Path) {}$/;"	P	implementation:ExternalProfiler
start_profiling	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/profiler.rs	/^    fn start_profiling(&mut self, benchmark_id: &str, benchmark_dir: &Path);$/;"	P	interface:Profiler
state	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/mod.rs	/^    state: usize,$/;"	m	struct:Pairs
state	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/permutations.rs	/^    state: PermutationState,$/;"	m	struct:Permutations
state	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/sources.rs	/^    pub state: St,$/;"	m	struct:Unfold
state	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/sources.rs	/^    state: St,$/;"	m	struct:Iterate
state	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^    pub state: [BFieldElement; STATE_SIZE],$/;"	m	struct:RescuePrimeRegularState
stats	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/analysis/compare.rs	/^    fn stats(a: &Sample<f64>, b: &Sample<f64>) -> (f64, f64) {$/;"	f	function:estimates
stats	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/analysis/mod.rs	/^    fn stats(sample: &Sample<f64>) -> (f64, f64, f64, f64) {$/;"	f	function:estimates
stats	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^mod stats;$/;"	n
std	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs	/^#[cfg(feature = "std_rng")] mod std;$/;"	n
std_dev	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub std_dev: Distribution<f64>,$/;"	m	struct:Distributions
std_dev	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub std_dev: Estimate,$/;"	m	struct:Estimates
std_dev	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub std_dev: f64,$/;"	m	struct:PointEstimates
std_dev	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    std_dev: ConfidenceInterval,$/;"	m	struct:Context
std_dev	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/sample.rs	/^    pub fn std_dev(&self, mean: Option<A>) -> A {$/;"	f
std_dev_duration	/home/einar/triton/twenty-first/twenty-first/src/timing_reporter.rs	/^fn std_dev_duration(durations: &[Duration]) -> Duration {$/;"	f
std_dev_pct	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/sample.rs	/^    pub fn std_dev_pct(&self) -> A {$/;"	f
stderr	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub static mut stderr: *mut FILE;$/;"	v
stdin	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub static mut stdin: *mut FILE;$/;"	v
stdout	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub static mut stdout: *mut FILE;$/;"	v
step	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub fn step<I>(iter: I, step: usize) -> Step<I>$/;"	f
step	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    fn step(&mut self, client: usize) -> Option<I::Item> {$/;"	f
step	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    fn step(&self, client: usize) -> Option<I::Item> {$/;"	f
step	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    fn step(&self, client: usize) -> Option<I::Item>$/;"	f
step	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn step(self, n: usize) -> Step<Self>$/;"	P	interface:Itertools
step_buffering	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    fn step_buffering(&mut self, client: usize) -> Option<I::Item> {$/;"	f
step_current	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    fn step_current(&mut self) -> Option<I::Item> {$/;"	f
step_durations	/home/einar/triton/twenty-first/twenty-first/src/timing_reporter.rs	/^    pub step_durations: Vec<(String, Duration)>,$/;"	m	struct:TimingReport
stop_profiling	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/profiler.rs	/^    fn stop_profiling(&mut self, _benchmark_id: &str, _benchmark_dir: &Path) {}$/;"	P	implementation:ExternalProfiler
stop_profiling	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/profiler.rs	/^    fn stop_profiling(&mut self, benchmark_id: &str, benchmark_dir: &Path);$/;"	P	interface:Profiler
str	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    type Error = &'static str;$/;"	v	implementation:U32s
structs	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^pub mod structs {$/;"	n
sub	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^    fn sub(self, rhs: Self) -> Self::Output {$/;"	P	implementation:DyadicRational
sub	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn sub(self, rhs: Self) -> Self::Output {$/;"	P	implementation:U32s
sub	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn sub(self, other: Self) -> Self {$/;"	P	implementation:BFieldElement
sub	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn sub(self, other: Self) -> Self {$/;"	P	implementation:MPolynomial
sub	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn sub(self, other: Self) -> Self {$/;"	P	implementation:Polynomial
sub	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn sub(self, other: BFieldElement) -> Self {$/;"	P	implementation:XFieldElement
sub	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn sub(self, other: Self) -> Self {$/;"	P	implementation:XFieldElement
sub	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn sub(self, other: XFieldElement) -> XFieldElement {$/;"	P	implementation:BFieldElement
sub_add_pbt	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn sub_add_pbt() {$/;"	f	module:u32s_tests
sub_assign	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn sub_assign(&mut self, rhs: Self) {$/;"	P	implementation:BFieldElement
sub_assign	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn sub_assign(&mut self, rhs: BFieldElement) {$/;"	P	implementation:XFieldElement
sub_assign	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn sub_assign(&mut self, rhs: Self) {$/;"	P	implementation:XFieldElement
sub_scalar	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/size_hint.rs	/^pub fn sub_scalar(sh: SizeHint, x: usize) -> SizeHint {$/;"	f
sum	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/mod.rs	/^fn sum<A>(xs: &[A]) -> A$/;"	f
sum	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/sample.rs	/^    pub fn sum(&self) -> A {$/;"	f
sum	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/grouping_map.rs	/^    pub fn sum(self) -> HashMap<K, V>$/;"	f
sum	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn sum<I: Iterator<Item = Self>>(iter: I) -> Self {$/;"	P	implementation:U32s
sum	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn sum<I: Iterator<Item = Self>>(iter: I) -> Self {$/;"	P	implementation:BFieldElement
sum	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn sum<I: Iterator<Item = Self>>(iter: I) -> Self {$/;"	P	implementation:MPolynomial
sum	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn sum<I: Iterator<Item = Self>>(iter: I) -> Self {$/;"	P	implementation:XFieldElement
sum1	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn sum1<S>(mut self) -> Option<S>$/;"	P	interface:Itertools
sum_panic_test	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn sum_panic_test() {$/;"	f	module:u32s_tests
summarize	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    fn summarize($/;"	P	implementation:Html
summarize	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn summarize($/;"	P	interface:Report
summary	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^mod summary;$/;"	n
summary	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/mod.rs	/^mod summary;$/;"	n
summary_scale	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    summary_scale: AxisScale,$/;"	m	struct:PlotConfiguration
summary_scale	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    pub fn summary_scale(mut self, new_scale: AxisScale) -> PlotConfiguration {$/;"	P	implementation:PlotConfiguration
summary_scale	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    summary_scale: AxisScale,$/;"	m	struct:PlotConfiguration
sweep	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/kde.rs	/^pub fn sweep($/;"	f
sweep_and_estimate	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/kde.rs	/^pub fn sweep_and_estimate($/;"	f
symbolic_degree_bound	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    pub fn symbolic_degree_bound(&self, max_degrees: &[i64]) -> Degree {$/;"	P	implementation:MPolynomial
symbolic_degree_bound_ones	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn symbolic_degree_bound_ones() {$/;"	f	module:test_mpolynomials
symbolic_degree_bound_prop	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn symbolic_degree_bound_prop() {$/;"	f	module:test_mpolynomials
symbolic_degree_bound_prop_gen	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn symbolic_degree_bound_prop_gen() {$/;"	f	module:test_mpolynomials
symbolic_degree_bound_random	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn symbolic_degree_bound_random() {$/;"	f	module:test_mpolynomials
symbolic_degree_bound_simple	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn symbolic_degree_bound_simple() {$/;"	f	module:test_mpolynomials
symbolic_degree_bound_simple2	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn symbolic_degree_bound_simple2() {$/;"	f	module:test_mpolynomials
symbolic_degree_bound_zero	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn symbolic_degree_bound_zero() {$/;"	f	module:test_mpolynomials
symbolic_degree_bound_zeroes	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn symbolic_degree_bound_zeroes() {$/;"	f	module:test_mpolynomials
t	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/sample.rs	/^    pub fn t(&self, other: &Sample<A>) -> A {$/;"	f
t	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/ziptuple.rs	/^    t: T,$/;"	m	struct:Zip
t	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^        macro_rules! t {$/;"	M	function:tests::test_float_assertions
t	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^        macro_rules! t {$/;"	M	function:tests::test_floats
t	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^        macro_rules! t {$/;"	M	function:tests::test_integers
t_distribution	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub t_distribution: Distribution<f64>,$/;"	m	struct:ComparisonData
t_test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/analysis/compare.rs	/^fn t_test($/;"	f
t_test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^    fn t_test(&mut self, ctx: PlotContext<'_>, data: PlotData<'_>) {$/;"	P	implementation:Gnuplot
t_test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^mod t_test;$/;"	n
t_test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/t_test.rs	/^pub(crate) fn t_test($/;"	f
t_test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/mod.rs	/^    fn t_test(&mut self, ctx: PlotContext<'_>, data: PlotData<'_>);$/;"	P	interface:Plotter
t_test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/mod.rs	/^    fn t_test(&mut self, ctx: PlotContext<'_>, data: PlotData<'_>) {$/;"	P	implementation:PlottersBackend
t_test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/mod.rs	/^mod t_test;$/;"	n
t_test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/t_test.rs	/^pub(crate) fn t_test($/;"	f
t_value	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub t_value: f64,$/;"	m	struct:ComparisonData
tail	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/kmerge_impl.rs	/^    tail: I,$/;"	m	struct:HeadTail
take_while_ref	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub fn take_while_ref<I, F>(iter: &mut I, f: F) -> TakeWhileRef<I, F>$/;"	f
take_while_ref	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn take_while_ref<F>(&mut self, accept: F) -> TakeWhileRef<Self, F>$/;"	P	interface:Itertools
target_directory	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^        target_directory: PathBuf,$/;"	m	struct:cargo_target_directory::Metadata
tee	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn tee(self) -> (Tee<Self>, Tee<Self>)$/;"	P	interface:Itertools
tee	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod tee;$/;"	n
templates	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    templates: TinyTemplate<'static>,$/;"	m	struct:Html
tempnam	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn tempnam($/;"	f
ten_dice_rolls_other_than_five	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^        fn ten_dice_rolls_other_than_five<R: Rng>($/;"	f	function:tests::test_make_an_iter
term_print	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn term_print(exponents: &[u8], coefficient: &FF) -> String {$/;"	P	implementation:MPolynomial
terminated	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn terminated(&self, _id: &BenchmarkId, _context: &ReportContext) {}$/;"	P	interface:Report
terminated	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn terminated(&self, id: &BenchmarkId, _: &ReportContext) {$/;"	P	implementation:CliReport
test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/format.rs	/^mod test {$/;"	n
test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^mod test {$/;"	n
test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/routine.rs	/^    fn test(&mut self, m: &M, parameter: &T) {$/;"	P	interface:Routine
test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/bootstrap.rs	/^macro_rules! test {$/;"	M
test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/bootstrap.rs	/^mod test {$/;"	n
test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/mod.rs	/^mod test;$/;"	n
test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/bootstrap.rs	/^macro_rules! test {$/;"	M
test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/bootstrap.rs	/^mod test {$/;"	n
test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/kde/kernel.rs	/^macro_rules! test {$/;"	M
test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/kde/kernel.rs	/^mod test {$/;"	n
test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/kde/mod.rs	/^macro_rules! test {$/;"	M
test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/kde/mod.rs	/^mod test {$/;"	n
test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/resamples.rs	/^mod test {$/;"	n
test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^mod test {$/;"	n
test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^mod test {$/;"	n
test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs	/^mod test {$/;"	n
test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^mod test {$/;"	n
test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^mod test {$/;"	n
test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^mod test {$/;"	n
test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs	/^mod test {$/;"	n
test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/thread.rs	/^mod test {$/;"	n
test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^mod test {$/;"	n
test	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^mod test {$/;"	n
test_accepting_nan	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^    fn test_accepting_nan(){$/;"	f	module:test
test_alphanumeric	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^    fn test_alphanumeric() {$/;"	f	module:tests
test_average	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^    fn test_average() {$/;"	f	module:test
test_benchmark_id_make_directory_name_unique	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn test_benchmark_id_make_directory_name_unique() {$/;"	f	module:test
test_benchmark_id_make_long_directory_name_unique	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn test_benchmark_id_make_long_directory_name_unique() {$/;"	f	module:test
test_char	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn test_char() {$/;"	f	module:tests
test_chars	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^    fn test_chars() {$/;"	f	module:tests
test_clone_reseeding	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    fn test_clone_reseeding() {$/;"	f	module:test
test_compliance	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^    fn test_compliance() {$/;"	f	module:rescue_prime_regular_tests
test_custom_uniform	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn test_custom_uniform() {$/;"	f	module:tests
test_dist_string	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    fn test_dist_string() {$/;"	f	module:tests
test_distributions_iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    fn test_distributions_iter() {$/;"	f	module:tests
test_distributions_map	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    fn test_distributions_map() {$/;"	f	module:tests
test_durations	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn test_durations() {$/;"	f	module:tests
test_f32	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs	/^    macro_rules! test_f32 {$/;"	M	module:tests
test_f64	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs	/^    macro_rules! test_f64 {$/;"	M	module:tests
test_field__IO_backup_base	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field__IO_backup_base() {$/;"	f	function:bindgen_test_layout__IO_FILE
test_field__IO_buf_base	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field__IO_buf_base() {$/;"	f	function:bindgen_test_layout__IO_FILE
test_field__IO_buf_end	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field__IO_buf_end() {$/;"	f	function:bindgen_test_layout__IO_FILE
test_field__IO_read_base	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field__IO_read_base() {$/;"	f	function:bindgen_test_layout__IO_FILE
test_field__IO_read_end	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field__IO_read_end() {$/;"	f	function:bindgen_test_layout__IO_FILE
test_field__IO_read_ptr	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field__IO_read_ptr() {$/;"	f	function:bindgen_test_layout__IO_FILE
test_field__IO_save_base	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field__IO_save_base() {$/;"	f	function:bindgen_test_layout__IO_FILE
test_field__IO_save_end	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field__IO_save_end() {$/;"	f	function:bindgen_test_layout__IO_FILE
test_field__IO_write_base	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field__IO_write_base() {$/;"	f	function:bindgen_test_layout__IO_FILE
test_field__IO_write_end	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field__IO_write_end() {$/;"	f	function:bindgen_test_layout__IO_FILE
test_field__IO_write_ptr	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field__IO_write_ptr() {$/;"	f	function:bindgen_test_layout__IO_FILE
test_field___clang_max_align_nonce1	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field___clang_max_align_nonce1() {$/;"	f	function:bindgen_test_layout_max_align_t
test_field___clang_max_align_nonce2	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field___clang_max_align_nonce2() {$/;"	f	function:bindgen_test_layout_max_align_t
test_field___count	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field___count() {$/;"	f	function:bindgen_test_layout___mbstate_t
test_field___pad5	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field___pad5() {$/;"	f	function:bindgen_test_layout__IO_FILE
test_field___pos	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field___pos() {$/;"	f	function:bindgen_test_layout__G_fpos64_t
test_field___pos	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field___pos() {$/;"	f	function:bindgen_test_layout__G_fpos_t
test_field___state	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field___state() {$/;"	f	function:bindgen_test_layout__G_fpos64_t
test_field___state	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field___state() {$/;"	f	function:bindgen_test_layout__G_fpos_t
test_field___val	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field___val() {$/;"	f	function:bindgen_test_layout___fsid_t
test_field___value	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field___value() {$/;"	f	function:bindgen_test_layout___mbstate_t
test_field___wch	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field___wch() {$/;"	f	function:bindgen_test_layout___mbstate_t__bindgen_ty_1
test_field___wchb	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field___wchb() {$/;"	f	function:bindgen_test_layout___mbstate_t__bindgen_ty_1
test_field__chain	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field__chain() {$/;"	f	function:bindgen_test_layout__IO_FILE
test_field__codecvt	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field__codecvt() {$/;"	f	function:bindgen_test_layout__IO_FILE
test_field__cur_column	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field__cur_column() {$/;"	f	function:bindgen_test_layout__IO_FILE
test_field__fileno	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field__fileno() {$/;"	f	function:bindgen_test_layout__IO_FILE
test_field__flags	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field__flags() {$/;"	f	function:bindgen_test_layout__IO_FILE
test_field__flags2	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field__flags2() {$/;"	f	function:bindgen_test_layout__IO_FILE
test_field__freeres_buf	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field__freeres_buf() {$/;"	f	function:bindgen_test_layout__IO_FILE
test_field__freeres_list	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field__freeres_list() {$/;"	f	function:bindgen_test_layout__IO_FILE
test_field__lock	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field__lock() {$/;"	f	function:bindgen_test_layout__IO_FILE
test_field__markers	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field__markers() {$/;"	f	function:bindgen_test_layout__IO_FILE
test_field__mode	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field__mode() {$/;"	f	function:bindgen_test_layout__IO_FILE
test_field__offset	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field__offset() {$/;"	f	function:bindgen_test_layout__IO_FILE
test_field__old_offset	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field__old_offset() {$/;"	f	function:bindgen_test_layout__IO_FILE
test_field__shortbuf	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field__shortbuf() {$/;"	f	function:bindgen_test_layout__IO_FILE
test_field__unused2	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field__unused2() {$/;"	f	function:bindgen_test_layout__IO_FILE
test_field__vtable_offset	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field__vtable_offset() {$/;"	f	function:bindgen_test_layout__IO_FILE
test_field__wide_data	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field__wide_data() {$/;"	f	function:bindgen_test_layout__IO_FILE
test_field_fp_offset	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field_fp_offset() {$/;"	f	function:bindgen_test_layout___va_list_tag
test_field_gp_offset	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field_gp_offset() {$/;"	f	function:bindgen_test_layout___va_list_tag
test_field_overflow_arg_area	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field_overflow_arg_area() {$/;"	f	function:bindgen_test_layout___va_list_tag
test_field_reg_save_area	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    fn test_field_reg_save_area() {$/;"	f	function:bindgen_test_layout___va_list_tag
test_fill	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn test_fill() {$/;"	f	module:test
test_fill_bytes_default	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn test_fill_bytes_default() {$/;"	f	module:test
test_fill_empty	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn test_fill_empty() {$/;"	f	module:test
test_float_assertions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn test_float_assertions() {$/;"	f	module:tests
test_float_overflow	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn test_float_overflow() {$/;"	f	module:tests
test_float_overflow_single	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn test_float_overflow_single() {$/;"	f	module:tests
test_floats	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn test_floats() {$/;"	f	module:tests
test_gen_bool	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn test_gen_bool() {$/;"	f	module:test
test_gen_range_float	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn test_gen_range_float() {$/;"	f	module:test
test_gen_range_int	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn test_gen_range_int() {$/;"	f	module:test
test_gen_range_panic_int	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn test_gen_range_panic_int() {$/;"	f	module:test
test_gen_range_panic_usize	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn test_gen_range_panic_usize() {$/;"	f	module:test
test_gen_ratio_average	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn test_gen_ratio_average() {$/;"	f	module:test
test_integers	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^    fn test_integers() {$/;"	f	module:tests
test_integers	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn test_integers() {$/;"	f	module:tests
test_iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        fn test_iter(iter: impl Iterator<Item = usize> + Clone) -> [i32; 9] {$/;"	f	function:test::test_iterator_choose_stable_stability
test_iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        fn test_iter<R: Rng + ?Sized, Iter: Iterator<Item = usize> + Clone>(r: &mut R, iter: Ite/;"	f	function:test::test_iterator_choose
test_iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        fn test_iter<R: Rng + ?Sized, Iter: Iterator<Item = usize> + Clone>(r: &mut R, iter: Ite/;"	f	function:test::test_iterator_choose_stable
test_iterator_choose	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn test_iterator_choose() {$/;"	f	module:test
test_iterator_choose_stable	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn test_iterator_choose_stable() {$/;"	f	module:test
test_iterator_choose_stable_stability	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn test_iterator_choose_stable_stability() {$/;"	f	module:test
test_make_an_iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^    fn test_make_an_iter() {$/;"	f	module:tests
test_make_filename_safe_replaces_characters	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn test_make_filename_safe_replaces_characters() {$/;"	f	module:test
test_make_filename_safe_respects_character_boundaries	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn test_make_filename_safe_respects_character_boundaries() {$/;"	f	module:test
test_make_filename_safe_truncates_long_strings	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn test_make_filename_safe_truncates_long_strings() {$/;"	f	module:test
test_misc	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^    fn test_misc() {$/;"	f	module:tests
test_mpolynomials	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^mod test_mpolynomials {$/;"	n
test_multiple_weighted_distributions	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn test_multiple_weighted_distributions() {$/;"	f	module:test
test_multiple_weighted_edge_cases	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn test_multiple_weighted_edge_cases() {$/;"	f	module:test
test_other	/home/einar/triton/twenty-first/twenty-first/src/shared_math/other.rs	/^mod test_other {$/;"	n
test_partial_shuffle	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn test_partial_shuffle() {$/;"	f	module:test
test_pass	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn test_pass(&self, _: &BenchmarkId, _: &ReportContext) {$/;"	P	implementation:CliReport
test_pass	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn test_pass(&self, _id: &BenchmarkId, _context: &ReportContext) {}$/;"	P	interface:Report
test_polynomials	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^mod test_polynomials {$/;"	n
test_proof_stream	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream.rs	/^pub mod test_proof_stream {$/;"	n
test_random	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs	/^    fn test_random() {$/;"	f	module:test
test_reader_rng_fill_bytes	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^    fn test_reader_rng_fill_bytes() {$/;"	f	module:test
test_reader_rng_insufficient_bytes	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^    fn test_reader_rng_insufficient_bytes() {$/;"	f	module:test
test_reader_rng_u32	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^    fn test_reader_rng_u32() {$/;"	f	module:test
test_reader_rng_u64	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^    fn test_reader_rng_u64() {$/;"	f	module:test
test_reseeding	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    fn test_reseeding() {$/;"	f	module:test
test_rng_boxed_trait	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn test_rng_boxed_trait() {$/;"	f	module:test
test_rng_trait_object	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn test_rng_trait_object() {$/;"	f	module:test
test_sample_alg	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn test_sample_alg() {$/;"	f	module:test
test_sample_boundaries	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn test_sample_boundaries() {$/;"	f	module:test
test_sample_iter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn test_sample_iter() {$/;"	f	module:test
test_sample_weighted	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn test_sample_weighted() {$/;"	f	module:test
test_samples	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs	/^        fn test_samples<T: Copy + core::fmt::Debug + PartialEq, D: Distribution<T>>($/;"	f	function:tests::value_stability
test_samples	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^        fn test_samples<T: Copy + core::fmt::Debug + PartialEq>(zero: T, expected: &[T])$/;"	f	function:tests::value_stability
test_samples	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^        fn test_samples<T: Copy + core::fmt::Debug + PartialEq, D: Distribution<T>>($/;"	f	function:tests::value_stability
test_samples	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^        fn test_samples<T: SampleUniform + Copy + core::fmt::Debug + PartialEq>($/;"	f	function:tests::value_stability
test_samples	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^        fn test_samples<X: SampleUniform + PartialOrd, I>($/;"	f	function:test::value_stability
test_serialization_index_vec	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn test_serialization_index_vec() {$/;"	f	module:test
test_serialization_step_rng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs	/^    fn test_serialization_step_rng() {$/;"	f	module:tests
test_serialization_uniform_duration	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn test_serialization_uniform_duration() {$/;"	f	module:tests
test_serializing_deserializing_bernoulli	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^    fn test_serializing_deserializing_bernoulli() {$/;"	f	module:test
test_shared	/home/einar/triton/twenty-first/twenty-first/src/lib.rs	/^pub mod test_shared;$/;"	n
test_shuffle	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn test_shuffle() {$/;"	f	module:test
test_slice_choose	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn test_slice_choose() {$/;"	f	module:test
test_start	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn test_start(&self, _id: &BenchmarkId, _context: &ReportContext) {}$/;"	P	interface:Report
test_start	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn test_start(&self, id: &BenchmarkId, _: &ReportContext) {$/;"	P	implementation:CliReport
test_stdrng_construction	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs	/^    fn test_stdrng_construction() {$/;"	f	module:test
test_thread_rng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/thread.rs	/^    fn test_thread_rng() {$/;"	f	module:test
test_trivial	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^    fn test_trivial() {$/;"	f	module:test
test_uniform_bad_limits_equal_int	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn test_uniform_bad_limits_equal_int() {$/;"	f	module:tests
test_uniform_bad_limits_flipped_int	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn test_uniform_bad_limits_flipped_int() {$/;"	f	module:tests
test_uniform_from_std_range	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn test_uniform_from_std_range() {$/;"	f	module:tests
test_uniform_from_std_range_inclusive	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn test_uniform_from_std_range_inclusive() {$/;"	f	module:tests
test_uniform_good_limits_equal_int	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn test_uniform_good_limits_equal_int() {$/;"	f	module:tests
test_uniform_serialization	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn test_uniform_serialization() {$/;"	f	module:tests
test_update_weights	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^    fn test_update_weights() {$/;"	f	module:test
test_utils	/home/einar/triton/twenty-first/twenty-first/src/utils.rs	/^mod test_utils {$/;"	n
test_weighted	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn test_weighted() {$/;"	f	module:test
test_weightedindex	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^    fn test_weightedindex() {$/;"	f	module:test
test_weightedindex_serde1	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^    fn test_weightedindex_serde1() {$/;"	f	module:test
test_zero_one	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn test_zero_one() {$/;"	f	module:b_prime_field_element_test
tests	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs	/^mod tests {$/;"	n
tests	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs	/^mod tests {$/;"	n
tests	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^mod tests {$/;"	n
tests	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^mod tests {$/;"	n
tests	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^mod tests {$/;"	n
tests	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs	/^mod tests {$/;"	n
tests	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro128plusplus.rs	/^mod tests {$/;"	n
tests	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro256plusplus.rs	/^mod tests {$/;"	n
text_overwrite	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn text_overwrite(&self) {$/;"	P	implementation:CliReport
thread	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs	/^#[cfg(all(feature = "std", feature = "std_rng"))] pub(crate) mod thread;$/;"	n
thread_rng	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/thread.rs	/^pub fn thread_rng() -> ThreadRng {$/;"	f
threshold	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    threshold: i64,$/;"	m	struct:ReseedingCore
throughput	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    pub fn throughput(&mut self, throughput: Throughput) -> &mut Self {$/;"	P	implementation:BenchmarkGroup
throughput	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    throughput: Option<Throughput>,$/;"	m	struct:BenchmarkGroup
throughput	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    throughput: Vec<Throughput>,$/;"	m	struct:RawBenchmarkId
throughput	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    throughput: Option<ConfidenceInterval>,$/;"	m	struct:Context
throughput	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub throughput: Option<Throughput>,$/;"	m	struct:BenchmarkId
throughput	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub throughput: Option<Throughput>,$/;"	m	struct:MeasurementData
throughput_num	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/csv_report.rs	/^    throughput_num: Option<&'a str>,$/;"	m	struct:CsvRow
throughput_type	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/csv_report.rs	/^    throughput_type: Option<&'a str>,$/;"	m	struct:CsvRow
thrpt_change	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    thrpt_change: Option<ConfidenceInterval>,$/;"	m	struct:Comparison
thumbnail	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/mod.rs	/^    pub fn thumbnail(mut self, value: bool) -> PlotContext<'a> {$/;"	P	implementation:PlotContext
thumbnail_height	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    thumbnail_height: usize,$/;"	m	struct:Context
thumbnail_height	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    thumbnail_height: usize,$/;"	m	struct:SummaryContext
thumbnail_width	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    thumbnail_width: usize,$/;"	m	struct:Context
thumbnail_width	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    thumbnail_width: usize,$/;"	m	struct:SummaryContext
time	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/format.rs	/^pub fn time(ns: f64) -> String {$/;"	f
timer	/home/einar/triton/twenty-first/twenty-first/src/timing_reporter.rs	/^    timer: Instant,$/;"	m	struct:TimingReporter
times	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    times: Vec<f64>,$/;"	m	struct:SavedSample
timing_reporter	/home/einar/triton/twenty-first/twenty-first/src/lib.rs	/^pub mod timing_reporter;$/;"	n
title	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    title: String,$/;"	m	struct:Context
title	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    title: String,$/;"	m	struct:BenchmarkId
tmpfile	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn tmpfile() -> *mut FILE;$/;"	f
tmpnam	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn tmpnam(arg1: *mut ::std::os::raw::c_char) -> *mut ::std::os::raw::c_char;$/;"	f
tmpnam_r	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn tmpnam_r(__s: *mut ::std::os::raw::c_char) -> *mut ::std::os::raw::c_char;$/;"	f
to_accumulator	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    fn to_accumulator(&mut self) -> MmrAccumulator<H> {$/;"	f
to_accumulator	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^    fn to_accumulator(&mut self) -> MmrAccumulator<H> {$/;"	P	implementation:MmrAccumulator
to_accumulator	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_trait.rs	/^    fn to_accumulator(&mut self) -> MmrAccumulator<H>;$/;"	P	interface:Mmr
to_async	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/bencher.rs	/^    pub fn to_async<'b, A: AsyncExecutor>(&'b mut self, runner: A) -> AsyncBencher<'a, 'b, A, M>/;"	P	implementation:Bencher
to_complete	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark.rs	/^    pub(crate) fn to_complete(&self, defaults: &BenchmarkConfig) -> BenchmarkConfig {$/;"	P	implementation:PartialBenchmarkConfig
to_f64	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^    fn to_f64(&self, val: &Self::Value) -> f64 {$/;"	P	implementation:WallTime
to_f64	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^    fn to_f64(&self, value: &Self::Value) -> f64;$/;"	P	interface:Measurement
to_gnuplot	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/summary.rs	/^    fn to_gnuplot(self) -> Scale {$/;"	P	implementation:AxisScale
to_sequence	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn to_sequence(&self) -> Vec<BFieldElement> {$/;"	P	implementation:U32s
to_sequence	/home/einar/triton/twenty-first/twenty-first/src/util_types/algebraic_hasher.rs	/^    fn to_sequence(&self) -> Vec<BFieldElement> {$/;"	P	implementation:BFieldElement
to_sequence	/home/einar/triton/twenty-first/twenty-first/src/util_types/algebraic_hasher.rs	/^    fn to_sequence(&self) -> Vec<BFieldElement> {$/;"	P	implementation:Digest
to_sequence	/home/einar/triton/twenty-first/twenty-first/src/util_types/algebraic_hasher.rs	/^    fn to_sequence(&self) -> Vec<BFieldElement> {$/;"	P	implementation:XFieldElement
to_sequence	/home/einar/triton/twenty-first/twenty-first/src/util_types/algebraic_hasher.rs	/^    fn to_sequence(&self) -> Vec<BFieldElement> {$/;"	P	implementation:u128
to_sequence	/home/einar/triton/twenty-first/twenty-first/src/util_types/algebraic_hasher.rs	/^    fn to_sequence(&self) -> Vec<BFieldElement> {$/;"	P	implementation:u32
to_sequence	/home/einar/triton/twenty-first/twenty-first/src/util_types/algebraic_hasher.rs	/^    fn to_sequence(&self) -> Vec<BFieldElement> {$/;"	P	implementation:usize
to_sequence	/home/einar/triton/twenty-first/twenty-first/src/util_types/algebraic_hasher.rs	/^    fn to_sequence(&self) -> Vec<BFieldElement>;$/;"	P	interface:Hashable
to_sequence	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^    fn to_sequence(&self) -> Vec<BFieldElement> {$/;"	P	implementation:MmrMembershipProof
to_sequence_length_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/algebraic_hasher.rs	/^    fn to_sequence_length_test() {$/;"	f	module:algebraic_hasher_tests
to_vec	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub fn to_vec(&self) -> Result<(Vec<bool>, Vec<i64>)>$/;"	P	implementation:Array_bool_1d
to_vec	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub fn to_vec(&self) -> Result<(Vec<i64>, Vec<i64>)>$/;"	P	implementation:Array_i64_1d
to_vec	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub fn to_vec(&self) -> Result<(Vec<u64>, Vec<i64>)>$/;"	P	implementation:Array_u64_1d
to_vec	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub fn to_vec(&self) -> Result<(Vec<u64>, Vec<i64>)>$/;"	P	implementation:Array_u64_2d
to_vec	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub fn to_vec(&self) -> Result<(Vec<u64>, Vec<i64>)>$/;"	P	implementation:Array_u64_3d
to_vec	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub fn to_vec(&self) -> Result<(Vec<u8>, Vec<i64>)>$/;"	P	implementation:Array_u8_2d
to_vec	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    pub fn to_vec(&self) -> Result<(Vec<u8>, Vec<i64>)>$/;"	P	implementation:Array_u8_3d
top	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    top: Option<I::Item>,$/;"	m	struct:PutBack
top	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/put_back_n_impl.rs	/^    top: Vec<I::Item>,$/;"	m	struct:PutBackN
top_group	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/groupbylazy.rs	/^    top_group: usize,$/;"	m	struct:GroupInner
total_duration	/home/einar/triton/twenty-first/twenty-first/src/timing_reporter.rs	/^    pub total_duration: Duration,$/;"	m	struct:TimingReport
total_weight	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^    total_weight: X,$/;"	m	struct:WeightedIndex
trace	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs	/^macro_rules! trace { ($($x:tt)*) => ($/;"	M
trace	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^    pub fn trace(input: &[BFieldElement; 10]) -> [[BFieldElement; STATE_SIZE]; 1 + NUM_ROUNDS] {$/;"	P	implementation:RescuePrimeRegular
trace_consistent_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^    fn trace_consistent_test() {$/;"	f	module:rescue_prime_regular_tests
traits	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^pub mod traits {$/;"	n
traits	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/lib.rs	/^mod traits;$/;"	n
traits	/home/einar/triton/twenty-first/twenty-first/src/shared_math.rs	/^pub mod traits;$/;"	n
transcript	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream.rs	/^    transcript: Vec<u8>,$/;"	m	struct:ProofStream
transcript	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^    transcript: Vec<BFieldElement>,$/;"	m	struct:ProofStream
transcript_index	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^    transcript_index: usize,$/;"	m	struct:ProofStream
transcript_length	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^    pub fn transcript_length(&self) -> usize {$/;"	f
transpose	/home/einar/triton/twenty-first/twenty-first/src/shared_math/other.rs	/^pub fn transpose<P: Copy>(codewords: &[Vec<P>]) -> Vec<Vec<P>> {$/;"	f
transpose_result	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^fn transpose_result<T, E>(result: Result<Option<T>, E>) -> Option<Result<T, E>> {$/;"	f
transpose_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/other.rs	/^    fn transpose_test() {$/;"	f	module:test_other
traverse_tree	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn traverse_tree<FF: FiniteField>($/;"	P	implementation:Node
tree_fold1	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn tree_fold1<F>(mut self, mut f: F) -> Option<Self::Item>$/;"	P	interface:Itertools
tree_m_ary	/home/einar/triton/twenty-first/twenty-first/src/util_types.rs	/^pub mod tree_m_ary;$/;"	n
true_	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub const true_: u32 = 1;$/;"	C
truncate_to_character_boundary	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^fn truncate_to_character_boundary(s: &mut String, max_len: usize) {$/;"	f
try_collect	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn try_collect<T, U, E>(self) -> Result<U, E>$/;"	P	interface:Itertools
try_else_return	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/macros_private.rs	/^macro_rules! try_else_return {$/;"	M
try_fill	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn try_fill<R: Rng + ?Sized>(&mut self, rng: &mut R) -> Result<(), Error> {$/;"	P	implementation:u8
try_fill	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn try_fill<R: Rng + ?Sized>(&mut self, rng: &mut R) -> Result<(), Error> {$/;"	f
try_fill	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn try_fill<R: Rng + ?Sized>(&mut self, rng: &mut R) -> Result<(), Error>;$/;"	P	interface:Fill
try_fill	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^    fn try_fill<T: Fill + ?Sized>(&mut self, dest: &mut T) -> Result<(), Error> {$/;"	P	interface:Rng
try_fill_bytes	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/read.rs	/^    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {$/;"	P	implementation:ReadRng
try_fill_bytes	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/adapter/reseeding.rs	/^    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {$/;"	f
try_fill_bytes	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs	/^    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {$/;"	P	implementation:StepRng
try_fill_bytes	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/small.rs	/^    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {$/;"	P	implementation:SmallRng
try_fill_bytes	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs	/^    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {$/;"	P	implementation:StdRng
try_fill_bytes	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/thread.rs	/^    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {$/;"	P	implementation:ThreadRng
try_fill_bytes	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro128plusplus.rs	/^    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {$/;"	P	implementation:Xoshiro128PlusPlus
try_fill_bytes	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/xoshiro256plusplus.rs	/^    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {$/;"	P	implementation:Xoshiro256PlusPlus
try_from	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn try_from(value: u64) -> Result<Self, Self::Error> {$/;"	P	implementation:U32s
try_from	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn try_from(value: BFieldElement) -> Result<Self, Self::Error> {$/;"	P	implementation:u32
try_from	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^    fn try_from(value: &[BFieldElement]) -> Result<Self, Self::Error> {$/;"	P	implementation:Digest
try_from	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^    fn try_from(value: Vec<BFieldElement>) -> Result<Self, Self::Error> {$/;"	P	implementation:Digest
try_from	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn try_from(value: &[BFieldElement]) -> Result<Self, Self::Error> {$/;"	P	implementation:XFieldElement
try_from	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn try_from(value: Vec<BFieldElement>) -> Result<Self, Self::Error> {$/;"	P	implementation:XFieldElement
try_parse	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^        fn try_parse(s: &str) -> Option<f64> {$/;"	f	method:Html::summarize
tukey	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/outliers/mod.rs	/^pub mod tukey;$/;"	n
tuple	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/mod.rs	/^pub mod tuple;$/;"	n
tuple_combinations	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub fn tuple_combinations<T, I>(iter: I) -> TupleCombinations<I, T>$/;"	f
tuple_combinations	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn tuple_combinations<T>(self) -> TupleCombinations<Self, T>$/;"	P	interface:Itertools
tuple_impl	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod tuple_impl;$/;"	n
tuple_impl	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^macro_rules! tuple_impl {$/;"	M
tuple_windows	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn tuple_windows<T>(self) -> TupleWindows<Self, T>$/;"	P	interface:Itertools
tuple_windows	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^pub fn tuple_windows<I, T>(mut iter: I) -> TupleWindows<I, T>$/;"	f
tuples	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn tuples<T>(self) -> Tuples<Self, T>$/;"	P	interface:Itertools
tuples	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/tuple_impl.rs	/^pub fn tuples<I, T>(iter: I) -> Tuples<I, T>$/;"	f
two_input_mmr_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    fn two_input_mmr_test() {$/;"	f	module:mmr_test
typical	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub fn typical(&self) -> &Distribution<f64> {$/;"	P	implementation:Distributions
typical	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub fn typical(&self) -> &Estimate {$/;"	P	implementation:Estimates
u128	/home/einar/triton/twenty-first/twenty-first/src/util_types/algebraic_hasher.rs	/^impl Hashable for u128 {$/;"	c
u32	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^impl UInt for u32 {$/;"	c
u32	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl TryFrom<BFieldElement> for u32 {$/;"	c
u32	/home/einar/triton/twenty-first/twenty-first/src/util_types/algebraic_hasher.rs	/^impl Hashable for u32 {$/;"	c
u32_conversion_test	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn u32_conversion_test() {$/;"	f	module:u32s_tests
u32s	/home/einar/triton/twenty-first/twenty-first/src/amount.rs	/^pub mod u32s;$/;"	n
u32s_tests	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^mod u32s_tests {$/;"	n
u64	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl From<&BFieldElement> for u64 {$/;"	c
u64	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl From<BFieldElement> for u64 {$/;"	c
u8	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs	/^impl Fill for [u8] {$/;"	c
u8	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^impl From<BFieldElement> for [u8; 8] {$/;"	c
uint_fast16_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type uint_fast16_t = ::std::os::raw::c_ulong;$/;"	t
uint_fast32_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type uint_fast32_t = ::std::os::raw::c_ulong;$/;"	t
uint_fast64_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type uint_fast64_t = ::std::os::raw::c_ulong;$/;"	t
uint_fast8_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type uint_fast8_t = ::std::os::raw::c_uchar;$/;"	t
uint_least16_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type uint_least16_t = __uint_least16_t;$/;"	t
uint_least32_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type uint_least32_t = __uint_least32_t;$/;"	t
uint_least64_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type uint_least64_t = __uint_least64_t;$/;"	t
uint_least8_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type uint_least8_t = __uint_least8_t;$/;"	t
uintmax_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type uintmax_t = __uintmax_t;$/;"	t
unfold	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/sources.rs	/^pub fn unfold<A, St, F>(initial_state: St, f: F) -> Unfold<St, F>$/;"	f
ungetc	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn ungetc(__c: ::std::os::raw::c_int, __stream: *mut FILE) -> ::std::os::raw::c_int;$/;"	f
uniform	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs	/^pub mod uniform;$/;"	n
uniform_distributions_can_be_compared	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn uniform_distributions_can_be_compared() {$/;"	f	module:tests
uniform_float_impl	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^macro_rules! uniform_float_impl {$/;"	M
uniform_int_impl	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^macro_rules! uniform_int_impl {$/;"	M
uniform_simd_int_impl	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^macro_rules! uniform_simd_int_impl {$/;"	M
unique	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn unique(self) -> Unique<Self>$/;"	P	interface:Itertools
unique	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/unique_impl.rs	/^pub fn unique<I>(iter: I) -> Unique<I>$/;"	f
unique_by	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn unique_by<V, F>(self, f: F) -> UniqueBy<Self, V, F>$/;"	P	interface:Itertools
unique_by	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/unique_impl.rs	/^pub fn unique_by<I, V, F>(iter: I, f: F) -> UniqueBy<I, V, F>$/;"	f
unique_exponent_vectors	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn unique_exponent_vectors(input: &MPolynomial<BFieldElement>) -> bool {$/;"	f	module:test_mpolynomials
unique_impl	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod unique_impl;$/;"	n
uniqueness_of_consecutive_emojis_bfe	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn uniqueness_of_consecutive_emojis_bfe() {$/;"	f	module:b_prime_field_element_test
uniqueness_of_consecutive_emojis_xfe	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn uniqueness_of_consecutive_emojis_xfe() {$/;"	f	module:x_field_element_test
unit	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/csv_report.rs	/^    unit: &'static str,$/;"	m	struct:CsvRow
univariate	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/mod.rs	/^pub mod univariate;$/;"	n
unlift	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    pub fn unlift(&self) -> Option<BFieldElement> {$/;"	P	implementation:XFieldElement
unwrap_partial_authentication_path	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    fn unwrap_partial_authentication_path($/;"	f
unziptuple	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod unziptuple;$/;"	n
update	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub fn update<I, F>(iter: I, f: F) -> Update<I, F>$/;"	f
update	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn update<F>(self, updater: F) -> Update<Self, F>$/;"	P	interface:Itertools
update_batch_membership_proofs_from_batch_leaf_mutations_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^    fn update_batch_membership_proofs_from_batch_leaf_mutations_test() {$/;"	f	module:mmr_membership_proof_test
update_batch_membership_proofs_from_leaf_mutations_new_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^    fn update_batch_membership_proofs_from_leaf_mutations_new_test() {$/;"	f	module:mmr_membership_proof_test
update_from_append	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^    pub fn update_from_append($/;"	P	implementation:MmrMembershipProof
update_from_leaf_mutation	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^    pub fn update_from_leaf_mutation($/;"	P	implementation:MmrMembershipProof
update_membership_proof_from_append_big_rescue_prime	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^    fn update_membership_proof_from_append_big_rescue_prime() {$/;"	f	module:mmr_membership_proof_test
update_membership_proof_from_append_big_tests	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^    fn update_membership_proof_from_append_big_tests() {$/;"	f	module:mmr_membership_proof_test
update_membership_proof_from_append_simple	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^    fn update_membership_proof_from_append_simple() {$/;"	f	module:mmr_membership_proof_test
update_membership_proof_from_leaf_mutation_blake3_big_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^    fn update_membership_proof_from_leaf_mutation_blake3_big_test() {$/;"	f	module:mmr_membership_proof_test
update_membership_proof_from_leaf_mutation_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^    fn update_membership_proof_from_leaf_mutation_test() {$/;"	f	module:mmr_membership_proof_test
update_weights	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^    pub fn update_weights(&mut self, new_weights: &[(usize, &X)]) -> Result<(), WeightedError>$/;"	P	implementation:WeightedIndex
upper	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    upper: String,$/;"	m	struct:ConfidenceInterval
upper_bound	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/estimate.rs	/^    pub upper_bound: f64,$/;"	m	struct:ConfidenceInterval
url	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    url: String,$/;"	m	struct:Plot
used	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^        used: HashMap<Key, bool>,$/;"	m	struct:private::Meta
used	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/unique_impl.rs	/^    used: HashMap<V, ()>,$/;"	m	struct:UniqueBy
usize	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^impl UInt for usize {$/;"	c
usize	/home/einar/triton/twenty-first/twenty-first/src/util_types/algebraic_hasher.rs	/^impl Hashable for usize {$/;"	c
util_types	/home/einar/triton/twenty-first/twenty-first/src/lib.rs	/^pub mod util_types;$/;"	n
utils	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs	/^mod utils;$/;"	n
utils	/home/einar/triton/twenty-first/twenty-first/src/lib.rs	/^pub mod utils;$/;"	n
v	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs	/^    v: u64,$/;"	m	struct:StepRng
va_list	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type va_list = __builtin_va_list;$/;"	t
vals	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/permutations.rs	/^    vals: LazyBuffer<I>,$/;"	m	struct:Permutations
value	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/bencher.rs	/^    pub(crate) value: M::Value,        \/\/ The measured value$/;"	m	struct:Bencher
value	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/csv_report.rs	/^    value: Option<&'a str>,$/;"	m	struct:CsvRow
value	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    fn value(output_directory: &Path, group_id: &str, value_str: &'a str) -> ReportLink<'a> {$/;"	P	implementation:ReportLink
value	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    value: Option<ReportLink<'a>>,$/;"	m	struct:BenchmarkValueGroup
value	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^        fn value(self) -> V {$/;"	P	implementation:private::JustValue
value	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^        fn value(self) -> V {$/;"	P	implementation:private::KeyValue
value	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/duplicates_impl.rs	/^        fn value(self) -> V;$/;"	P	interface:private::KeyXorValue
value	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    pub fn value(&self) -> u64 {$/;"	P	implementation:BFieldElement
value_stability	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs	/^    fn value_stability() {$/;"	f	module:test
value_stability	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs	/^    fn value_stability() {$/;"	f	module:tests
value_stability	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs	/^    fn value_stability() {$/;"	f	module:tests
value_stability	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs	/^    fn value_stability() {$/;"	f	module:tests
value_stability	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    fn value_stability() {$/;"	f	module:tests
value_stability	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^    fn value_stability() {$/;"	f	module:test
value_stability_choose	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn value_stability_choose() {$/;"	f	module:test
value_stability_choose_multiple	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn value_stability_choose_multiple() {$/;"	f	module:test
value_stability_choose_stable	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn value_stability_choose_stable() {$/;"	f	module:test
value_stability_sample	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn value_stability_sample() {$/;"	f	module:test
value_stability_slice	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^    fn value_stability_slice() {$/;"	f	module:test
value_str	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    value_str: Option<String>,$/;"	m	struct:RawBenchmarkId
value_str	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub value_str: Option<String>,$/;"	m	struct:BenchmarkId
value_type	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub fn value_type(&self) -> Option<ValueType> {$/;"	P	implementation:BenchmarkId
values	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    values: Option<Vec<ReportLink<'a>>>,$/;"	m	struct:BenchmarkGroup
values	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    unsafe fn values<C>(ctx: C, ptr: *mut Self, dst: *mut Self::RustType) -> Result<()>$/;"	P	implementation:futhark_bool_1d
values	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    unsafe fn values<C>(ctx: C, ptr: *mut Self, dst: *mut Self::RustType) -> Result<()>$/;"	P	implementation:futhark_i64_1d
values	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    unsafe fn values<C>(ctx: C, ptr: *mut Self, dst: *mut Self::RustType) -> Result<()>$/;"	P	implementation:futhark_u64_1d
values	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    unsafe fn values<C>(ctx: C, ptr: *mut Self, dst: *mut Self::RustType) -> Result<()>$/;"	P	implementation:futhark_u64_2d
values	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    unsafe fn values<C>(ctx: C, ptr: *mut Self, dst: *mut Self::RustType) -> Result<()>$/;"	P	implementation:futhark_u64_3d
values	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    unsafe fn values<C>(ctx: C, ptr: *mut Self, dst: *mut Self::RustType) -> Result<()>$/;"	P	implementation:futhark_u8_2d
values	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    unsafe fn values<C>(ctx: C, ptr: *mut Self, dst: *mut Self::RustType) -> Result<()>$/;"	P	implementation:futhark_u8_3d
values	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/arrays.rs	/^    unsafe fn values<C>(ctx: C, ptr: *mut Self, dst: *mut Self::RustType) -> Result<()>$/;"	P	interface:FutharkType
values	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    values: [u32; N],$/;"	m	struct:U32s
values	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_digest.rs	/^    pub fn values(&self) -> [BFieldElement; DIGEST_LENGTH] {$/;"	P	implementation:Digest
var	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/univariate/sample.rs	/^    pub fn var(&self, mean: Option<A>) -> A {$/;"	f
variable_count	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    pub variable_count: usize,$/;"	m	struct:MPolynomial
variable_size_blake3_mmr_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    fn variable_size_blake3_mmr_test() {$/;"	f	module:mmr_test
variable_size_rescue_prime_mmr_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    fn variable_size_rescue_prime_mmr_test() {$/;"	f	module:mmr_test
variables	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    pub fn variables(variable_count: usize) -> Vec<Self> {$/;"	P	implementation:MPolynomial
variables_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    fn variables_test() {$/;"	f	module:test_mpolynomials
vdprintf	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn vdprintf($/;"	f
vec	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/test.rs	/^pub fn vec<T>(size: usize, start: usize) -> Option<Vec<T>>$/;"	f
verbosity	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    pub verbosity: CliVerbosity,$/;"	m	struct:CliReport
verifier_fiat_shamir	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream.rs	/^    pub fn verifier_fiat_shamir(&self) -> Digest {$/;"	P	implementation:ProofStream
verifier_fiat_shamir	/home/einar/triton/twenty-first/twenty-first/src/util_types/proof_stream_typed.rs	/^    pub fn verifier_fiat_shamir(&self) -> Digest {$/;"	f
verify	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    pub fn verify($/;"	f
verify	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_membership_proof.rs	/^    pub fn verify($/;"	P	implementation:MmrMembershipProof
verify_against_correct_peak_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    fn verify_against_correct_peak_test() {$/;"	f	module:mmr_test
verify_all_leaves_individually	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    fn verify_all_leaves_individually() {$/;"	f	module:merkle_tree_test
verify_authentication_path	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    pub fn verify_authentication_path($/;"	f
verify_authentication_path_from_leaf_hash	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    pub fn verify_authentication_path_from_leaf_hash($/;"	f
verify_authentication_path_from_leaf_hash_with_memoization	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    fn verify_authentication_path_from_leaf_hash_with_memoization($/;"	f
verify_authentication_path_from_leaf_hash_with_memoization_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    fn verify_authentication_path_from_leaf_hash_with_memoization_test() {$/;"	f	module:merkle_tree_test
verify_authentication_structure	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    pub fn verify_authentication_structure($/;"	f
verify_authentication_structure_from_leaves	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    pub fn verify_authentication_structure_from_leaves($/;"	f
verify_batch_update	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/archival_mmr.rs	/^    fn verify_batch_update($/;"	f
verify_batch_update	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^    fn verify_batch_update($/;"	P	implementation:MmrAccumulator
verify_batch_update	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_trait.rs	/^    fn verify_batch_update($/;"	P	interface:Mmr
verify_batch_update_pbt	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^    fn verify_batch_update_pbt() {$/;"	f	module:accumulator_mmr_tests
verify_batch_update_single_append_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^    fn verify_batch_update_single_append_test() {$/;"	f	module:accumulator_mmr_tests
verify_batch_update_single_mutate_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^    fn verify_batch_update_single_mutate_test() {$/;"	f	module:accumulator_mmr_tests
verify_batch_update_two_append_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^    fn verify_batch_update_two_append_test() {$/;"	f	module:accumulator_mmr_tests
verify_batch_update_two_mutate_test	/home/einar/triton/twenty-first/twenty-first/src/util_types/mmr/mmr_accumulator.rs	/^    fn verify_batch_update_two_mutate_test() {$/;"	f	module:accumulator_mmr_tests
verify_some_payload	/home/einar/triton/twenty-first/twenty-first/src/util_types/merkle_tree.rs	/^    fn verify_some_payload() {$/;"	f	module:merkle_tree_test
vfprintf	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn vfprintf($/;"	f
vfscanf	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn vfscanf($/;"	f
vfscanf1	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn vfscanf1($/;"	f
violin	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^    fn violin($/;"	P	implementation:Gnuplot
violin	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/summary.rs	/^pub fn violin($/;"	f
violin	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/mod.rs	/^    fn violin($/;"	P	interface:Plotter
violin	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/mod.rs	/^    fn violin($/;"	P	implementation:PlottersBackend
violin	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/summary.rs	/^pub fn violin($/;"	f
violin_path	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/mod.rs	/^    pub fn violin_path(&self) -> PathBuf {$/;"	P	implementation:PlotContext
violin_plot	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/html/mod.rs	/^    violin_plot: Option<String>,$/;"	m	struct:SummaryContext
vprintf	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn vprintf($/;"	f
vscanf	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn vscanf($/;"	f
vscanf1	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn vscanf1($/;"	f
vsnprintf	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn vsnprintf($/;"	f
vsprintf	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn vsprintf($/;"	f
vsscanf	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn vsscanf($/;"	f
vsscanf1	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^    pub fn vsscanf1($/;"	f
wait	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/gnuplot_backend/mod.rs	/^    fn wait(&mut self) {$/;"	P	implementation:Gnuplot
wait	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/mod.rs	/^    fn wait(&mut self);$/;"	P	interface:Plotter
wait	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/plot/plotters_backend/mod.rs	/^    fn wait(&mut self) {}$/;"	P	implementation:PlottersBackend
warm_up	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/routine.rs	/^    fn warm_up(&mut self, m: &M, how_long: Duration, parameter: &T) -> (u64, u64) {$/;"	f
warm_up	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/routine.rs	/^    fn warm_up(&mut self, m: &M, how_long: Duration, parameter: &T) -> (u64, u64);$/;"	P	interface:Routine
warm_up_time	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark.rs	/^    pub warm_up_time: Duration,$/;"	m	struct:BenchmarkConfig
warm_up_time	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark.rs	/^    pub(crate) warm_up_time: Option<Duration>,$/;"	m	struct:PartialBenchmarkConfig
warm_up_time	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/benchmark_group.rs	/^    pub fn warm_up_time(&mut self, dur: Duration) -> &mut Self {$/;"	P	implementation:BenchmarkGroup
warm_up_time	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/connection.rs	/^    warm_up_time: Duration,$/;"	m	struct:BenchmarkConfig
warm_up_time	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    pub fn warm_up_time(mut self, dur: Duration) -> Criterion<M> {$/;"	P	implementation:Criterion
warmup	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn warmup(&self, _id: &BenchmarkId, _context: &ReportContext, _warmup_ns: f64) {}$/;"	P	interface:Report
warmup	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn warmup(&self, id: &BenchmarkId, _: &ReportContext, warmup_ns: f64) {$/;"	P	implementation:CliReport
warn	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs	/^macro_rules! warn { ($($x:tt)*) => ($/;"	M
wchar_t	/home/einar/triton/gpu/ruthark/gpu-accelerator/src/bindings.rs	/^pub type wchar_t = ::std::os::raw::c_int;$/;"	t
weight_distribution	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^    weight_distribution: X::Sampler,$/;"	m	struct:WeightedIndex
weighted	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs	/^pub mod weighted;$/;"	n
weighted_index	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs	/^mod weighted_index;$/;"	n
weighted_index_distributions_can_be_compared	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/weighted_index.rs	/^    fn weighted_index_distributions_can_be_compared() {$/;"	f	module:test
while_some	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^pub fn while_some<I>(iter: I) -> WhileSome<I> {$/;"	f
while_some	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn while_some<A>(self) -> WhileSome<Self>$/;"	P	interface:Itertools
window_size	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs	/^        window_size: usize,$/;"	m	struct:test::WindowHintedIterator
with_color	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn with_color(&self, color: Color, s: &str) -> String {$/;"	P	implementation:CliReport
with_filter	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    pub fn with_filter<S: Into<String>>(mut self, filter: S) -> Criterion<M> {$/;"	P	implementation:Criterion
with_measurement	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    pub fn with_measurement<M2: Measurement>(self, m: M2) -> Criterion<M2> {$/;"	P	implementation:Criterion
with_output_color	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    pub fn with_output_color(mut self, enabled: bool) -> Criterion<M> {$/;"	P	implementation:Criterion
with_plots	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    pub fn with_plots(mut self) -> Criterion<M> {$/;"	P	implementation:Criterion
with_position	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn with_position(self) -> WithPosition<Self>$/;"	P	interface:Itertools
with_position	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod with_position;$/;"	n
with_position	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/with_position.rs	/^pub fn with_position<I>(iter: I) -> WithPosition<I>$/;"	f
with_profiler	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    pub fn with_profiler<P: Profiler + 'static>(self, p: P) -> Criterion<M> {$/;"	P	implementation:Criterion
with_value	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/adaptors/mod.rs	/^    pub fn with_value(mut self, value: I::Item) -> Self {$/;"	f
without_plots	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/lib.rs	/^    pub fn without_plots(mut self) -> Criterion<M> {$/;"	P	implementation:Criterion
wmul	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    fn wmul(self, x: RHS) -> Self::Output;$/;"	P	interface:WideningMultiply
wmul_impl	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^macro_rules! wmul_impl {$/;"	M
wmul_impl_16	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^    macro_rules! wmul_impl_16 {$/;"	M	module:simd_wmul
wmul_impl_large	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^macro_rules! wmul_impl_large {$/;"	M
wmul_impl_usize	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs	/^macro_rules! wmul_impl_usize {$/;"	M
write_data	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/csv_report.rs	/^    fn write_data($/;"	P	implementation:CsvReportWriter
write_file	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/csv_report.rs	/^    fn write_file($/;"	P	implementation:FileCsvReport
writer	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/csv_report.rs	/^    writer: Writer<W>,$/;"	m	struct:CsvReportWriter
x	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/mod.rs	/^    pub fn x(&self) -> &'a Sample<X> {$/;"	f
x	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^            x: f32,$/;"	m	struct:tests::test_custom_uniform::MyF32
x_evaluate	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    pub fn x_evaluate(&self, polynomial: &Polynomial<XFieldElement>) -> Vec<XFieldElement> {$/;"	P	implementation:FriDomain
x_field_add_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn x_field_add_test() {$/;"	f	module:x_field_element_test
x_field_division_mul_pbt	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn x_field_division_mul_pbt() {$/;"	f	module:x_field_element_test
x_field_element	/home/einar/triton/twenty-first/twenty-first/src/shared_math.rs	/^pub mod x_field_element;$/;"	n
x_field_element_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^mod x_field_element_test {$/;"	n
x_field_into_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn x_field_into_test() {$/;"	f	module:x_field_element_test
x_field_inv_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn x_field_inv_test() {$/;"	f	module:x_field_element_test
x_field_inversion_pbt	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn x_field_inversion_pbt() {$/;"	f	module:x_field_element_test
x_field_mod_pow_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn x_field_mod_pow_test() {$/;"	f	module:x_field_element_test
x_field_mul_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn x_field_mul_test() {$/;"	f	module:x_field_element_test
x_field_ntt_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn x_field_ntt_test() {$/;"	f	module:x_field_element_test
x_field_overloaded_arithmetic_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn x_field_overloaded_arithmetic_test() {$/;"	f	module:x_field_element_test
x_field_random_element_generation_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn x_field_random_element_generation_test() {$/;"	f	module:x_field_element_test
x_field_sub_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn x_field_sub_test() {$/;"	f	module:x_field_element_test
x_field_xgcp_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn x_field_xgcp_test() {$/;"	f	module:x_field_element_test
x_interpolate	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    pub fn x_interpolate(&self, values: &[XFieldElement]) -> Polynomial<XFieldElement> {$/;"	P	implementation:FriDomain
x_powers	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    x_powers: usize,$/;"	m	struct:PolynomialEvaluationDataNode
x_values_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/fri.rs	/^    fn x_values_test() {$/;"	f	module:fri_domain_tests
xfield_basic_test_of_chu_ntt	/home/einar/triton/twenty-first/twenty-first/src/shared_math/ntt.rs	/^    fn xfield_basic_test_of_chu_ntt() {$/;"	f	module:fast_ntt_attempt_tests
xgcd	/home/einar/triton/twenty-first/twenty-first/src/shared_math/other.rs	/^pub fn xgcd<$/;"	f
xgcd	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn xgcd($/;"	P	implementation:Polynomial
xgcd	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    pub fn xgcd($/;"	P	implementation:XFieldElement
xgcd_b_field_pol_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn xgcd_b_field_pol_test() {$/;"	f	module:test_polynomials
xgcd_x_field_pol_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn xgcd_x_field_pol_test() {$/;"	f	module:test_polynomials
xlix	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^    fn xlix(sponge: &mut RescuePrimeRegularState) {$/;"	P	implementation:RescuePrimeRegular
xlix_round	/home/einar/triton/twenty-first/twenty-first/src/shared_math/rescue_prime_regular.rs	/^    fn xlix_round(sponge: &mut RescuePrimeRegularState, round_index: usize) {$/;"	P	implementation:RescuePrimeRegular
xoshiro128plusplus	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs	/^mod xoshiro128plusplus;$/;"	n
xoshiro256plusplus	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs	/^mod xoshiro256plusplus;$/;"	n
y	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/stats/bivariate/mod.rs	/^    pub fn y(&self) -> &'a Sample<Y> {$/;"	f
yellow	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/report.rs	/^    fn yellow(&self, s: &str) -> String {$/;"	P	implementation:CliReport
z	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs	/^    z: X, \/\/ either ints_to_reject or zone depending on implementation$/;"	m	struct:UniformInt
zero	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^    fn zero(&self) -> Self::Value {$/;"	P	implementation:WallTime
zero	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.4.0/src/measurement.rs	/^    fn zero(&self) -> Self::Value;$/;"	P	interface:Measurement
zero	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn zero() -> Self {$/;"	P	implementation:u32
zero	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn zero() -> Self {$/;"	P	implementation:usize
zero	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/index.rs	/^    fn zero() -> Self;$/;"	P	interface:UInt
zero	/home/einar/triton/twenty-first/twenty-first/src/amount/dyadic_rationals.rs	/^    fn zero() -> Self {$/;"	P	implementation:DyadicRational
zero	/home/einar/triton/twenty-first/twenty-first/src/amount/u32s.rs	/^    fn zero() -> Self {$/;"	P	implementation:U32s
zero	/home/einar/triton/twenty-first/twenty-first/src/shared_math/b_field_element.rs	/^    fn zero() -> Self {$/;"	P	implementation:BFieldElement
zero	/home/einar/triton/twenty-first/twenty-first/src/shared_math/mpolynomial.rs	/^    pub fn zero(variable_count: usize) -> Self {$/;"	P	implementation:MPolynomial
zero	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn zero() -> Self {$/;"	P	implementation:Polynomial
zero	/home/einar/triton/twenty-first/twenty-first/src/shared_math/x_field_element.rs	/^    fn zero() -> Self {$/;"	P	implementation:XFieldElement
zero_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn zero_test() {$/;"	f	module:test_polynomials
zerofier	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    pub fn zerofier(domain: &[FF]) -> Self {$/;"	P	implementation:Polynomial
zerofier_test	/home/einar/triton/twenty-first/twenty-first/src/shared_math/polynomial.rs	/^    fn zerofier_test() {$/;"	f	module:test_polynomials
zip	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/free.rs	/^pub fn zip<I, J>(i: I, j: J) -> Zip<I::IntoIter, J::IntoIter>$/;"	f
zip_eq	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn zip_eq<J>(self, other: J) -> ZipEq<Self, J::IntoIter>$/;"	P	interface:Itertools
zip_eq	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/zip_eq_impl.rs	/^pub fn zip_eq<I, J>(i: I, j: J) -> ZipEq<I::IntoIter, J::IntoIter>$/;"	f
zip_eq_impl	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod zip_eq_impl;$/;"	n
zip_longest	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^    fn zip_longest<J>(self, other: J) -> ZipLongest<Self, J::IntoIter>$/;"	P	interface:Itertools
zip_longest	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod zip_longest;$/;"	n
zip_longest	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/zip_longest.rs	/^pub fn zip_longest<T, U>(a: T, b: U) -> ZipLongest<T, U>$/;"	f
ziptuple	/home/einar/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.5/src/lib.rs	/^mod ziptuple;$/;"	n
